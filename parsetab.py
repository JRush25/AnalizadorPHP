
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARRAY ARRAY_MAP ASIGNACION BOOLEANF BOOLEANT CADENA CATCH COMA DECREMENTO DIVIDE DO DOUBLE_ARROW ECHO ELSE ELSEIF EXCEPTION FIN FLOAT FOR FUNCTION ID IF IGUAL INCREMENTO INICIO INSERT IS_NOT_EQUAL LCORCH LLLAVE LPAREN MAYOR MAYORIGUAL MENOR MENORIGUAL MINUS MOD NFUNCION NUMBER OR PCOMA PLUS PRINT RCORCH REF RETURN RLLAVE RPAREN SORT TIMES TRY WHILEprograma : INICIO sentencias FINsentencias : asignacion\n                    | comparacion\n                    | funcion\n                    | impresion\n                    | repeticion\n                    | expresion\n                    | excepcion\n                    | estdatos\n    asignacion : ID ASIGNACION valor PCOMA\n                | ID REF ID PCOMA\n                | ID ASIGNACION estdatos PCOMA\n                | ID ASIGNACION expresion PCOMAvalor : ID\n            | NUMBER\n            | FLOAT\n            | boolean\n            | CADENAboolean : BOOLEANT\n                | BOOLEANFopcomparacion : IGUAL\n                    | MAYOR\n                    | MENOR\n                    | MAYORIGUAL\n                    | MENORIGUAL\n                    | IS_NOT_EQUALexpcmp : valor opcomparacion valor\n            | LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN\n             expcmplog : expcmp oplog expcmp\n                | expcmp oplog expcmplogoplog : AND\n            | ORcomparacion : IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE\n                    | IF LPAREN expcmplog RPAREN LLLAVE sentencias RLLAVEcomparacion : IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVEcomparacion : IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE array : ARRAY LPAREN contenido RPAREN\n            contenido : valor DOUBLE_ARROW valor\n                | valor DOUBLE_ARROW valor COMA contenido\n                | valor\n                | valor COMA contenidosort : SORT LPAREN ID RPAREN PCOMAestdatos : array\n                | array_map\n                | heapexpresionmat : NUMBER operadormat NUMBERoperadormat : PLUS\n                    | MINUS\n                    | TIMES\n                    | DIVIDE\n                    | MODexpresion : expresionmat\n                | expcmplogfuncion : sortfuncion : FUNCTION NFUNCION LPAREN args RPAREN LLLAVE sentencias RLLAVE\n            | FUNCTION NFUNCION LPAREN args RPAREN LLLAVE sentencias RETURN valor PCOMA RLLAVEargs : ID\n            | ID COMA argsexcepcion : TRY LLLAVE sentencias RLLAVE CATCH LPAREN EXCEPTION ID RPAREN LLLAVE ECHO CADENA COMA ID RLLAVEimpresion : ECHO valor PCOMA\n             | PRINT valor PCOMA\n             | PRINT expresionmat PCOMArepeticionrep : MAYOR\n                  | MENOR\n                  | MAYORIGUAL\n                  | MENORIGUAL actualizar : INCREMENTO\n                | DECREMENTO\n  repeticion : FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVErepeticion : WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE\n                  | DO LLLAVE sentencias ID actualizar PCOMA RLLAVE WHILE LPAREN ID opcomparacion valor RPAREN PCOMA\n  array_map : ARRAY_MAP LPAREN funcion COMA array RPAREN PCOMAheap : INSERT LPAREN LCORCH NUMBER COMA NUMBER RCORCH RPAREN PCOMA\n                | INSERT LPAREN ARRAY LPAREN valor DOUBLE_ARROW NUMBER RPAREN RPAREN PCOMA'
    
_lr_action_items = {'INICIO':([0,],[2,]),'$end':([1,40,],[0,-1,]),'ID':([2,4,5,6,7,8,9,10,11,15,17,18,20,21,22,28,29,30,31,36,37,38,39,41,42,43,44,45,46,47,48,49,50,52,53,54,55,56,62,69,70,71,72,73,80,83,84,85,86,87,88,89,91,93,101,102,103,104,111,115,116,117,120,121,122,125,132,141,143,147,151,152,153,156,158,160,166,167,173,178,179,180,184,186,192,196,197,199,200,203,205,207,213,215,216,220,221,222,224,],[12,-2,-3,-4,-5,-6,-7,-8,-9,52,-53,-54,52,52,-52,-18,-43,-44,-45,-16,-17,-19,-20,52,79,52,-21,-22,-23,-24,-25,-26,52,-14,-15,52,-31,-32,90,92,12,12,95,52,-27,52,-29,-30,109,-60,-61,-62,-46,112,-10,-12,-13,-11,52,-37,52,52,52,12,12,109,-42,12,155,52,-33,-34,52,12,175,-72,-55,52,183,12,52,52,194,-73,201,-74,-35,-28,-56,52,12,-70,217,12,-71,-59,12,-69,-36,]),'IF':([2,70,71,121,122,141,156,178,205,215,221,],[14,14,14,14,14,14,14,14,14,14,14,]),'FUNCTION':([2,70,71,74,121,122,141,156,178,205,215,221,],[19,19,19,19,19,19,19,19,19,19,19,19,]),'ECHO':([2,70,71,121,122,141,156,178,195,205,215,221,],[20,20,20,20,20,20,20,20,204,20,20,20,]),'PRINT':([2,70,71,121,122,141,156,178,205,215,221,],[21,21,21,21,21,21,21,21,21,21,21,]),'FOR':([2,70,71,121,122,141,156,178,205,215,221,],[23,23,23,23,23,23,23,23,23,23,23,]),'WHILE':([2,70,71,121,122,141,156,157,178,205,215,221,],[25,25,25,25,25,25,25,174,25,25,25,25,]),'DO':([2,70,71,121,122,141,156,178,205,215,221,],[26,26,26,26,26,26,26,26,26,26,26,]),'TRY':([2,70,71,121,122,141,156,178,205,215,221,],[27,27,27,27,27,27,27,27,27,27,27,]),'SORT':([2,70,71,74,121,122,141,156,178,205,215,221,],[32,32,32,32,32,32,32,32,32,32,32,32,]),'NUMBER':([2,15,20,21,41,43,44,45,46,47,48,49,50,54,55,56,63,64,65,66,67,68,70,71,73,83,99,110,111,116,117,120,121,122,136,141,147,150,153,156,167,168,169,170,171,172,178,179,180,203,205,215,221,],[24,53,53,61,61,53,-21,-22,-23,-24,-25,-26,53,53,-31,-32,91,-47,-48,-49,-50,-51,24,24,53,53,119,126,53,53,53,53,24,24,149,24,53,162,53,24,53,182,-63,-64,-65,-66,24,53,53,53,24,24,24,]),'ARRAY':([2,41,70,71,75,118,121,122,141,156,178,205,215,221,],[33,33,33,33,100,33,33,33,33,33,33,33,33,33,]),'ARRAY_MAP':([2,41,70,71,121,122,141,156,178,205,215,221,],[34,34,34,34,34,34,34,34,34,34,34,34,]),'INSERT':([2,41,70,71,121,122,141,156,178,205,215,221,],[35,35,35,35,35,35,35,35,35,35,35,35,]),'LPAREN':([2,14,23,25,32,33,34,35,41,50,54,55,56,57,70,71,100,121,122,131,140,141,156,164,174,178,179,205,215,221,],[15,50,62,69,72,73,74,75,15,15,15,-31,-32,86,15,15,120,15,15,146,153,15,15,179,184,15,15,15,15,15,]),'FLOAT':([2,15,20,21,41,43,44,45,46,47,48,49,50,54,55,56,70,71,73,83,111,116,117,120,121,122,141,147,153,156,167,178,179,180,203,205,215,221,],[36,36,36,36,36,36,-21,-22,-23,-24,-25,-26,36,36,-31,-32,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'CADENA':([2,15,20,21,41,43,44,45,46,47,48,49,50,54,55,56,70,71,73,83,111,116,117,120,121,122,141,147,153,156,167,178,179,180,203,204,205,215,221,],[28,28,28,28,28,28,-21,-22,-23,-24,-25,-26,28,28,-31,-32,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,209,28,28,28,]),'BOOLEANT':([2,15,20,21,41,43,44,45,46,47,48,49,50,54,55,56,70,71,73,83,111,116,117,120,121,122,141,147,153,156,167,178,179,180,203,205,215,221,],[38,38,38,38,38,38,-21,-22,-23,-24,-25,-26,38,38,-31,-32,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'BOOLEANF':([2,15,20,21,41,43,44,45,46,47,48,49,50,54,55,56,70,71,73,83,111,116,117,120,121,122,141,147,153,156,167,178,179,180,203,205,215,221,],[39,39,39,39,39,39,-21,-22,-23,-24,-25,-26,39,39,-31,-32,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'FIN':([3,4,5,6,7,8,9,10,11,17,18,22,28,29,30,31,36,37,38,39,52,53,80,84,85,87,88,89,91,101,102,103,104,115,132,151,152,160,166,186,196,197,199,200,207,216,220,222,224,],[40,-2,-3,-4,-5,-6,-7,-8,-9,-53,-54,-52,-18,-43,-44,-45,-16,-17,-19,-20,-14,-15,-27,-29,-30,-60,-61,-62,-46,-10,-12,-13,-11,-37,-42,-33,-34,-72,-55,-73,-74,-35,-28,-56,-70,-71,-59,-69,-36,]),'RLLAVE':([4,5,6,7,8,9,10,11,17,18,22,28,29,30,31,36,37,38,39,52,53,80,84,85,87,88,89,91,94,101,102,103,104,115,132,138,139,145,151,152,154,160,166,186,188,191,196,197,199,200,202,207,210,216,217,219,220,222,223,224,],[-2,-3,-4,-5,-6,-7,-8,-9,-53,-54,-52,-18,-43,-44,-45,-16,-17,-19,-20,-14,-15,-27,-29,-30,-60,-61,-62,-46,113,-10,-12,-13,-11,-37,-42,151,152,157,-33,-34,166,-72,-55,-73,197,200,-74,-35,-28,-56,207,-70,214,-71,220,222,-59,-69,224,-36,]),'RETURN':([4,5,6,7,8,9,10,11,17,18,22,28,29,30,31,36,37,38,39,52,53,80,84,85,87,88,89,91,101,102,103,104,115,132,151,152,154,160,166,186,196,197,199,200,207,216,220,222,224,],[-2,-3,-4,-5,-6,-7,-8,-9,-53,-54,-52,-18,-43,-44,-45,-16,-17,-19,-20,-14,-15,-27,-29,-30,-60,-61,-62,-46,-10,-12,-13,-11,-37,-42,-33,-34,167,-72,-55,-73,-74,-35,-28,-56,-70,-71,-59,-69,-36,]),'ASIGNACION':([12,90,],[41,110,]),'REF':([12,],[42,]),'IGUAL':([12,13,24,28,36,37,38,39,51,52,53,61,76,92,165,194,],[-14,44,-15,-18,-16,-17,-19,-20,44,-14,-15,-15,44,44,44,44,]),'MAYOR':([12,13,24,28,36,37,38,39,51,52,53,61,76,92,155,165,194,],[-14,45,-15,-18,-16,-17,-19,-20,45,-14,-15,-15,45,45,169,45,45,]),'MENOR':([12,13,24,28,36,37,38,39,51,52,53,61,76,92,155,165,194,],[-14,46,-15,-18,-16,-17,-19,-20,46,-14,-15,-15,46,46,170,46,46,]),'MAYORIGUAL':([12,13,24,28,36,37,38,39,51,52,53,61,76,92,155,165,194,],[-14,47,-15,-18,-16,-17,-19,-20,47,-14,-15,-15,47,47,171,47,47,]),'MENORIGUAL':([12,13,24,28,36,37,38,39,51,52,53,61,76,92,155,165,194,],[-14,48,-15,-18,-16,-17,-19,-20,48,-14,-15,-15,48,48,172,48,48,]),'IS_NOT_EQUAL':([12,13,24,28,36,37,38,39,51,52,53,61,76,92,165,194,],[-14,49,-15,-18,-16,-17,-19,-20,49,-14,-15,-15,49,49,49,49,]),'AND':([16,28,36,37,38,39,52,53,80,81,84,123,199,],[55,-18,-16,-17,-19,-20,-14,-15,-27,55,55,55,-28,]),'OR':([16,28,36,37,38,39,52,53,80,81,84,123,199,],[56,-18,-16,-17,-19,-20,-14,-15,-27,56,56,56,-28,]),'PCOMA':([17,22,28,29,30,31,36,37,38,39,52,53,58,59,60,61,76,77,78,79,80,84,85,91,114,115,126,128,129,130,148,160,176,181,182,186,187,193,196,199,212,],[-53,-52,-18,-43,-44,-45,-16,-17,-19,-20,-14,-15,87,88,89,-15,101,102,103,104,-27,-29,-30,-46,132,-37,143,145,-67,-68,160,-72,186,191,192,-73,196,202,-74,-28,216,]),'COMA':([18,28,36,37,38,39,52,53,97,98,109,119,132,133,166,200,209,],[-54,-18,-16,-17,-19,-20,-14,-15,117,118,125,136,-42,147,-55,-56,213,]),'NFUNCION':([19,],[57,]),'PLUS':([24,61,],[64,64,]),'MINUS':([24,61,],[65,65,]),'TIMES':([24,61,],[66,66,]),'DIVIDE':([24,61,],[67,67,]),'MOD':([24,61,],[68,68,]),'LLLAVE':([26,27,105,106,124,144,163,185,198,211,218,],[70,71,121,122,141,156,178,195,205,215,221,]),'RPAREN':([28,36,37,38,39,52,53,80,81,82,84,85,95,96,97,107,108,109,115,127,129,130,133,134,135,142,159,161,162,175,177,189,190,199,206,208,],[-18,-16,-17,-19,-20,-14,-15,-27,105,106,-29,-30,114,115,-40,123,124,-57,-37,144,-67,-68,-38,-41,148,-58,-39,176,177,185,187,198,199,-28,211,212,]),'DOUBLE_ARROW':([28,36,37,38,39,52,53,97,137,],[-18,-16,-17,-19,-20,-14,-15,116,150,]),'LCORCH':([75,],[99,]),'INCREMENTO':([112,183,201,],[129,129,129,]),'DECREMENTO':([112,183,201,],[130,130,130,]),'CATCH':([113,],[131,]),'EXCEPTION':([146,],[158,]),'RCORCH':([149,],[161,]),'ELSE':([151,214,],[163,218,]),'ELSEIF':([151,],[164,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'sentencias':([2,70,71,121,122,141,156,178,205,215,221,],[3,93,94,138,139,154,173,188,210,219,223,]),'asignacion':([2,70,71,121,122,141,156,178,205,215,221,],[4,4,4,4,4,4,4,4,4,4,4,]),'comparacion':([2,70,71,121,122,141,156,178,205,215,221,],[5,5,5,5,5,5,5,5,5,5,5,]),'funcion':([2,70,71,74,121,122,141,156,178,205,215,221,],[6,6,6,98,6,6,6,6,6,6,6,6,]),'impresion':([2,70,71,121,122,141,156,178,205,215,221,],[7,7,7,7,7,7,7,7,7,7,7,]),'repeticion':([2,70,71,121,122,141,156,178,205,215,221,],[8,8,8,8,8,8,8,8,8,8,8,]),'expresion':([2,41,70,71,121,122,141,156,178,205,215,221,],[9,78,9,9,9,9,9,9,9,9,9,9,]),'excepcion':([2,70,71,121,122,141,156,178,205,215,221,],[10,10,10,10,10,10,10,10,10,10,10,]),'estdatos':([2,41,70,71,121,122,141,156,178,205,215,221,],[11,77,11,11,11,11,11,11,11,11,11,11,]),'valor':([2,15,20,21,41,43,50,54,70,71,73,83,111,116,117,120,121,122,141,147,153,156,167,178,179,180,203,205,215,221,],[13,51,58,59,76,80,13,13,13,13,97,107,127,133,97,137,13,13,13,97,165,13,181,13,13,190,208,13,13,13,]),'expcmp':([2,41,50,54,70,71,121,122,141,156,178,179,205,215,221,],[16,16,81,84,16,16,16,16,16,16,16,189,16,16,16,]),'expcmplog':([2,41,50,54,70,71,121,122,141,156,178,205,215,221,],[17,17,82,85,17,17,17,17,17,17,17,17,17,17,]),'sort':([2,70,71,74,121,122,141,156,178,205,215,221,],[18,18,18,18,18,18,18,18,18,18,18,18,]),'expresionmat':([2,21,41,70,71,121,122,141,156,178,205,215,221,],[22,60,22,22,22,22,22,22,22,22,22,22,22,]),'array':([2,41,70,71,118,121,122,141,156,178,205,215,221,],[29,29,29,29,135,29,29,29,29,29,29,29,29,]),'array_map':([2,41,70,71,121,122,141,156,178,205,215,221,],[30,30,30,30,30,30,30,30,30,30,30,30,]),'heap':([2,41,70,71,121,122,141,156,178,205,215,221,],[31,31,31,31,31,31,31,31,31,31,31,31,]),'boolean':([2,15,20,21,41,43,50,54,70,71,73,83,111,116,117,120,121,122,141,147,153,156,167,178,179,180,203,205,215,221,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'opcomparacion':([13,51,76,92,165,194,],[43,83,43,111,180,203,]),'oplog':([16,81,84,123,],[54,54,54,140,]),'operadormat':([24,61,],[63,63,]),'contenido':([73,117,147,],[96,134,159,]),'args':([86,125,],[108,142,]),'actualizar':([112,183,201,],[128,193,206,]),'repeticionrep':([155,],[168,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> INICIO sentencias FIN','programa',3,'p_programa','sintactico.py',9),
  ('sentencias -> asignacion','sentencias',1,'p_sentencias','sintactico.py',14),
  ('sentencias -> comparacion','sentencias',1,'p_sentencias','sintactico.py',15),
  ('sentencias -> funcion','sentencias',1,'p_sentencias','sintactico.py',16),
  ('sentencias -> impresion','sentencias',1,'p_sentencias','sintactico.py',17),
  ('sentencias -> repeticion','sentencias',1,'p_sentencias','sintactico.py',18),
  ('sentencias -> expresion','sentencias',1,'p_sentencias','sintactico.py',19),
  ('sentencias -> excepcion','sentencias',1,'p_sentencias','sintactico.py',20),
  ('sentencias -> estdatos','sentencias',1,'p_sentencias','sintactico.py',21),
  ('asignacion -> ID ASIGNACION valor PCOMA','asignacion',4,'p_asignacion','sintactico.py',26),
  ('asignacion -> ID REF ID PCOMA','asignacion',4,'p_asignacion','sintactico.py',27),
  ('asignacion -> ID ASIGNACION estdatos PCOMA','asignacion',4,'p_asignacion','sintactico.py',28),
  ('asignacion -> ID ASIGNACION expresion PCOMA','asignacion',4,'p_asignacion','sintactico.py',29),
  ('valor -> ID','valor',1,'p_valor','sintactico.py',35),
  ('valor -> NUMBER','valor',1,'p_valor','sintactico.py',36),
  ('valor -> FLOAT','valor',1,'p_valor','sintactico.py',37),
  ('valor -> boolean','valor',1,'p_valor','sintactico.py',38),
  ('valor -> CADENA','valor',1,'p_valor','sintactico.py',39),
  ('boolean -> BOOLEANT','boolean',1,'p_boolean','sintactico.py',42),
  ('boolean -> BOOLEANF','boolean',1,'p_boolean','sintactico.py',43),
  ('opcomparacion -> IGUAL','opcomparacion',1,'p_opcomparacion','sintactico.py',45),
  ('opcomparacion -> MAYOR','opcomparacion',1,'p_opcomparacion','sintactico.py',46),
  ('opcomparacion -> MENOR','opcomparacion',1,'p_opcomparacion','sintactico.py',47),
  ('opcomparacion -> MAYORIGUAL','opcomparacion',1,'p_opcomparacion','sintactico.py',48),
  ('opcomparacion -> MENORIGUAL','opcomparacion',1,'p_opcomparacion','sintactico.py',49),
  ('opcomparacion -> IS_NOT_EQUAL','opcomparacion',1,'p_opcomparacion','sintactico.py',50),
  ('expcmp -> valor opcomparacion valor','expcmp',3,'p_expresioncmp','sintactico.py',54),
  ('expcmp -> LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN','expcmp',11,'p_expresioncmp','sintactico.py',55),
  ('expcmplog -> expcmp oplog expcmp','expcmplog',3,'p_expresioncmplog','sintactico.py',60),
  ('expcmplog -> expcmp oplog expcmplog','expcmplog',3,'p_expresioncmplog','sintactico.py',61),
  ('oplog -> AND','oplog',1,'p_oplog','sintactico.py',65),
  ('oplog -> OR','oplog',1,'p_oplog','sintactico.py',66),
  ('comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE','comparacion',7,'p_comparacionif','sintactico.py',71),
  ('comparacion -> IF LPAREN expcmplog RPAREN LLLAVE sentencias RLLAVE','comparacion',7,'p_comparacionif','sintactico.py',72),
  ('comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE','comparacion',11,'p_comparacionif_else','sintactico.py',76),
  ('comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE','comparacion',18,'p_comparacionif_elseif_else','sintactico.py',79),
  ('array -> ARRAY LPAREN contenido RPAREN','array',4,'p_array','sintactico.py',82),
  ('contenido -> valor DOUBLE_ARROW valor','contenido',3,'p_contenido','sintactico.py',86),
  ('contenido -> valor DOUBLE_ARROW valor COMA contenido','contenido',5,'p_contenido','sintactico.py',87),
  ('contenido -> valor','contenido',1,'p_contenido','sintactico.py',88),
  ('contenido -> valor COMA contenido','contenido',3,'p_contenido','sintactico.py',89),
  ('sort -> SORT LPAREN ID RPAREN PCOMA','sort',5,'p_sort','sintactico.py',93),
  ('estdatos -> array','estdatos',1,'p_estdatos','sintactico.py',96),
  ('estdatos -> array_map','estdatos',1,'p_estdatos','sintactico.py',97),
  ('estdatos -> heap','estdatos',1,'p_estdatos','sintactico.py',98),
  ('expresionmat -> NUMBER operadormat NUMBER','expresionmat',3,'p_expresionmat','sintactico.py',101),
  ('operadormat -> PLUS','operadormat',1,'p_operadormat_plus','sintactico.py',117),
  ('operadormat -> MINUS','operadormat',1,'p_operadormat_plus','sintactico.py',118),
  ('operadormat -> TIMES','operadormat',1,'p_operadormat_plus','sintactico.py',119),
  ('operadormat -> DIVIDE','operadormat',1,'p_operadormat_plus','sintactico.py',120),
  ('operadormat -> MOD','operadormat',1,'p_operadormat_plus','sintactico.py',121),
  ('expresion -> expresionmat','expresion',1,'p_expresion','sintactico.py',125),
  ('expresion -> expcmplog','expresion',1,'p_expresion','sintactico.py',126),
  ('funcion -> sort','funcion',1,'p_funcion','sintactico.py',128),
  ('funcion -> FUNCTION NFUNCION LPAREN args RPAREN LLLAVE sentencias RLLAVE','funcion',8,'p_funciondef','sintactico.py',131),
  ('funcion -> FUNCTION NFUNCION LPAREN args RPAREN LLLAVE sentencias RETURN valor PCOMA RLLAVE','funcion',11,'p_funciondef','sintactico.py',132),
  ('args -> ID','args',1,'p_args','sintactico.py',136),
  ('args -> ID COMA args','args',3,'p_args','sintactico.py',137),
  ('excepcion -> TRY LLLAVE sentencias RLLAVE CATCH LPAREN EXCEPTION ID RPAREN LLLAVE ECHO CADENA COMA ID RLLAVE','excepcion',15,'p_excepcion','sintactico.py',140),
  ('impresion -> ECHO valor PCOMA','impresion',3,'p_impresion','sintactico.py',145),
  ('impresion -> PRINT valor PCOMA','impresion',3,'p_impresion','sintactico.py',146),
  ('impresion -> PRINT expresionmat PCOMA','impresion',3,'p_impresion','sintactico.py',147),
  ('repeticionrep -> MAYOR','repeticionrep',1,'p_repeticioncompfor','sintactico.py',151),
  ('repeticionrep -> MENOR','repeticionrep',1,'p_repeticioncompfor','sintactico.py',152),
  ('repeticionrep -> MAYORIGUAL','repeticionrep',1,'p_repeticioncompfor','sintactico.py',153),
  ('repeticionrep -> MENORIGUAL','repeticionrep',1,'p_repeticioncompfor','sintactico.py',154),
  ('actualizar -> INCREMENTO','actualizar',1,'p_actualizar','sintactico.py',157),
  ('actualizar -> DECREMENTO','actualizar',1,'p_actualizar','sintactico.py',158),
  ('repeticion -> FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE','repeticion',16,'p_repeticionfor','sintactico.py',162),
  ('repeticion -> WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE','repeticion',12,'p_repeticionwhile','sintactico.py',167),
  ('repeticion -> DO LLLAVE sentencias ID actualizar PCOMA RLLAVE WHILE LPAREN ID opcomparacion valor RPAREN PCOMA','repeticion',14,'p_repeticionwhile','sintactico.py',168),
  ('array_map -> ARRAY_MAP LPAREN funcion COMA array RPAREN PCOMA','array_map',7,'p_array_map','sintactico.py',172),
  ('heap -> INSERT LPAREN LCORCH NUMBER COMA NUMBER RCORCH RPAREN PCOMA','heap',9,'p_heap','sintactico.py',175),
  ('heap -> INSERT LPAREN ARRAY LPAREN valor DOUBLE_ARROW NUMBER RPAREN RPAREN PCOMA','heap',10,'p_heap','sintactico.py',176),
]
