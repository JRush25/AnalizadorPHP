
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT AND ASIGNACION BOOLEAN BOOLEAN_AND BOOLEAN_OR BREAK CADENA CASE CATCH CLASS COMMENT CONCAT_EQUAL CONST CONTINUE DECLARE DECREMENTO DEFAULT DIVIDE DIV_EQUAL DO DOUBLE_ARROW ECHO ELSE ELSEIF EXTENDS FIN FINAL FOR FUNCTION GLOBAL ID IF IGUAL INCLUDE INCREMENTO INICIO INSTANCEOF IS_NOT_EQUAL LLLAVE LPAREN MAYOR MAYORIGUAL MENOR MENORIGUAL MINUS MOD NUMBER OR PCOMA PLUS PRINT PRIVATE PROTECTED PUBLIC REF RLLAVE RPAREN TIMES TRY WHILEprograma : INICIO sentencias FINsentencias : asignacion\n                    | comparacion\n                    | impresion\n                    | repeticion\n    asignacion : ID ASIGNACION valor PCOMA\n                | ID REF ID PCOMAvalor : ID\n             | NUMBER\n             | CADENA\n             | BOOLEAN\n    opcomparacion : IGUAL\n                    | MAYOR\n                    | MENOR\n                    | MAYORIGUAL\n                    | MENORIGUAL\n    expcmp : valor opcomparacion valorcomparacion : IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVEcomparacion : IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVEcomparacion : IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVEimpresion : ECHO ID PCOMA\n             | ECHO CADENA PCOMArepeticionrep : MAYOR\n                  | MENOR\n                  | MAYORIGUAL\n                  | MENORIGUAL\n  actualizar : INCREMENTO\n                | DECREMENTO\n  repeticion : FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE repeticion : WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE'
    
_lr_action_items = {'INICIO':([0,],[2,]),'$end':([1,13,],[0,-1,]),'ID':([2,4,5,6,7,10,14,15,16,19,20,29,30,33,34,36,37,38,39,40,41,43,44,49,51,53,61,62,63,68,72,76,78,82,85,86,88,],[8,-2,-3,-4,-5,17,21,26,21,31,32,-21,-22,-6,-7,21,-12,-13,-14,-15,-16,21,8,52,-18,8,65,8,21,74,-19,8,-30,8,8,-29,-20,]),'IF':([2,44,53,62,76,82,85,],[9,9,9,9,9,9,9,]),'ECHO':([2,44,53,62,76,82,85,],[10,10,10,10,10,10,10,]),'FOR':([2,44,53,62,76,82,85,],[11,11,11,11,11,11,11,]),'WHILE':([2,44,53,62,76,82,85,],[12,12,12,12,12,12,12,]),'FIN':([3,4,5,6,7,29,30,33,34,51,72,78,86,88,],[13,-2,-3,-4,-5,-21,-22,-6,-7,-18,-19,-30,-29,-20,]),'RLLAVE':([4,5,6,7,29,30,33,34,48,51,66,72,75,78,79,84,86,87,88,],[-2,-3,-4,-5,-21,-22,-6,-7,51,-18,72,-19,78,-30,81,86,-29,88,-20,]),'ASIGNACION':([8,31,],[14,42,]),'REF':([8,],[15,]),'LPAREN':([9,11,12,55,],[16,19,20,63,]),'CADENA':([10,14,16,36,37,38,39,40,41,43,63,],[18,24,24,24,-12,-13,-14,-15,-16,24,24,]),'NUMBER':([14,16,36,37,38,39,40,41,42,43,56,57,58,59,60,63,],[23,23,23,-12,-13,-14,-15,-16,46,23,64,-23,-24,-25,-26,23,]),'BOOLEAN':([14,16,36,37,38,39,40,41,43,63,],[25,25,25,-12,-13,-14,-15,-16,25,25,]),'PCOMA':([17,18,21,22,23,24,25,26,46,64,69,70,71,],[29,30,-8,33,-9,-10,-11,34,49,68,75,-27,-28,]),'IGUAL':([21,23,24,25,28,32,],[-8,-9,-10,-11,37,37,]),'MAYOR':([21,23,24,25,28,32,52,],[-8,-9,-10,-11,38,38,57,]),'MENOR':([21,23,24,25,28,32,52,],[-8,-9,-10,-11,39,39,58,]),'MAYORIGUAL':([21,23,24,25,28,32,52,],[-8,-9,-10,-11,40,40,59,]),'MENORIGUAL':([21,23,24,25,28,32,52,],[-8,-9,-10,-11,41,41,60,]),'RPAREN':([21,23,24,25,27,45,47,67,70,71,77,],[-8,-9,-10,-11,35,-17,50,73,-27,-28,80,]),'LLLAVE':([35,50,54,73,80,83,],[44,53,62,76,82,85,]),'ELSE':([51,81,],[54,83,]),'ELSEIF':([51,],[55,]),'INCREMENTO':([65,74,],[70,70,]),'DECREMENTO':([65,74,],[71,71,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'sentencias':([2,44,53,62,76,82,85,],[3,48,61,66,79,84,87,]),'asignacion':([2,44,53,62,76,82,85,],[4,4,4,4,4,4,4,]),'comparacion':([2,44,53,62,76,82,85,],[5,5,5,5,5,5,5,]),'impresion':([2,44,53,62,76,82,85,],[6,6,6,6,6,6,6,]),'repeticion':([2,44,53,62,76,82,85,],[7,7,7,7,7,7,7,]),'valor':([14,16,36,43,63,],[22,28,45,47,28,]),'expcmp':([16,63,],[27,67,]),'opcomparacion':([28,32,],[36,43,]),'repeticionrep':([52,],[56,]),'actualizar':([65,74,],[69,77,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> INICIO sentencias FIN','programa',3,'p_programa','sintactico.py',5),
  ('sentencias -> asignacion','sentencias',1,'p_sentencias','sintactico.py',8),
  ('sentencias -> comparacion','sentencias',1,'p_sentencias','sintactico.py',9),
  ('sentencias -> impresion','sentencias',1,'p_sentencias','sintactico.py',10),
  ('sentencias -> repeticion','sentencias',1,'p_sentencias','sintactico.py',11),
  ('asignacion -> ID ASIGNACION valor PCOMA','asignacion',4,'p_asignacion','sintactico.py',15),
  ('asignacion -> ID REF ID PCOMA','asignacion',4,'p_asignacion','sintactico.py',16),
  ('valor -> ID','valor',1,'p_valor','sintactico.py',18),
  ('valor -> NUMBER','valor',1,'p_valor','sintactico.py',19),
  ('valor -> CADENA','valor',1,'p_valor','sintactico.py',20),
  ('valor -> BOOLEAN','valor',1,'p_valor','sintactico.py',21),
  ('opcomparacion -> IGUAL','opcomparacion',1,'p_opcomparacion','sintactico.py',25),
  ('opcomparacion -> MAYOR','opcomparacion',1,'p_opcomparacion','sintactico.py',26),
  ('opcomparacion -> MENOR','opcomparacion',1,'p_opcomparacion','sintactico.py',27),
  ('opcomparacion -> MAYORIGUAL','opcomparacion',1,'p_opcomparacion','sintactico.py',28),
  ('opcomparacion -> MENORIGUAL','opcomparacion',1,'p_opcomparacion','sintactico.py',29),
  ('expcmp -> valor opcomparacion valor','expcmp',3,'p_expresioncmp','sintactico.py',33),
  ('comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE','comparacion',7,'p_comparacionif','sintactico.py',36),
  ('comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE','comparacion',11,'p_comparacionif_else','sintactico.py',39),
  ('comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE','comparacion',18,'p_comparacionif_elseif_else','sintactico.py',42),
  ('impresion -> ECHO ID PCOMA','impresion',3,'p_impresion','sintactico.py',45),
  ('impresion -> ECHO CADENA PCOMA','impresion',3,'p_impresion','sintactico.py',46),
  ('repeticionrep -> MAYOR','repeticionrep',1,'p_repeticioncompfor','sintactico.py',49),
  ('repeticionrep -> MENOR','repeticionrep',1,'p_repeticioncompfor','sintactico.py',50),
  ('repeticionrep -> MAYORIGUAL','repeticionrep',1,'p_repeticioncompfor','sintactico.py',51),
  ('repeticionrep -> MENORIGUAL','repeticionrep',1,'p_repeticioncompfor','sintactico.py',52),
  ('actualizar -> INCREMENTO','actualizar',1,'p_actualizar','sintactico.py',56),
  ('actualizar -> DECREMENTO','actualizar',1,'p_actualizar','sintactico.py',57),
  ('repeticion -> FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE','repeticion',16,'p_repeticionfor','sintactico.py',61),
  ('repeticion -> WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE','repeticion',12,'p_repeticionwhile','sintactico.py',65),
]
