
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT AND ASIGNACION BOOLEAN BOOLEAN_AND BOOLEAN_OR BREAK CADENA CASE CATCH CLASS COMMENT CONCAT_EQUAL CONST CONTINUE DECLARE DECREMENTO DEFAULT DIVIDE DIV_EQUAL DO DOUBLE_ARROW ECHO ELSE ELSEIF EXTENDS FIN FINAL FOR FUNCTION GLOBAL ID IF INCLUDE INCREMENTO INICIO INSTANCEOF IS_NOT_EQUAL LLLAVE LPAREN MAYOR MENOR MINUS MOD NUMBER OR PCOMA PLUS PRINT PRIVATE PROTECTED PUBLIC REF RLLAVE RPAREN TIMES TRY WHILEprograma : INICIO sentencias FINsentencias : asignacionasignacion : ID ASIGNACION valor PCOMA\n                | ID REF ID PCOMAvalor : ID\n             | NUMBER\n             | CADENA\n             | BOOLEAN\n    '
    
_lr_action_items = {'INICIO':([0,],[2,]),'$end':([1,6,],[0,-1,]),'ID':([2,7,8,],[5,9,14,]),'FIN':([3,4,15,16,],[6,-2,-3,-4,]),'ASIGNACION':([5,],[7,]),'REF':([5,],[8,]),'NUMBER':([7,],[11,]),'CADENA':([7,],[12,]),'BOOLEAN':([7,],[13,]),'PCOMA':([9,10,11,12,13,14,],[-5,15,-6,-7,-8,16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'sentencias':([2,],[3,]),'asignacion':([2,],[4,]),'valor':([7,],[10,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> INICIO sentencias FIN','programa',3,'p_programa','sintactico.py',5),
  ('sentencias -> asignacion','sentencias',1,'p_sentencias','sintactico.py',8),
  ('asignacion -> ID ASIGNACION valor PCOMA','asignacion',4,'p_asignacion','sintactico.py',11),
  ('asignacion -> ID REF ID PCOMA','asignacion',4,'p_asignacion','sintactico.py',12),
  ('valor -> ID','valor',1,'p_valor','sintactico.py',14),
  ('valor -> NUMBER','valor',1,'p_valor','sintactico.py',15),
  ('valor -> CADENA','valor',1,'p_valor','sintactico.py',16),
  ('valor -> BOOLEAN','valor',1,'p_valor','sintactico.py',17),
]
