
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARRAY ARRAY_MAP ASIGNACION BOOLEANF BOOLEANT CADENA CATCH COMA DECREMENTO DIVIDE DO DOUBLE_ARROW ECHO ELSE ELSEIF EXCEPTION FIN FLOAT FOR FUNCTION ID IF IGUAL INCREMENTO INICIO INSERT IS_NOT_EQUAL LCORCH LLLAVE LPAREN MAYOR MAYORIGUAL MENOR MENORIGUAL MINUS MOD NFUNCION NUMBER OR PCOMA PLUS PRINT RCORCH REF RETURN RLLAVE RPAREN SORT TIMES TRY WHILEprograma : INICIO sentencias FINsentencias : asignacion\n                    | comparacion\n                    | funcion\n                    | impresion\n                    | repeticion\n                    | expresion\n                    | excepcion\n                    | estdatos\n    asignacion : ID ASIGNACION valor PCOMA\n                | ID REF ID PCOMA\n                | ID ASIGNACION estdatos PCOMA\n                | ID ASIGNACION expresion PCOMAvalor : ID\n            | NUMBER\n            | FLOAT\n            | boolean\n            | CADENAboolean : BOOLEANT\n                | BOOLEANFopcomparacion : IGUAL\n                    | MAYOR\n                    | MENOR\n                    | MAYORIGUAL\n                    | MENORIGUAL\n                    | IS_NOT_EQUALexpcmp : valor opcomparacion valor\n            | LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN\n             expcmplog : expcmp oplog expcmp\n                | expcmp oplog expcmplogoplog : AND\n            | ORcomparacion : IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE\n                    | IF LPAREN expcmplog RPAREN LLLAVE sentencias RLLAVEcomparacion : IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVEcomparacion : IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE array : ARRAY LPAREN contenido RPAREN\n            contenido : valor DOUBLE_ARROW valor\n                | valor DOUBLE_ARROW valor COMA contenido\n                | valor\n                | valor COMA contenidosort : SORT LPAREN ID RPAREN PCOMAestdatos : array\n                | array_map\n                | heapnumero : NUMBER\n            | FLOATexpresionmat : numero operadormat numerooperadormat : PLUS\n                    | MINUS\n                    | TIMES\n                    | DIVIDE\n                    | MODexpresion : expresionmat\n                | expcmplogfuncion : sortfuncion : FUNCTION NFUNCION LPAREN args RPAREN LLLAVE sentencias RLLAVE\n            | FUNCTION NFUNCION LPAREN args RPAREN LLLAVE sentencias RETURN valor PCOMA RLLAVEargs : ID\n            | ID COMA argsexcepcion : TRY LLLAVE sentencias RLLAVE CATCH LPAREN EXCEPTION ID RPAREN LLLAVE ECHO CADENA COMA ID RLLAVEimpresion : ECHO valor PCOMA\n             | PRINT valor PCOMA\n             | PRINT expresionmat PCOMArepeticionrep : MAYOR\n                  | MENOR\n                  | MAYORIGUAL\n                  | MENORIGUAL actualizar : INCREMENTO\n                | DECREMENTO\n  repeticion : FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVErepeticion : WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE\n                  | DO LLLAVE sentencias ID actualizar PCOMA RLLAVE WHILE LPAREN ID opcomparacion valor RPAREN PCOMA\n  array_map : ARRAY_MAP LPAREN funcion COMA array RPAREN PCOMAheap : INSERT LPAREN LCORCH NUMBER COMA NUMBER RCORCH RPAREN PCOMA\n                | INSERT LPAREN ARRAY LPAREN valor DOUBLE_ARROW NUMBER RPAREN RPAREN PCOMA'
    
_lr_action_items = {'INICIO':([0,],[2,]),'$end':([1,41,],[0,-1,]),'ID':([2,4,5,6,7,8,9,10,11,15,17,18,20,21,22,28,29,30,31,38,39,40,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,58,65,66,67,68,69,76,83,86,87,88,89,90,91,92,95,98,99,100,106,107,108,109,116,120,121,122,125,126,127,130,137,146,148,152,156,157,158,161,163,165,171,172,178,183,184,185,189,191,197,201,202,204,205,208,210,212,218,220,221,225,226,227,229,],[12,-2,-3,-4,-5,-6,-7,-8,-9,53,-55,-56,53,53,-54,-18,-43,-44,-45,-17,-19,-20,53,82,53,-21,-22,-23,-24,-25,-26,53,-14,-15,-16,53,-31,-32,93,94,12,12,97,53,-27,53,-29,-30,114,-62,-63,-64,117,-48,-46,-47,-10,-12,-13,-11,53,-37,53,53,53,12,12,114,-42,12,160,53,-33,-34,53,12,180,-74,-57,53,188,12,53,53,199,-75,206,-76,-35,-28,-58,53,12,-72,222,12,-73,-61,12,-71,-36,]),'IF':([2,67,68,126,127,146,161,183,210,220,226,],[14,14,14,14,14,14,14,14,14,14,14,]),'FUNCTION':([2,67,68,77,126,127,146,161,183,210,220,226,],[19,19,19,19,19,19,19,19,19,19,19,19,]),'ECHO':([2,67,68,126,127,146,161,183,200,210,220,226,],[20,20,20,20,20,20,20,20,209,20,20,20,]),'PRINT':([2,67,68,126,127,146,161,183,210,220,226,],[21,21,21,21,21,21,21,21,21,21,21,]),'FOR':([2,67,68,126,127,146,161,183,210,220,226,],[23,23,23,23,23,23,23,23,23,23,23,]),'WHILE':([2,67,68,126,127,146,161,162,183,210,220,226,],[25,25,25,25,25,25,25,179,25,25,25,25,]),'DO':([2,67,68,126,127,146,161,183,210,220,226,],[26,26,26,26,26,26,26,26,26,26,26,]),'TRY':([2,67,68,126,127,146,161,183,210,220,226,],[27,27,27,27,27,27,27,27,27,27,27,]),'SORT':([2,67,68,77,126,127,146,161,183,210,220,226,],[32,32,32,32,32,32,32,32,32,32,32,32,]),'ARRAY':([2,42,67,68,78,123,126,127,146,161,183,210,220,226,],[34,34,34,34,105,34,34,34,34,34,34,34,34,34,]),'ARRAY_MAP':([2,42,67,68,126,127,146,161,183,210,220,226,],[35,35,35,35,35,35,35,35,35,35,35,35,]),'INSERT':([2,42,67,68,126,127,146,161,183,210,220,226,],[36,36,36,36,36,36,36,36,36,36,36,36,]),'NUMBER':([2,15,20,21,42,44,45,46,47,48,49,50,51,56,57,58,67,68,70,71,72,73,74,75,76,86,104,115,116,121,122,125,126,127,141,146,152,155,158,161,172,173,174,175,176,177,183,184,185,208,210,220,226,],[24,54,54,63,63,54,-21,-22,-23,-24,-25,-26,54,54,-31,-32,24,24,99,-49,-50,-51,-52,-53,54,54,124,131,54,54,54,54,24,24,154,24,54,167,54,24,54,187,-65,-66,-67,-68,24,54,54,54,24,24,24,]),'FLOAT':([2,15,20,21,42,44,45,46,47,48,49,50,51,56,57,58,67,68,70,71,72,73,74,75,76,86,116,121,122,125,126,127,146,152,158,161,172,183,184,185,208,210,220,226,],[37,55,55,64,64,55,-21,-22,-23,-24,-25,-26,55,55,-31,-32,37,37,100,-49,-50,-51,-52,-53,55,55,55,55,55,55,37,37,37,55,55,37,55,37,55,55,55,37,37,37,]),'LPAREN':([2,14,23,25,32,34,35,36,42,51,56,57,58,59,67,68,105,126,127,136,145,146,161,169,179,183,184,210,220,226,],[15,51,65,66,69,76,77,78,15,15,15,-31,-32,89,15,15,125,15,15,151,158,15,15,184,189,15,15,15,15,15,]),'CADENA':([2,15,20,21,42,44,45,46,47,48,49,50,51,56,57,58,67,68,76,86,116,121,122,125,126,127,146,152,158,161,172,183,184,185,208,209,210,220,226,],[28,28,28,28,28,28,-21,-22,-23,-24,-25,-26,28,28,-31,-32,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,214,28,28,28,]),'BOOLEANT':([2,15,20,21,42,44,45,46,47,48,49,50,51,56,57,58,67,68,76,86,116,121,122,125,126,127,146,152,158,161,172,183,184,185,208,210,220,226,],[39,39,39,39,39,39,-21,-22,-23,-24,-25,-26,39,39,-31,-32,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'BOOLEANF':([2,15,20,21,42,44,45,46,47,48,49,50,51,56,57,58,67,68,76,86,116,121,122,125,126,127,146,152,158,161,172,183,184,185,208,210,220,226,],[40,40,40,40,40,40,-21,-22,-23,-24,-25,-26,40,40,-31,-32,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'FIN':([3,4,5,6,7,8,9,10,11,17,18,22,28,29,30,31,38,39,40,53,54,55,83,87,88,90,91,92,98,99,100,106,107,108,109,120,137,156,157,165,171,191,201,202,204,205,212,221,225,227,229,],[41,-2,-3,-4,-5,-6,-7,-8,-9,-55,-56,-54,-18,-43,-44,-45,-17,-19,-20,-14,-15,-16,-27,-29,-30,-62,-63,-64,-48,-46,-47,-10,-12,-13,-11,-37,-42,-33,-34,-74,-57,-75,-76,-35,-28,-58,-72,-73,-61,-71,-36,]),'RLLAVE':([4,5,6,7,8,9,10,11,17,18,22,28,29,30,31,38,39,40,53,54,55,83,87,88,90,91,92,96,98,99,100,106,107,108,109,120,137,143,144,150,156,157,159,165,171,191,193,196,201,202,204,205,207,212,215,221,222,224,225,227,228,229,],[-2,-3,-4,-5,-6,-7,-8,-9,-55,-56,-54,-18,-43,-44,-45,-17,-19,-20,-14,-15,-16,-27,-29,-30,-62,-63,-64,118,-48,-46,-47,-10,-12,-13,-11,-37,-42,156,157,162,-33,-34,171,-74,-57,-75,202,205,-76,-35,-28,-58,212,-72,219,-73,225,227,-61,-71,229,-36,]),'RETURN':([4,5,6,7,8,9,10,11,17,18,22,28,29,30,31,38,39,40,53,54,55,83,87,88,90,91,92,98,99,100,106,107,108,109,120,137,156,157,159,165,171,191,201,202,204,205,212,221,225,227,229,],[-2,-3,-4,-5,-6,-7,-8,-9,-55,-56,-54,-18,-43,-44,-45,-17,-19,-20,-14,-15,-16,-27,-29,-30,-62,-63,-64,-48,-46,-47,-10,-12,-13,-11,-37,-42,-33,-34,172,-74,-57,-75,-76,-35,-28,-58,-72,-73,-61,-71,-36,]),'ASIGNACION':([12,93,],[42,115,]),'REF':([12,],[43,]),'IGUAL':([12,13,24,28,37,38,39,40,52,53,54,55,63,64,79,94,170,199,],[-14,45,-15,-18,-16,-17,-19,-20,45,-14,-15,-16,-15,-16,45,45,45,45,]),'MAYOR':([12,13,24,28,37,38,39,40,52,53,54,55,63,64,79,94,160,170,199,],[-14,46,-15,-18,-16,-17,-19,-20,46,-14,-15,-16,-15,-16,46,46,174,46,46,]),'MENOR':([12,13,24,28,37,38,39,40,52,53,54,55,63,64,79,94,160,170,199,],[-14,47,-15,-18,-16,-17,-19,-20,47,-14,-15,-16,-15,-16,47,47,175,47,47,]),'MAYORIGUAL':([12,13,24,28,37,38,39,40,52,53,54,55,63,64,79,94,160,170,199,],[-14,48,-15,-18,-16,-17,-19,-20,48,-14,-15,-16,-15,-16,48,48,176,48,48,]),'MENORIGUAL':([12,13,24,28,37,38,39,40,52,53,54,55,63,64,79,94,160,170,199,],[-14,49,-15,-18,-16,-17,-19,-20,49,-14,-15,-16,-15,-16,49,49,177,49,49,]),'IS_NOT_EQUAL':([12,13,24,28,37,38,39,40,52,53,54,55,63,64,79,94,170,199,],[-14,50,-15,-18,-16,-17,-19,-20,50,-14,-15,-16,-15,-16,50,50,50,50,]),'AND':([16,28,38,39,40,53,54,55,83,84,87,128,204,],[57,-18,-17,-19,-20,-14,-15,-16,-27,57,57,57,-28,]),'OR':([16,28,38,39,40,53,54,55,83,84,87,128,204,],[58,-18,-17,-19,-20,-14,-15,-16,-27,58,58,58,-28,]),'PCOMA':([17,22,28,29,30,31,38,39,40,53,54,55,60,61,62,63,64,79,80,81,82,83,87,88,98,99,100,119,120,131,133,134,135,153,165,181,186,187,191,192,198,201,204,217,],[-55,-54,-18,-43,-44,-45,-17,-19,-20,-14,-15,-16,90,91,92,-15,-16,106,107,108,109,-27,-29,-30,-48,-46,-47,137,-37,148,150,-69,-70,165,-74,191,196,197,-75,201,207,-76,-28,221,]),'COMA':([18,28,38,39,40,53,54,55,102,103,114,124,137,138,171,205,214,],[-56,-18,-17,-19,-20,-14,-15,-16,122,123,130,141,-42,152,-57,-58,218,]),'NFUNCION':([19,],[59,]),'PLUS':([24,33,37,63,64,],[-46,71,-47,-46,-47,]),'MINUS':([24,33,37,63,64,],[-46,72,-47,-46,-47,]),'TIMES':([24,33,37,63,64,],[-46,73,-47,-46,-47,]),'DIVIDE':([24,33,37,63,64,],[-46,74,-47,-46,-47,]),'MOD':([24,33,37,63,64,],[-46,75,-47,-46,-47,]),'LLLAVE':([26,27,110,111,129,149,168,190,203,216,223,],[67,68,126,127,146,161,183,200,210,220,226,]),'RPAREN':([28,38,39,40,53,54,55,83,84,85,87,88,97,101,102,112,113,114,120,132,134,135,138,139,140,147,164,166,167,180,182,194,195,204,211,213,],[-18,-17,-19,-20,-14,-15,-16,-27,110,111,-29,-30,119,120,-40,128,129,-59,-37,149,-69,-70,-38,-41,153,-60,-39,181,182,190,192,203,204,-28,216,217,]),'DOUBLE_ARROW':([28,38,39,40,53,54,55,102,142,],[-18,-17,-19,-20,-14,-15,-16,121,155,]),'LCORCH':([78,],[104,]),'INCREMENTO':([117,188,206,],[134,134,134,]),'DECREMENTO':([117,188,206,],[135,135,135,]),'CATCH':([118,],[136,]),'EXCEPTION':([151,],[163,]),'RCORCH':([154,],[166,]),'ELSE':([156,219,],[168,223,]),'ELSEIF':([156,],[169,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'sentencias':([2,67,68,126,127,146,161,183,210,220,226,],[3,95,96,143,144,159,178,193,215,224,228,]),'asignacion':([2,67,68,126,127,146,161,183,210,220,226,],[4,4,4,4,4,4,4,4,4,4,4,]),'comparacion':([2,67,68,126,127,146,161,183,210,220,226,],[5,5,5,5,5,5,5,5,5,5,5,]),'funcion':([2,67,68,77,126,127,146,161,183,210,220,226,],[6,6,6,103,6,6,6,6,6,6,6,6,]),'impresion':([2,67,68,126,127,146,161,183,210,220,226,],[7,7,7,7,7,7,7,7,7,7,7,]),'repeticion':([2,67,68,126,127,146,161,183,210,220,226,],[8,8,8,8,8,8,8,8,8,8,8,]),'expresion':([2,42,67,68,126,127,146,161,183,210,220,226,],[9,81,9,9,9,9,9,9,9,9,9,9,]),'excepcion':([2,67,68,126,127,146,161,183,210,220,226,],[10,10,10,10,10,10,10,10,10,10,10,]),'estdatos':([2,42,67,68,126,127,146,161,183,210,220,226,],[11,80,11,11,11,11,11,11,11,11,11,11,]),'valor':([2,15,20,21,42,44,51,56,67,68,76,86,116,121,122,125,126,127,146,152,158,161,172,183,184,185,208,210,220,226,],[13,52,60,61,79,83,13,13,13,13,102,112,132,138,102,142,13,13,13,102,170,13,186,13,13,195,213,13,13,13,]),'expcmp':([2,42,51,56,67,68,126,127,146,161,183,184,210,220,226,],[16,16,84,87,16,16,16,16,16,16,16,194,16,16,16,]),'expcmplog':([2,42,51,56,67,68,126,127,146,161,183,210,220,226,],[17,17,85,88,17,17,17,17,17,17,17,17,17,17,]),'sort':([2,67,68,77,126,127,146,161,183,210,220,226,],[18,18,18,18,18,18,18,18,18,18,18,18,]),'expresionmat':([2,21,42,67,68,126,127,146,161,183,210,220,226,],[22,62,22,22,22,22,22,22,22,22,22,22,22,]),'array':([2,42,67,68,123,126,127,146,161,183,210,220,226,],[29,29,29,29,140,29,29,29,29,29,29,29,29,]),'array_map':([2,42,67,68,126,127,146,161,183,210,220,226,],[30,30,30,30,30,30,30,30,30,30,30,30,]),'heap':([2,42,67,68,126,127,146,161,183,210,220,226,],[31,31,31,31,31,31,31,31,31,31,31,31,]),'numero':([2,21,42,67,68,70,126,127,146,161,183,210,220,226,],[33,33,33,33,33,98,33,33,33,33,33,33,33,33,]),'boolean':([2,15,20,21,42,44,51,56,67,68,76,86,116,121,122,125,126,127,146,152,158,161,172,183,184,185,208,210,220,226,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'opcomparacion':([13,52,79,94,170,199,],[44,86,44,116,185,208,]),'oplog':([16,84,87,128,],[56,56,56,145,]),'operadormat':([33,],[70,]),'contenido':([76,122,152,],[101,139,164,]),'args':([89,130,],[113,147,]),'actualizar':([117,188,206,],[133,198,211,]),'repeticionrep':([160,],[173,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> INICIO sentencias FIN','programa',3,'p_programa','sintactico.py',9),
  ('sentencias -> asignacion','sentencias',1,'p_sentencias','sintactico.py',14),
  ('sentencias -> comparacion','sentencias',1,'p_sentencias','sintactico.py',15),
  ('sentencias -> funcion','sentencias',1,'p_sentencias','sintactico.py',16),
  ('sentencias -> impresion','sentencias',1,'p_sentencias','sintactico.py',17),
  ('sentencias -> repeticion','sentencias',1,'p_sentencias','sintactico.py',18),
  ('sentencias -> expresion','sentencias',1,'p_sentencias','sintactico.py',19),
  ('sentencias -> excepcion','sentencias',1,'p_sentencias','sintactico.py',20),
  ('sentencias -> estdatos','sentencias',1,'p_sentencias','sintactico.py',21),
  ('asignacion -> ID ASIGNACION valor PCOMA','asignacion',4,'p_asignacion','sintactico.py',26),
  ('asignacion -> ID REF ID PCOMA','asignacion',4,'p_asignacion','sintactico.py',27),
  ('asignacion -> ID ASIGNACION estdatos PCOMA','asignacion',4,'p_asignacion','sintactico.py',28),
  ('asignacion -> ID ASIGNACION expresion PCOMA','asignacion',4,'p_asignacion','sintactico.py',29),
  ('valor -> ID','valor',1,'p_valor','sintactico.py',35),
  ('valor -> NUMBER','valor',1,'p_valor','sintactico.py',36),
  ('valor -> FLOAT','valor',1,'p_valor','sintactico.py',37),
  ('valor -> boolean','valor',1,'p_valor','sintactico.py',38),
  ('valor -> CADENA','valor',1,'p_valor','sintactico.py',39),
  ('boolean -> BOOLEANT','boolean',1,'p_boolean','sintactico.py',42),
  ('boolean -> BOOLEANF','boolean',1,'p_boolean','sintactico.py',43),
  ('opcomparacion -> IGUAL','opcomparacion',1,'p_opcomparacion','sintactico.py',45),
  ('opcomparacion -> MAYOR','opcomparacion',1,'p_opcomparacion','sintactico.py',46),
  ('opcomparacion -> MENOR','opcomparacion',1,'p_opcomparacion','sintactico.py',47),
  ('opcomparacion -> MAYORIGUAL','opcomparacion',1,'p_opcomparacion','sintactico.py',48),
  ('opcomparacion -> MENORIGUAL','opcomparacion',1,'p_opcomparacion','sintactico.py',49),
  ('opcomparacion -> IS_NOT_EQUAL','opcomparacion',1,'p_opcomparacion','sintactico.py',50),
  ('expcmp -> valor opcomparacion valor','expcmp',3,'p_expresioncmp','sintactico.py',54),
  ('expcmp -> LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN','expcmp',11,'p_expresioncmp','sintactico.py',55),
  ('expcmplog -> expcmp oplog expcmp','expcmplog',3,'p_expresioncmplog','sintactico.py',60),
  ('expcmplog -> expcmp oplog expcmplog','expcmplog',3,'p_expresioncmplog','sintactico.py',61),
  ('oplog -> AND','oplog',1,'p_oplog','sintactico.py',65),
  ('oplog -> OR','oplog',1,'p_oplog','sintactico.py',66),
  ('comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE','comparacion',7,'p_comparacionif','sintactico.py',71),
  ('comparacion -> IF LPAREN expcmplog RPAREN LLLAVE sentencias RLLAVE','comparacion',7,'p_comparacionif','sintactico.py',72),
  ('comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE','comparacion',11,'p_comparacionif_else','sintactico.py',76),
  ('comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE','comparacion',18,'p_comparacionif_elseif_else','sintactico.py',79),
  ('array -> ARRAY LPAREN contenido RPAREN','array',4,'p_array','sintactico.py',82),
  ('contenido -> valor DOUBLE_ARROW valor','contenido',3,'p_contenido','sintactico.py',86),
  ('contenido -> valor DOUBLE_ARROW valor COMA contenido','contenido',5,'p_contenido','sintactico.py',87),
  ('contenido -> valor','contenido',1,'p_contenido','sintactico.py',88),
  ('contenido -> valor COMA contenido','contenido',3,'p_contenido','sintactico.py',89),
  ('sort -> SORT LPAREN ID RPAREN PCOMA','sort',5,'p_sort','sintactico.py',93),
  ('estdatos -> array','estdatos',1,'p_estdatos','sintactico.py',96),
  ('estdatos -> array_map','estdatos',1,'p_estdatos','sintactico.py',97),
  ('estdatos -> heap','estdatos',1,'p_estdatos','sintactico.py',98),
  ('numero -> NUMBER','numero',1,'p_numero','sintactico.py',100),
  ('numero -> FLOAT','numero',1,'p_numero','sintactico.py',101),
  ('expresionmat -> numero operadormat numero','expresionmat',3,'p_expresionmat','sintactico.py',105),
  ('operadormat -> PLUS','operadormat',1,'p_operadormat_plus','sintactico.py',121),
  ('operadormat -> MINUS','operadormat',1,'p_operadormat_plus','sintactico.py',122),
  ('operadormat -> TIMES','operadormat',1,'p_operadormat_plus','sintactico.py',123),
  ('operadormat -> DIVIDE','operadormat',1,'p_operadormat_plus','sintactico.py',124),
  ('operadormat -> MOD','operadormat',1,'p_operadormat_plus','sintactico.py',125),
  ('expresion -> expresionmat','expresion',1,'p_expresion','sintactico.py',129),
  ('expresion -> expcmplog','expresion',1,'p_expresion','sintactico.py',130),
  ('funcion -> sort','funcion',1,'p_funcion','sintactico.py',132),
  ('funcion -> FUNCTION NFUNCION LPAREN args RPAREN LLLAVE sentencias RLLAVE','funcion',8,'p_funciondef','sintactico.py',135),
  ('funcion -> FUNCTION NFUNCION LPAREN args RPAREN LLLAVE sentencias RETURN valor PCOMA RLLAVE','funcion',11,'p_funciondef','sintactico.py',136),
  ('args -> ID','args',1,'p_args','sintactico.py',140),
  ('args -> ID COMA args','args',3,'p_args','sintactico.py',141),
  ('excepcion -> TRY LLLAVE sentencias RLLAVE CATCH LPAREN EXCEPTION ID RPAREN LLLAVE ECHO CADENA COMA ID RLLAVE','excepcion',15,'p_excepcion','sintactico.py',144),
  ('impresion -> ECHO valor PCOMA','impresion',3,'p_impresion','sintactico.py',149),
  ('impresion -> PRINT valor PCOMA','impresion',3,'p_impresion','sintactico.py',150),
  ('impresion -> PRINT expresionmat PCOMA','impresion',3,'p_impresion','sintactico.py',151),
  ('repeticionrep -> MAYOR','repeticionrep',1,'p_repeticioncompfor','sintactico.py',155),
  ('repeticionrep -> MENOR','repeticionrep',1,'p_repeticioncompfor','sintactico.py',156),
  ('repeticionrep -> MAYORIGUAL','repeticionrep',1,'p_repeticioncompfor','sintactico.py',157),
  ('repeticionrep -> MENORIGUAL','repeticionrep',1,'p_repeticioncompfor','sintactico.py',158),
  ('actualizar -> INCREMENTO','actualizar',1,'p_actualizar','sintactico.py',161),
  ('actualizar -> DECREMENTO','actualizar',1,'p_actualizar','sintactico.py',162),
  ('repeticion -> FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE','repeticion',16,'p_repeticionfor','sintactico.py',166),
  ('repeticion -> WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE','repeticion',12,'p_repeticionwhile','sintactico.py',171),
  ('repeticion -> DO LLLAVE sentencias ID actualizar PCOMA RLLAVE WHILE LPAREN ID opcomparacion valor RPAREN PCOMA','repeticion',14,'p_repeticionwhile','sintactico.py',172),
  ('array_map -> ARRAY_MAP LPAREN funcion COMA array RPAREN PCOMA','array_map',7,'p_array_map','sintactico.py',176),
  ('heap -> INSERT LPAREN LCORCH NUMBER COMA NUMBER RCORCH RPAREN PCOMA','heap',9,'p_heap','sintactico.py',179),
  ('heap -> INSERT LPAREN ARRAY LPAREN valor DOUBLE_ARROW NUMBER RPAREN RPAREN PCOMA','heap',10,'p_heap','sintactico.py',180),
]
