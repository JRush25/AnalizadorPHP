Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    AND
    BOOLEAN_AND
    BOOLEAN_OR
    BREAK
    CASE
    CATCH
    CLASS
    COMMENT
    CONCAT_EQUAL
    CONST
    CONTINUE
    DECLARE
    DECREMENTO
    DEFAULT
    DIVIDE
    DIV_EQUAL
    DO
    DOUBLE_ARROW
    EXTENDS
    FINAL
    FOR
    FUNCTION
    GLOBAL
    INCLUDE
    INCREMENTO
    INSTANCEOF
    IS_NOT_EQUAL
    MINUS
    MOD
    OR
    PLUS
    PRINT
    PRIVATE
    PROTECTED
    PUBLIC
    TIMES
    TRY
    WHILE

Grammar

Rule 0     S' -> programa
Rule 1     programa -> INICIO sentencias FIN
Rule 2     sentencias -> asignacion
Rule 3     sentencias -> comparacion
Rule 4     sentencias -> impresion
Rule 5     asignacion -> ID ASIGNACION valor PCOMA
Rule 6     asignacion -> ID REF ID PCOMA
Rule 7     valor -> ID
Rule 8     valor -> NUMBER
Rule 9     valor -> CADENA
Rule 10    valor -> BOOLEAN
Rule 11    opcomparacion -> IGUAL
Rule 12    opcomparacion -> MAYOR
Rule 13    opcomparacion -> MENOR
Rule 14    opcomparacion -> MAYORIGUAL
Rule 15    opcomparacion -> MENORIGUAL
Rule 16    expcmp -> valor opcomparacion valor
Rule 17    comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE
Rule 18    comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
Rule 19    comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
Rule 20    impresion -> ECHO ID
Rule 21    impresion -> ECHO CADENA

Terminals, with rules where they appear

ABSTRACT             : 
AND                  : 
ASIGNACION           : 5
BOOLEAN              : 10
BOOLEAN_AND          : 
BOOLEAN_OR           : 
BREAK                : 
CADENA               : 9 21
CASE                 : 
CATCH                : 
CLASS                : 
COMMENT              : 
CONCAT_EQUAL         : 
CONST                : 
CONTINUE             : 
DECLARE              : 
DECREMENTO           : 
DEFAULT              : 
DIVIDE               : 
DIV_EQUAL            : 
DO                   : 
DOUBLE_ARROW         : 
ECHO                 : 20 21
ELSE                 : 18 19
ELSEIF               : 19
EXTENDS              : 
FIN                  : 1
FINAL                : 
FOR                  : 
FUNCTION             : 
GLOBAL               : 
ID                   : 5 6 6 7 20
IF                   : 17 18 19
IGUAL                : 11
INCLUDE              : 
INCREMENTO           : 
INICIO               : 1
INSTANCEOF           : 
IS_NOT_EQUAL         : 
LLLAVE               : 17 18 18 19 19 19
LPAREN               : 17 18 19 19
MAYOR                : 12
MAYORIGUAL           : 14
MENOR                : 13
MENORIGUAL           : 15
MINUS                : 
MOD                  : 
NUMBER               : 8
OR                   : 
PCOMA                : 5 6
PLUS                 : 
PRINT                : 
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
REF                  : 6
RLLAVE               : 17 18 18 19 19 19
RPAREN               : 17 18 19 19
TIMES                : 
TRY                  : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

asignacion           : 2
comparacion          : 3
expcmp               : 17 18 19 19
impresion            : 4
opcomparacion        : 16
programa             : 0
sentencias           : 1 17 18 18 19 19 19
valor                : 5 16 16

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . INICIO sentencias FIN

    INICIO          shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> INICIO . sentencias FIN
    (2) sentencias -> . asignacion
    (3) sentencias -> . comparacion
    (4) sentencias -> . impresion
    (5) asignacion -> . ID ASIGNACION valor PCOMA
    (6) asignacion -> . ID REF ID PCOMA
    (17) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE
    (18) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (19) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (20) impresion -> . ECHO ID
    (21) impresion -> . ECHO CADENA

    ID              shift and go to state 7
    IF              shift and go to state 8
    ECHO            shift and go to state 9

    sentencias                     shift and go to state 3
    asignacion                     shift and go to state 4
    comparacion                    shift and go to state 5
    impresion                      shift and go to state 6

state 3

    (1) programa -> INICIO sentencias . FIN

    FIN             shift and go to state 10


state 4

    (2) sentencias -> asignacion .

    FIN             reduce using rule 2 (sentencias -> asignacion .)
    RLLAVE          reduce using rule 2 (sentencias -> asignacion .)


state 5

    (3) sentencias -> comparacion .

    FIN             reduce using rule 3 (sentencias -> comparacion .)
    RLLAVE          reduce using rule 3 (sentencias -> comparacion .)


state 6

    (4) sentencias -> impresion .

    FIN             reduce using rule 4 (sentencias -> impresion .)
    RLLAVE          reduce using rule 4 (sentencias -> impresion .)


state 7

    (5) asignacion -> ID . ASIGNACION valor PCOMA
    (6) asignacion -> ID . REF ID PCOMA

    ASIGNACION      shift and go to state 11
    REF             shift and go to state 12


state 8

    (17) comparacion -> IF . LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE
    (18) comparacion -> IF . LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (19) comparacion -> IF . LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE

    LPAREN          shift and go to state 13


state 9

    (20) impresion -> ECHO . ID
    (21) impresion -> ECHO . CADENA

    ID              shift and go to state 14
    CADENA          shift and go to state 15


state 10

    (1) programa -> INICIO sentencias FIN .

    $end            reduce using rule 1 (programa -> INICIO sentencias FIN .)


state 11

    (5) asignacion -> ID ASIGNACION . valor PCOMA
    (7) valor -> . ID
    (8) valor -> . NUMBER
    (9) valor -> . CADENA
    (10) valor -> . BOOLEAN

    ID              shift and go to state 16
    NUMBER          shift and go to state 18
    CADENA          shift and go to state 19
    BOOLEAN         shift and go to state 20

    valor                          shift and go to state 17

state 12

    (6) asignacion -> ID REF . ID PCOMA

    ID              shift and go to state 21


state 13

    (17) comparacion -> IF LPAREN . expcmp RPAREN LLLAVE sentencias RLLAVE
    (18) comparacion -> IF LPAREN . expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (19) comparacion -> IF LPAREN . expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (16) expcmp -> . valor opcomparacion valor
    (7) valor -> . ID
    (8) valor -> . NUMBER
    (9) valor -> . CADENA
    (10) valor -> . BOOLEAN

    ID              shift and go to state 16
    NUMBER          shift and go to state 18
    CADENA          shift and go to state 19
    BOOLEAN         shift and go to state 20

    expcmp                         shift and go to state 22
    valor                          shift and go to state 23

state 14

    (20) impresion -> ECHO ID .

    FIN             reduce using rule 20 (impresion -> ECHO ID .)
    RLLAVE          reduce using rule 20 (impresion -> ECHO ID .)


state 15

    (21) impresion -> ECHO CADENA .

    FIN             reduce using rule 21 (impresion -> ECHO CADENA .)
    RLLAVE          reduce using rule 21 (impresion -> ECHO CADENA .)


state 16

    (7) valor -> ID .

    PCOMA           reduce using rule 7 (valor -> ID .)
    IGUAL           reduce using rule 7 (valor -> ID .)
    MAYOR           reduce using rule 7 (valor -> ID .)
    MENOR           reduce using rule 7 (valor -> ID .)
    MAYORIGUAL      reduce using rule 7 (valor -> ID .)
    MENORIGUAL      reduce using rule 7 (valor -> ID .)
    RPAREN          reduce using rule 7 (valor -> ID .)


state 17

    (5) asignacion -> ID ASIGNACION valor . PCOMA

    PCOMA           shift and go to state 24


state 18

    (8) valor -> NUMBER .

    PCOMA           reduce using rule 8 (valor -> NUMBER .)
    IGUAL           reduce using rule 8 (valor -> NUMBER .)
    MAYOR           reduce using rule 8 (valor -> NUMBER .)
    MENOR           reduce using rule 8 (valor -> NUMBER .)
    MAYORIGUAL      reduce using rule 8 (valor -> NUMBER .)
    MENORIGUAL      reduce using rule 8 (valor -> NUMBER .)
    RPAREN          reduce using rule 8 (valor -> NUMBER .)


state 19

    (9) valor -> CADENA .

    PCOMA           reduce using rule 9 (valor -> CADENA .)
    IGUAL           reduce using rule 9 (valor -> CADENA .)
    MAYOR           reduce using rule 9 (valor -> CADENA .)
    MENOR           reduce using rule 9 (valor -> CADENA .)
    MAYORIGUAL      reduce using rule 9 (valor -> CADENA .)
    MENORIGUAL      reduce using rule 9 (valor -> CADENA .)
    RPAREN          reduce using rule 9 (valor -> CADENA .)


state 20

    (10) valor -> BOOLEAN .

    PCOMA           reduce using rule 10 (valor -> BOOLEAN .)
    IGUAL           reduce using rule 10 (valor -> BOOLEAN .)
    MAYOR           reduce using rule 10 (valor -> BOOLEAN .)
    MENOR           reduce using rule 10 (valor -> BOOLEAN .)
    MAYORIGUAL      reduce using rule 10 (valor -> BOOLEAN .)
    MENORIGUAL      reduce using rule 10 (valor -> BOOLEAN .)
    RPAREN          reduce using rule 10 (valor -> BOOLEAN .)


state 21

    (6) asignacion -> ID REF ID . PCOMA

    PCOMA           shift and go to state 25


state 22

    (17) comparacion -> IF LPAREN expcmp . RPAREN LLLAVE sentencias RLLAVE
    (18) comparacion -> IF LPAREN expcmp . RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (19) comparacion -> IF LPAREN expcmp . RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE

    RPAREN          shift and go to state 26


state 23

    (16) expcmp -> valor . opcomparacion valor
    (11) opcomparacion -> . IGUAL
    (12) opcomparacion -> . MAYOR
    (13) opcomparacion -> . MENOR
    (14) opcomparacion -> . MAYORIGUAL
    (15) opcomparacion -> . MENORIGUAL

    IGUAL           shift and go to state 28
    MAYOR           shift and go to state 29
    MENOR           shift and go to state 30
    MAYORIGUAL      shift and go to state 31
    MENORIGUAL      shift and go to state 32

    opcomparacion                  shift and go to state 27

state 24

    (5) asignacion -> ID ASIGNACION valor PCOMA .

    FIN             reduce using rule 5 (asignacion -> ID ASIGNACION valor PCOMA .)
    RLLAVE          reduce using rule 5 (asignacion -> ID ASIGNACION valor PCOMA .)


state 25

    (6) asignacion -> ID REF ID PCOMA .

    FIN             reduce using rule 6 (asignacion -> ID REF ID PCOMA .)
    RLLAVE          reduce using rule 6 (asignacion -> ID REF ID PCOMA .)


state 26

    (17) comparacion -> IF LPAREN expcmp RPAREN . LLLAVE sentencias RLLAVE
    (18) comparacion -> IF LPAREN expcmp RPAREN . LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (19) comparacion -> IF LPAREN expcmp RPAREN . LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE

    LLLAVE          shift and go to state 33


state 27

    (16) expcmp -> valor opcomparacion . valor
    (7) valor -> . ID
    (8) valor -> . NUMBER
    (9) valor -> . CADENA
    (10) valor -> . BOOLEAN

    ID              shift and go to state 16
    NUMBER          shift and go to state 18
    CADENA          shift and go to state 19
    BOOLEAN         shift and go to state 20

    valor                          shift and go to state 34

state 28

    (11) opcomparacion -> IGUAL .

    ID              reduce using rule 11 (opcomparacion -> IGUAL .)
    NUMBER          reduce using rule 11 (opcomparacion -> IGUAL .)
    CADENA          reduce using rule 11 (opcomparacion -> IGUAL .)
    BOOLEAN         reduce using rule 11 (opcomparacion -> IGUAL .)


state 29

    (12) opcomparacion -> MAYOR .

    ID              reduce using rule 12 (opcomparacion -> MAYOR .)
    NUMBER          reduce using rule 12 (opcomparacion -> MAYOR .)
    CADENA          reduce using rule 12 (opcomparacion -> MAYOR .)
    BOOLEAN         reduce using rule 12 (opcomparacion -> MAYOR .)


state 30

    (13) opcomparacion -> MENOR .

    ID              reduce using rule 13 (opcomparacion -> MENOR .)
    NUMBER          reduce using rule 13 (opcomparacion -> MENOR .)
    CADENA          reduce using rule 13 (opcomparacion -> MENOR .)
    BOOLEAN         reduce using rule 13 (opcomparacion -> MENOR .)


state 31

    (14) opcomparacion -> MAYORIGUAL .

    ID              reduce using rule 14 (opcomparacion -> MAYORIGUAL .)
    NUMBER          reduce using rule 14 (opcomparacion -> MAYORIGUAL .)
    CADENA          reduce using rule 14 (opcomparacion -> MAYORIGUAL .)
    BOOLEAN         reduce using rule 14 (opcomparacion -> MAYORIGUAL .)


state 32

    (15) opcomparacion -> MENORIGUAL .

    ID              reduce using rule 15 (opcomparacion -> MENORIGUAL .)
    NUMBER          reduce using rule 15 (opcomparacion -> MENORIGUAL .)
    CADENA          reduce using rule 15 (opcomparacion -> MENORIGUAL .)
    BOOLEAN         reduce using rule 15 (opcomparacion -> MENORIGUAL .)


state 33

    (17) comparacion -> IF LPAREN expcmp RPAREN LLLAVE . sentencias RLLAVE
    (18) comparacion -> IF LPAREN expcmp RPAREN LLLAVE . sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (19) comparacion -> IF LPAREN expcmp RPAREN LLLAVE . sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (2) sentencias -> . asignacion
    (3) sentencias -> . comparacion
    (4) sentencias -> . impresion
    (5) asignacion -> . ID ASIGNACION valor PCOMA
    (6) asignacion -> . ID REF ID PCOMA
    (17) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE
    (18) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (19) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (20) impresion -> . ECHO ID
    (21) impresion -> . ECHO CADENA

    ID              shift and go to state 7
    IF              shift and go to state 8
    ECHO            shift and go to state 9

    sentencias                     shift and go to state 35
    asignacion                     shift and go to state 4
    comparacion                    shift and go to state 5
    impresion                      shift and go to state 6

state 34

    (16) expcmp -> valor opcomparacion valor .

    RPAREN          reduce using rule 16 (expcmp -> valor opcomparacion valor .)


state 35

    (17) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias . RLLAVE
    (18) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias . RLLAVE ELSE LLLAVE sentencias RLLAVE
    (19) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias . RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE

    RLLAVE          shift and go to state 36


state 36

    (17) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE .
    (18) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE . ELSE LLLAVE sentencias RLLAVE
    (19) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE . ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE

    FIN             reduce using rule 17 (comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 17 (comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE .)
    ELSE            shift and go to state 37
    ELSEIF          shift and go to state 38


state 37

    (18) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE . LLLAVE sentencias RLLAVE

    LLLAVE          shift and go to state 39


state 38

    (19) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF . LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE

    LPAREN          shift and go to state 40


state 39

    (18) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE . sentencias RLLAVE
    (2) sentencias -> . asignacion
    (3) sentencias -> . comparacion
    (4) sentencias -> . impresion
    (5) asignacion -> . ID ASIGNACION valor PCOMA
    (6) asignacion -> . ID REF ID PCOMA
    (17) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE
    (18) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (19) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (20) impresion -> . ECHO ID
    (21) impresion -> . ECHO CADENA

    ID              shift and go to state 7
    IF              shift and go to state 8
    ECHO            shift and go to state 9

    sentencias                     shift and go to state 41
    asignacion                     shift and go to state 4
    comparacion                    shift and go to state 5
    impresion                      shift and go to state 6

state 40

    (19) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN . expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (16) expcmp -> . valor opcomparacion valor
    (7) valor -> . ID
    (8) valor -> . NUMBER
    (9) valor -> . CADENA
    (10) valor -> . BOOLEAN

    ID              shift and go to state 16
    NUMBER          shift and go to state 18
    CADENA          shift and go to state 19
    BOOLEAN         shift and go to state 20

    expcmp                         shift and go to state 42
    valor                          shift and go to state 23

state 41

    (18) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias . RLLAVE

    RLLAVE          shift and go to state 43


state 42

    (19) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp . RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE

    RPAREN          shift and go to state 44


state 43

    (18) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .

    FIN             reduce using rule 18 (comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 18 (comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)


state 44

    (19) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN . LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE

    LLLAVE          shift and go to state 45


state 45

    (19) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE . sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (2) sentencias -> . asignacion
    (3) sentencias -> . comparacion
    (4) sentencias -> . impresion
    (5) asignacion -> . ID ASIGNACION valor PCOMA
    (6) asignacion -> . ID REF ID PCOMA
    (17) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE
    (18) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (19) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (20) impresion -> . ECHO ID
    (21) impresion -> . ECHO CADENA

    ID              shift and go to state 7
    IF              shift and go to state 8
    ECHO            shift and go to state 9

    sentencias                     shift and go to state 46
    asignacion                     shift and go to state 4
    comparacion                    shift and go to state 5
    impresion                      shift and go to state 6

state 46

    (19) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias . RLLAVE ELSE LLLAVE sentencias RLLAVE

    RLLAVE          shift and go to state 47


state 47

    (19) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE . ELSE LLLAVE sentencias RLLAVE

    ELSE            shift and go to state 48


state 48

    (19) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE . LLLAVE sentencias RLLAVE

    LLLAVE          shift and go to state 49


state 49

    (19) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE . sentencias RLLAVE
    (2) sentencias -> . asignacion
    (3) sentencias -> . comparacion
    (4) sentencias -> . impresion
    (5) asignacion -> . ID ASIGNACION valor PCOMA
    (6) asignacion -> . ID REF ID PCOMA
    (17) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE
    (18) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (19) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (20) impresion -> . ECHO ID
    (21) impresion -> . ECHO CADENA

    ID              shift and go to state 7
    IF              shift and go to state 8
    ECHO            shift and go to state 9

    sentencias                     shift and go to state 50
    asignacion                     shift and go to state 4
    comparacion                    shift and go to state 5
    impresion                      shift and go to state 6

state 50

    (19) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias . RLLAVE

    RLLAVE          shift and go to state 51


state 51

    (19) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .

    FIN             reduce using rule 19 (comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 19 (comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)

