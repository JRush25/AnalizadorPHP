Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    AND
    BOOLEAN_AND
    BOOLEAN_OR
    BREAK
    CASE
    CATCH
    CLASS
    COMMENT
    CONCAT_EQUAL
    CONST
    CONTINUE
    DECLARE
    DEFAULT
    DIVIDE
    DIV_EQUAL
    DO
    EXTENDS
    FINAL
    FUNCTION
    GLOBAL
    INCLUDE
    INSTANCEOF
    IS_NOT_EQUAL
    MINUS
    MOD
    OR
    PLUS
    PRINT
    PRIVATE
    PROTECTED
    PUBLIC
    TIMES
    TRY

Grammar

Rule 0     S' -> programa
Rule 1     programa -> INICIO sentencias FIN
Rule 2     sentencias -> asignacion
Rule 3     sentencias -> comparacion
Rule 4     sentencias -> funcion
Rule 5     sentencias -> impresion
Rule 6     sentencias -> repeticion
Rule 7     asignacion -> ID ASIGNACION valor PCOMA
Rule 8     asignacion -> ID REF ID PCOMA
Rule 9     asignacion -> ID ASIGNACION array PCOMA
Rule 10    valor -> ID
Rule 11    valor -> NUMBER
Rule 12    valor -> CADENA
Rule 13    valor -> BOOLEAN
Rule 14    opcomparacion -> IGUAL
Rule 15    opcomparacion -> MAYOR
Rule 16    opcomparacion -> MENOR
Rule 17    opcomparacion -> MAYORIGUAL
Rule 18    opcomparacion -> MENORIGUAL
Rule 19    expcmp -> valor opcomparacion valor
Rule 20    comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE
Rule 21    comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
Rule 22    comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
Rule 23    array -> ARRAY LPAREN valor DOUBLE_ARROW valor RPAREN
Rule 24    array -> ARRAY LPAREN valor RPAREN
Rule 25    contenido -> valor DOUBLE_ARROW valor
Rule 26    contenido -> contenido COMA valor DOUBLE_ARROW valor
Rule 27    sort -> SORT LPAREN ID RPAREN PCOMA
Rule 28    funcion -> sort
Rule 29    impresion -> ECHO ID PCOMA
Rule 30    impresion -> ECHO CADENA PCOMA
Rule 31    repeticionrep -> MAYOR
Rule 32    repeticionrep -> MENOR
Rule 33    repeticionrep -> MAYORIGUAL
Rule 34    repeticionrep -> MENORIGUAL
Rule 35    actualizar -> INCREMENTO
Rule 36    actualizar -> DECREMENTO
Rule 37    repeticion -> FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE
Rule 38    repeticion -> WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE
Rule 39    array_map -> ARRAY_MAP LPAREN funcion COMA array RPAREN PCOMA
Rule 40    heap -> HEAP DOUBLE_ARROW INSERT LPAREN LCORCH NUMBER COMA NUMBER RCORCH RPAREN PCOMA
Rule 41    heap -> LPAREN ARRAY LPAREN valor DOUBLE_ARROW NUMBER RPAREN RPAREN PCOMA

Terminals, with rules where they appear

ABSTRACT             : 
AND                  : 
ARRAY                : 23 24 41
ARRAY_MAP            : 39
ASIGNACION           : 7 9 37
BOOLEAN              : 13
BOOLEAN_AND          : 
BOOLEAN_OR           : 
BREAK                : 
CADENA               : 12 30
CASE                 : 
CATCH                : 
CLASS                : 
COMA                 : 26 39 40
COMMENT              : 
CONCAT_EQUAL         : 
CONST                : 
CONTINUE             : 
DECLARE              : 
DECREMENTO           : 36
DEFAULT              : 
DIVIDE               : 
DIV_EQUAL            : 
DO                   : 
DOUBLE_ARROW         : 23 25 26 40 41
ECHO                 : 29 30
ELSE                 : 21 22
ELSEIF               : 22
EXTENDS              : 
FIN                  : 1
FINAL                : 
FOR                  : 37
FUNCTION             : 
GLOBAL               : 
HEAP                 : 40
ID                   : 7 8 8 9 10 27 29 37 37 37 38 38
IF                   : 20 21 22
IGUAL                : 14
INCLUDE              : 
INCREMENTO           : 35
INICIO               : 1
INSERT               : 40
INSTANCEOF           : 
IS_NOT_EQUAL         : 
LCORCH               : 40
LLLAVE               : 20 21 21 22 22 22 37 38
LPAREN               : 20 21 22 22 23 24 27 37 38 39 40 41 41
MAYOR                : 15 31
MAYORIGUAL           : 17 33
MENOR                : 16 32
MENORIGUAL           : 18 34
MINUS                : 
MOD                  : 
NUMBER               : 11 37 37 40 40 41
OR                   : 
PCOMA                : 7 8 9 27 29 30 37 37 38 39 40 41
PLUS                 : 
PRINT                : 
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
RCORCH               : 40
REF                  : 8
RLLAVE               : 20 21 21 22 22 22 37 38
RPAREN               : 20 21 22 22 23 24 27 37 38 39 40 41 41
SORT                 : 27
TIMES                : 
TRY                  : 
WHILE                : 38
error                : 

Nonterminals, with rules where they appear

actualizar           : 37 38
array                : 9 39
array_map            : 
asignacion           : 2
comparacion          : 3
contenido            : 26
expcmp               : 20 21 22 22
funcion              : 4 39
heap                 : 
impresion            : 5
opcomparacion        : 19 38
programa             : 0
repeticion           : 6
repeticionrep        : 37
sentencias           : 1 20 21 21 22 22 22 37 38
sort                 : 28
valor                : 7 19 19 23 23 24 25 25 26 26 38 41

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . INICIO sentencias FIN

    INICIO          shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> INICIO . sentencias FIN
    (2) sentencias -> . asignacion
    (3) sentencias -> . comparacion
    (4) sentencias -> . funcion
    (5) sentencias -> . impresion
    (6) sentencias -> . repeticion
    (7) asignacion -> . ID ASIGNACION valor PCOMA
    (8) asignacion -> . ID REF ID PCOMA
    (9) asignacion -> . ID ASIGNACION array PCOMA
    (20) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE
    (21) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (22) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (28) funcion -> . sort
    (29) impresion -> . ECHO ID PCOMA
    (30) impresion -> . ECHO CADENA PCOMA
    (37) repeticion -> . FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE
    (38) repeticion -> . WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE
    (27) sort -> . SORT LPAREN ID RPAREN PCOMA

    ID              shift and go to state 9
    IF              shift and go to state 10
    ECHO            shift and go to state 12
    FOR             shift and go to state 13
    WHILE           shift and go to state 14
    SORT            shift and go to state 15

    sentencias                     shift and go to state 3
    asignacion                     shift and go to state 4
    comparacion                    shift and go to state 5
    funcion                        shift and go to state 6
    impresion                      shift and go to state 7
    repeticion                     shift and go to state 8
    sort                           shift and go to state 11

state 3

    (1) programa -> INICIO sentencias . FIN

    FIN             shift and go to state 16


state 4

    (2) sentencias -> asignacion .

    FIN             reduce using rule 2 (sentencias -> asignacion .)
    RLLAVE          reduce using rule 2 (sentencias -> asignacion .)
    ID              reduce using rule 2 (sentencias -> asignacion .)


state 5

    (3) sentencias -> comparacion .

    FIN             reduce using rule 3 (sentencias -> comparacion .)
    RLLAVE          reduce using rule 3 (sentencias -> comparacion .)
    ID              reduce using rule 3 (sentencias -> comparacion .)


state 6

    (4) sentencias -> funcion .

    FIN             reduce using rule 4 (sentencias -> funcion .)
    RLLAVE          reduce using rule 4 (sentencias -> funcion .)
    ID              reduce using rule 4 (sentencias -> funcion .)


state 7

    (5) sentencias -> impresion .

    FIN             reduce using rule 5 (sentencias -> impresion .)
    RLLAVE          reduce using rule 5 (sentencias -> impresion .)
    ID              reduce using rule 5 (sentencias -> impresion .)


state 8

    (6) sentencias -> repeticion .

    FIN             reduce using rule 6 (sentencias -> repeticion .)
    RLLAVE          reduce using rule 6 (sentencias -> repeticion .)
    ID              reduce using rule 6 (sentencias -> repeticion .)


state 9

    (7) asignacion -> ID . ASIGNACION valor PCOMA
    (8) asignacion -> ID . REF ID PCOMA
    (9) asignacion -> ID . ASIGNACION array PCOMA

    ASIGNACION      shift and go to state 17
    REF             shift and go to state 18


state 10

    (20) comparacion -> IF . LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE
    (21) comparacion -> IF . LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (22) comparacion -> IF . LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE

    LPAREN          shift and go to state 19


state 11

    (28) funcion -> sort .

    FIN             reduce using rule 28 (funcion -> sort .)
    RLLAVE          reduce using rule 28 (funcion -> sort .)
    ID              reduce using rule 28 (funcion -> sort .)


state 12

    (29) impresion -> ECHO . ID PCOMA
    (30) impresion -> ECHO . CADENA PCOMA

    ID              shift and go to state 20
    CADENA          shift and go to state 21


state 13

    (37) repeticion -> FOR . LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE

    LPAREN          shift and go to state 22


state 14

    (38) repeticion -> WHILE . LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE

    LPAREN          shift and go to state 23


state 15

    (27) sort -> SORT . LPAREN ID RPAREN PCOMA

    LPAREN          shift and go to state 24


state 16

    (1) programa -> INICIO sentencias FIN .

    $end            reduce using rule 1 (programa -> INICIO sentencias FIN .)


state 17

    (7) asignacion -> ID ASIGNACION . valor PCOMA
    (9) asignacion -> ID ASIGNACION . array PCOMA
    (10) valor -> . ID
    (11) valor -> . NUMBER
    (12) valor -> . CADENA
    (13) valor -> . BOOLEAN
    (23) array -> . ARRAY LPAREN valor DOUBLE_ARROW valor RPAREN
    (24) array -> . ARRAY LPAREN valor RPAREN

    ID              shift and go to state 25
    NUMBER          shift and go to state 28
    CADENA          shift and go to state 29
    BOOLEAN         shift and go to state 30
    ARRAY           shift and go to state 31

    valor                          shift and go to state 26
    array                          shift and go to state 27

state 18

    (8) asignacion -> ID REF . ID PCOMA

    ID              shift and go to state 32


state 19

    (20) comparacion -> IF LPAREN . expcmp RPAREN LLLAVE sentencias RLLAVE
    (21) comparacion -> IF LPAREN . expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (22) comparacion -> IF LPAREN . expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (19) expcmp -> . valor opcomparacion valor
    (10) valor -> . ID
    (11) valor -> . NUMBER
    (12) valor -> . CADENA
    (13) valor -> . BOOLEAN

    ID              shift and go to state 25
    NUMBER          shift and go to state 28
    CADENA          shift and go to state 29
    BOOLEAN         shift and go to state 30

    expcmp                         shift and go to state 33
    valor                          shift and go to state 34

state 20

    (29) impresion -> ECHO ID . PCOMA

    PCOMA           shift and go to state 35


state 21

    (30) impresion -> ECHO CADENA . PCOMA

    PCOMA           shift and go to state 36


state 22

    (37) repeticion -> FOR LPAREN . ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE

    ID              shift and go to state 37


state 23

    (38) repeticion -> WHILE LPAREN . ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE

    ID              shift and go to state 38


state 24

    (27) sort -> SORT LPAREN . ID RPAREN PCOMA

    ID              shift and go to state 39


state 25

    (10) valor -> ID .

    PCOMA           reduce using rule 10 (valor -> ID .)
    IGUAL           reduce using rule 10 (valor -> ID .)
    MAYOR           reduce using rule 10 (valor -> ID .)
    MENOR           reduce using rule 10 (valor -> ID .)
    MAYORIGUAL      reduce using rule 10 (valor -> ID .)
    MENORIGUAL      reduce using rule 10 (valor -> ID .)
    DOUBLE_ARROW    reduce using rule 10 (valor -> ID .)
    RPAREN          reduce using rule 10 (valor -> ID .)


state 26

    (7) asignacion -> ID ASIGNACION valor . PCOMA

    PCOMA           shift and go to state 40


state 27

    (9) asignacion -> ID ASIGNACION array . PCOMA

    PCOMA           shift and go to state 41


state 28

    (11) valor -> NUMBER .

    PCOMA           reduce using rule 11 (valor -> NUMBER .)
    IGUAL           reduce using rule 11 (valor -> NUMBER .)
    MAYOR           reduce using rule 11 (valor -> NUMBER .)
    MENOR           reduce using rule 11 (valor -> NUMBER .)
    MAYORIGUAL      reduce using rule 11 (valor -> NUMBER .)
    MENORIGUAL      reduce using rule 11 (valor -> NUMBER .)
    DOUBLE_ARROW    reduce using rule 11 (valor -> NUMBER .)
    RPAREN          reduce using rule 11 (valor -> NUMBER .)


state 29

    (12) valor -> CADENA .

    PCOMA           reduce using rule 12 (valor -> CADENA .)
    IGUAL           reduce using rule 12 (valor -> CADENA .)
    MAYOR           reduce using rule 12 (valor -> CADENA .)
    MENOR           reduce using rule 12 (valor -> CADENA .)
    MAYORIGUAL      reduce using rule 12 (valor -> CADENA .)
    MENORIGUAL      reduce using rule 12 (valor -> CADENA .)
    DOUBLE_ARROW    reduce using rule 12 (valor -> CADENA .)
    RPAREN          reduce using rule 12 (valor -> CADENA .)


state 30

    (13) valor -> BOOLEAN .

    PCOMA           reduce using rule 13 (valor -> BOOLEAN .)
    IGUAL           reduce using rule 13 (valor -> BOOLEAN .)
    MAYOR           reduce using rule 13 (valor -> BOOLEAN .)
    MENOR           reduce using rule 13 (valor -> BOOLEAN .)
    MAYORIGUAL      reduce using rule 13 (valor -> BOOLEAN .)
    MENORIGUAL      reduce using rule 13 (valor -> BOOLEAN .)
    DOUBLE_ARROW    reduce using rule 13 (valor -> BOOLEAN .)
    RPAREN          reduce using rule 13 (valor -> BOOLEAN .)


state 31

    (23) array -> ARRAY . LPAREN valor DOUBLE_ARROW valor RPAREN
    (24) array -> ARRAY . LPAREN valor RPAREN

    LPAREN          shift and go to state 42


state 32

    (8) asignacion -> ID REF ID . PCOMA

    PCOMA           shift and go to state 43


state 33

    (20) comparacion -> IF LPAREN expcmp . RPAREN LLLAVE sentencias RLLAVE
    (21) comparacion -> IF LPAREN expcmp . RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (22) comparacion -> IF LPAREN expcmp . RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE

    RPAREN          shift and go to state 44


state 34

    (19) expcmp -> valor . opcomparacion valor
    (14) opcomparacion -> . IGUAL
    (15) opcomparacion -> . MAYOR
    (16) opcomparacion -> . MENOR
    (17) opcomparacion -> . MAYORIGUAL
    (18) opcomparacion -> . MENORIGUAL

    IGUAL           shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYORIGUAL      shift and go to state 49
    MENORIGUAL      shift and go to state 50

    opcomparacion                  shift and go to state 45

state 35

    (29) impresion -> ECHO ID PCOMA .

    FIN             reduce using rule 29 (impresion -> ECHO ID PCOMA .)
    RLLAVE          reduce using rule 29 (impresion -> ECHO ID PCOMA .)
    ID              reduce using rule 29 (impresion -> ECHO ID PCOMA .)


state 36

    (30) impresion -> ECHO CADENA PCOMA .

    FIN             reduce using rule 30 (impresion -> ECHO CADENA PCOMA .)
    RLLAVE          reduce using rule 30 (impresion -> ECHO CADENA PCOMA .)
    ID              reduce using rule 30 (impresion -> ECHO CADENA PCOMA .)


state 37

    (37) repeticion -> FOR LPAREN ID . ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE

    ASIGNACION      shift and go to state 51


state 38

    (38) repeticion -> WHILE LPAREN ID . opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE
    (14) opcomparacion -> . IGUAL
    (15) opcomparacion -> . MAYOR
    (16) opcomparacion -> . MENOR
    (17) opcomparacion -> . MAYORIGUAL
    (18) opcomparacion -> . MENORIGUAL

    IGUAL           shift and go to state 46
    MAYOR           shift and go to state 47
    MENOR           shift and go to state 48
    MAYORIGUAL      shift and go to state 49
    MENORIGUAL      shift and go to state 50

    opcomparacion                  shift and go to state 52

state 39

    (27) sort -> SORT LPAREN ID . RPAREN PCOMA

    RPAREN          shift and go to state 53


state 40

    (7) asignacion -> ID ASIGNACION valor PCOMA .

    FIN             reduce using rule 7 (asignacion -> ID ASIGNACION valor PCOMA .)
    RLLAVE          reduce using rule 7 (asignacion -> ID ASIGNACION valor PCOMA .)
    ID              reduce using rule 7 (asignacion -> ID ASIGNACION valor PCOMA .)


state 41

    (9) asignacion -> ID ASIGNACION array PCOMA .

    FIN             reduce using rule 9 (asignacion -> ID ASIGNACION array PCOMA .)
    RLLAVE          reduce using rule 9 (asignacion -> ID ASIGNACION array PCOMA .)
    ID              reduce using rule 9 (asignacion -> ID ASIGNACION array PCOMA .)


state 42

    (23) array -> ARRAY LPAREN . valor DOUBLE_ARROW valor RPAREN
    (24) array -> ARRAY LPAREN . valor RPAREN
    (10) valor -> . ID
    (11) valor -> . NUMBER
    (12) valor -> . CADENA
    (13) valor -> . BOOLEAN

    ID              shift and go to state 25
    NUMBER          shift and go to state 28
    CADENA          shift and go to state 29
    BOOLEAN         shift and go to state 30

    valor                          shift and go to state 54

state 43

    (8) asignacion -> ID REF ID PCOMA .

    FIN             reduce using rule 8 (asignacion -> ID REF ID PCOMA .)
    RLLAVE          reduce using rule 8 (asignacion -> ID REF ID PCOMA .)
    ID              reduce using rule 8 (asignacion -> ID REF ID PCOMA .)


state 44

    (20) comparacion -> IF LPAREN expcmp RPAREN . LLLAVE sentencias RLLAVE
    (21) comparacion -> IF LPAREN expcmp RPAREN . LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (22) comparacion -> IF LPAREN expcmp RPAREN . LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE

    LLLAVE          shift and go to state 55


state 45

    (19) expcmp -> valor opcomparacion . valor
    (10) valor -> . ID
    (11) valor -> . NUMBER
    (12) valor -> . CADENA
    (13) valor -> . BOOLEAN

    ID              shift and go to state 25
    NUMBER          shift and go to state 28
    CADENA          shift and go to state 29
    BOOLEAN         shift and go to state 30

    valor                          shift and go to state 56

state 46

    (14) opcomparacion -> IGUAL .

    ID              reduce using rule 14 (opcomparacion -> IGUAL .)
    NUMBER          reduce using rule 14 (opcomparacion -> IGUAL .)
    CADENA          reduce using rule 14 (opcomparacion -> IGUAL .)
    BOOLEAN         reduce using rule 14 (opcomparacion -> IGUAL .)


state 47

    (15) opcomparacion -> MAYOR .

    ID              reduce using rule 15 (opcomparacion -> MAYOR .)
    NUMBER          reduce using rule 15 (opcomparacion -> MAYOR .)
    CADENA          reduce using rule 15 (opcomparacion -> MAYOR .)
    BOOLEAN         reduce using rule 15 (opcomparacion -> MAYOR .)


state 48

    (16) opcomparacion -> MENOR .

    ID              reduce using rule 16 (opcomparacion -> MENOR .)
    NUMBER          reduce using rule 16 (opcomparacion -> MENOR .)
    CADENA          reduce using rule 16 (opcomparacion -> MENOR .)
    BOOLEAN         reduce using rule 16 (opcomparacion -> MENOR .)


state 49

    (17) opcomparacion -> MAYORIGUAL .

    ID              reduce using rule 17 (opcomparacion -> MAYORIGUAL .)
    NUMBER          reduce using rule 17 (opcomparacion -> MAYORIGUAL .)
    CADENA          reduce using rule 17 (opcomparacion -> MAYORIGUAL .)
    BOOLEAN         reduce using rule 17 (opcomparacion -> MAYORIGUAL .)


state 50

    (18) opcomparacion -> MENORIGUAL .

    ID              reduce using rule 18 (opcomparacion -> MENORIGUAL .)
    NUMBER          reduce using rule 18 (opcomparacion -> MENORIGUAL .)
    CADENA          reduce using rule 18 (opcomparacion -> MENORIGUAL .)
    BOOLEAN         reduce using rule 18 (opcomparacion -> MENORIGUAL .)


state 51

    (37) repeticion -> FOR LPAREN ID ASIGNACION . NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE

    NUMBER          shift and go to state 57


state 52

    (38) repeticion -> WHILE LPAREN ID opcomparacion . valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE
    (10) valor -> . ID
    (11) valor -> . NUMBER
    (12) valor -> . CADENA
    (13) valor -> . BOOLEAN

    ID              shift and go to state 25
    NUMBER          shift and go to state 28
    CADENA          shift and go to state 29
    BOOLEAN         shift and go to state 30

    valor                          shift and go to state 58

state 53

    (27) sort -> SORT LPAREN ID RPAREN . PCOMA

    PCOMA           shift and go to state 59


state 54

    (23) array -> ARRAY LPAREN valor . DOUBLE_ARROW valor RPAREN
    (24) array -> ARRAY LPAREN valor . RPAREN

    DOUBLE_ARROW    shift and go to state 60
    RPAREN          shift and go to state 61


state 55

    (20) comparacion -> IF LPAREN expcmp RPAREN LLLAVE . sentencias RLLAVE
    (21) comparacion -> IF LPAREN expcmp RPAREN LLLAVE . sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (22) comparacion -> IF LPAREN expcmp RPAREN LLLAVE . sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (2) sentencias -> . asignacion
    (3) sentencias -> . comparacion
    (4) sentencias -> . funcion
    (5) sentencias -> . impresion
    (6) sentencias -> . repeticion
    (7) asignacion -> . ID ASIGNACION valor PCOMA
    (8) asignacion -> . ID REF ID PCOMA
    (9) asignacion -> . ID ASIGNACION array PCOMA
    (20) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE
    (21) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (22) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (28) funcion -> . sort
    (29) impresion -> . ECHO ID PCOMA
    (30) impresion -> . ECHO CADENA PCOMA
    (37) repeticion -> . FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE
    (38) repeticion -> . WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE
    (27) sort -> . SORT LPAREN ID RPAREN PCOMA

    ID              shift and go to state 9
    IF              shift and go to state 10
    ECHO            shift and go to state 12
    FOR             shift and go to state 13
    WHILE           shift and go to state 14
    SORT            shift and go to state 15

    sentencias                     shift and go to state 62
    asignacion                     shift and go to state 4
    comparacion                    shift and go to state 5
    funcion                        shift and go to state 6
    impresion                      shift and go to state 7
    repeticion                     shift and go to state 8
    sort                           shift and go to state 11

state 56

    (19) expcmp -> valor opcomparacion valor .

    RPAREN          reduce using rule 19 (expcmp -> valor opcomparacion valor .)


state 57

    (37) repeticion -> FOR LPAREN ID ASIGNACION NUMBER . PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE

    PCOMA           shift and go to state 63


state 58

    (38) repeticion -> WHILE LPAREN ID opcomparacion valor . RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE

    RPAREN          shift and go to state 64


state 59

    (27) sort -> SORT LPAREN ID RPAREN PCOMA .

    FIN             reduce using rule 27 (sort -> SORT LPAREN ID RPAREN PCOMA .)
    RLLAVE          reduce using rule 27 (sort -> SORT LPAREN ID RPAREN PCOMA .)
    ID              reduce using rule 27 (sort -> SORT LPAREN ID RPAREN PCOMA .)


state 60

    (23) array -> ARRAY LPAREN valor DOUBLE_ARROW . valor RPAREN
    (10) valor -> . ID
    (11) valor -> . NUMBER
    (12) valor -> . CADENA
    (13) valor -> . BOOLEAN

    ID              shift and go to state 25
    NUMBER          shift and go to state 28
    CADENA          shift and go to state 29
    BOOLEAN         shift and go to state 30

    valor                          shift and go to state 65

state 61

    (24) array -> ARRAY LPAREN valor RPAREN .

    PCOMA           reduce using rule 24 (array -> ARRAY LPAREN valor RPAREN .)


state 62

    (20) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias . RLLAVE
    (21) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias . RLLAVE ELSE LLLAVE sentencias RLLAVE
    (22) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias . RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE

    RLLAVE          shift and go to state 66


state 63

    (37) repeticion -> FOR LPAREN ID ASIGNACION NUMBER PCOMA . ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE

    ID              shift and go to state 67


state 64

    (38) repeticion -> WHILE LPAREN ID opcomparacion valor RPAREN . LLLAVE sentencias ID actualizar PCOMA RLLAVE

    LLLAVE          shift and go to state 68


state 65

    (23) array -> ARRAY LPAREN valor DOUBLE_ARROW valor . RPAREN

    RPAREN          shift and go to state 69


state 66

    (20) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE .
    (21) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE . ELSE LLLAVE sentencias RLLAVE
    (22) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE . ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE

    FIN             reduce using rule 20 (comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 20 (comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE .)
    ID              reduce using rule 20 (comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE .)
    ELSE            shift and go to state 70
    ELSEIF          shift and go to state 71


state 67

    (37) repeticion -> FOR LPAREN ID ASIGNACION NUMBER PCOMA ID . repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE
    (31) repeticionrep -> . MAYOR
    (32) repeticionrep -> . MENOR
    (33) repeticionrep -> . MAYORIGUAL
    (34) repeticionrep -> . MENORIGUAL

    MAYOR           shift and go to state 73
    MENOR           shift and go to state 74
    MAYORIGUAL      shift and go to state 75
    MENORIGUAL      shift and go to state 76

    repeticionrep                  shift and go to state 72

state 68

    (38) repeticion -> WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE . sentencias ID actualizar PCOMA RLLAVE
    (2) sentencias -> . asignacion
    (3) sentencias -> . comparacion
    (4) sentencias -> . funcion
    (5) sentencias -> . impresion
    (6) sentencias -> . repeticion
    (7) asignacion -> . ID ASIGNACION valor PCOMA
    (8) asignacion -> . ID REF ID PCOMA
    (9) asignacion -> . ID ASIGNACION array PCOMA
    (20) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE
    (21) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (22) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (28) funcion -> . sort
    (29) impresion -> . ECHO ID PCOMA
    (30) impresion -> . ECHO CADENA PCOMA
    (37) repeticion -> . FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE
    (38) repeticion -> . WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE
    (27) sort -> . SORT LPAREN ID RPAREN PCOMA

    ID              shift and go to state 9
    IF              shift and go to state 10
    ECHO            shift and go to state 12
    FOR             shift and go to state 13
    WHILE           shift and go to state 14
    SORT            shift and go to state 15

    sentencias                     shift and go to state 77
    asignacion                     shift and go to state 4
    comparacion                    shift and go to state 5
    funcion                        shift and go to state 6
    impresion                      shift and go to state 7
    repeticion                     shift and go to state 8
    sort                           shift and go to state 11

state 69

    (23) array -> ARRAY LPAREN valor DOUBLE_ARROW valor RPAREN .

    PCOMA           reduce using rule 23 (array -> ARRAY LPAREN valor DOUBLE_ARROW valor RPAREN .)


state 70

    (21) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE . LLLAVE sentencias RLLAVE

    LLLAVE          shift and go to state 78


state 71

    (22) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF . LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE

    LPAREN          shift and go to state 79


state 72

    (37) repeticion -> FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep . NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE

    NUMBER          shift and go to state 80


state 73

    (31) repeticionrep -> MAYOR .

    NUMBER          reduce using rule 31 (repeticionrep -> MAYOR .)


state 74

    (32) repeticionrep -> MENOR .

    NUMBER          reduce using rule 32 (repeticionrep -> MENOR .)


state 75

    (33) repeticionrep -> MAYORIGUAL .

    NUMBER          reduce using rule 33 (repeticionrep -> MAYORIGUAL .)


state 76

    (34) repeticionrep -> MENORIGUAL .

    NUMBER          reduce using rule 34 (repeticionrep -> MENORIGUAL .)


state 77

    (38) repeticion -> WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias . ID actualizar PCOMA RLLAVE

    ID              shift and go to state 81


state 78

    (21) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE . sentencias RLLAVE
    (2) sentencias -> . asignacion
    (3) sentencias -> . comparacion
    (4) sentencias -> . funcion
    (5) sentencias -> . impresion
    (6) sentencias -> . repeticion
    (7) asignacion -> . ID ASIGNACION valor PCOMA
    (8) asignacion -> . ID REF ID PCOMA
    (9) asignacion -> . ID ASIGNACION array PCOMA
    (20) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE
    (21) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (22) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (28) funcion -> . sort
    (29) impresion -> . ECHO ID PCOMA
    (30) impresion -> . ECHO CADENA PCOMA
    (37) repeticion -> . FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE
    (38) repeticion -> . WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE
    (27) sort -> . SORT LPAREN ID RPAREN PCOMA

    ID              shift and go to state 9
    IF              shift and go to state 10
    ECHO            shift and go to state 12
    FOR             shift and go to state 13
    WHILE           shift and go to state 14
    SORT            shift and go to state 15

    sentencias                     shift and go to state 82
    asignacion                     shift and go to state 4
    comparacion                    shift and go to state 5
    funcion                        shift and go to state 6
    impresion                      shift and go to state 7
    repeticion                     shift and go to state 8
    sort                           shift and go to state 11

state 79

    (22) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN . expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (19) expcmp -> . valor opcomparacion valor
    (10) valor -> . ID
    (11) valor -> . NUMBER
    (12) valor -> . CADENA
    (13) valor -> . BOOLEAN

    ID              shift and go to state 25
    NUMBER          shift and go to state 28
    CADENA          shift and go to state 29
    BOOLEAN         shift and go to state 30

    expcmp                         shift and go to state 83
    valor                          shift and go to state 34

state 80

    (37) repeticion -> FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER . PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE

    PCOMA           shift and go to state 84


state 81

    (38) repeticion -> WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID . actualizar PCOMA RLLAVE
    (35) actualizar -> . INCREMENTO
    (36) actualizar -> . DECREMENTO

    INCREMENTO      shift and go to state 86
    DECREMENTO      shift and go to state 87

    actualizar                     shift and go to state 85

state 82

    (21) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias . RLLAVE

    RLLAVE          shift and go to state 88


state 83

    (22) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp . RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE

    RPAREN          shift and go to state 89


state 84

    (37) repeticion -> FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA . ID actualizar RPAREN LLLAVE sentencias RLLAVE

    ID              shift and go to state 90


state 85

    (38) repeticion -> WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar . PCOMA RLLAVE

    PCOMA           shift and go to state 91


state 86

    (35) actualizar -> INCREMENTO .

    PCOMA           reduce using rule 35 (actualizar -> INCREMENTO .)
    RPAREN          reduce using rule 35 (actualizar -> INCREMENTO .)


state 87

    (36) actualizar -> DECREMENTO .

    PCOMA           reduce using rule 36 (actualizar -> DECREMENTO .)
    RPAREN          reduce using rule 36 (actualizar -> DECREMENTO .)


state 88

    (21) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .

    FIN             reduce using rule 21 (comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 21 (comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    ID              reduce using rule 21 (comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)


state 89

    (22) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN . LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE

    LLLAVE          shift and go to state 92


state 90

    (37) repeticion -> FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID . actualizar RPAREN LLLAVE sentencias RLLAVE
    (35) actualizar -> . INCREMENTO
    (36) actualizar -> . DECREMENTO

    INCREMENTO      shift and go to state 86
    DECREMENTO      shift and go to state 87

    actualizar                     shift and go to state 93

state 91

    (38) repeticion -> WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA . RLLAVE

    RLLAVE          shift and go to state 94


state 92

    (22) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE . sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (2) sentencias -> . asignacion
    (3) sentencias -> . comparacion
    (4) sentencias -> . funcion
    (5) sentencias -> . impresion
    (6) sentencias -> . repeticion
    (7) asignacion -> . ID ASIGNACION valor PCOMA
    (8) asignacion -> . ID REF ID PCOMA
    (9) asignacion -> . ID ASIGNACION array PCOMA
    (20) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE
    (21) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (22) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (28) funcion -> . sort
    (29) impresion -> . ECHO ID PCOMA
    (30) impresion -> . ECHO CADENA PCOMA
    (37) repeticion -> . FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE
    (38) repeticion -> . WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE
    (27) sort -> . SORT LPAREN ID RPAREN PCOMA

    ID              shift and go to state 9
    IF              shift and go to state 10
    ECHO            shift and go to state 12
    FOR             shift and go to state 13
    WHILE           shift and go to state 14
    SORT            shift and go to state 15

    sentencias                     shift and go to state 95
    asignacion                     shift and go to state 4
    comparacion                    shift and go to state 5
    funcion                        shift and go to state 6
    impresion                      shift and go to state 7
    repeticion                     shift and go to state 8
    sort                           shift and go to state 11

state 93

    (37) repeticion -> FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar . RPAREN LLLAVE sentencias RLLAVE

    RPAREN          shift and go to state 96


state 94

    (38) repeticion -> WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE .

    FIN             reduce using rule 38 (repeticion -> WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE .)
    RLLAVE          reduce using rule 38 (repeticion -> WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE .)
    ID              reduce using rule 38 (repeticion -> WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE .)


state 95

    (22) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias . RLLAVE ELSE LLLAVE sentencias RLLAVE

    RLLAVE          shift and go to state 97


state 96

    (37) repeticion -> FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN . LLLAVE sentencias RLLAVE

    LLLAVE          shift and go to state 98


state 97

    (22) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE . ELSE LLLAVE sentencias RLLAVE

    ELSE            shift and go to state 99


state 98

    (37) repeticion -> FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE . sentencias RLLAVE
    (2) sentencias -> . asignacion
    (3) sentencias -> . comparacion
    (4) sentencias -> . funcion
    (5) sentencias -> . impresion
    (6) sentencias -> . repeticion
    (7) asignacion -> . ID ASIGNACION valor PCOMA
    (8) asignacion -> . ID REF ID PCOMA
    (9) asignacion -> . ID ASIGNACION array PCOMA
    (20) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE
    (21) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (22) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (28) funcion -> . sort
    (29) impresion -> . ECHO ID PCOMA
    (30) impresion -> . ECHO CADENA PCOMA
    (37) repeticion -> . FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE
    (38) repeticion -> . WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE
    (27) sort -> . SORT LPAREN ID RPAREN PCOMA

    ID              shift and go to state 9
    IF              shift and go to state 10
    ECHO            shift and go to state 12
    FOR             shift and go to state 13
    WHILE           shift and go to state 14
    SORT            shift and go to state 15

    sentencias                     shift and go to state 100
    asignacion                     shift and go to state 4
    comparacion                    shift and go to state 5
    funcion                        shift and go to state 6
    impresion                      shift and go to state 7
    repeticion                     shift and go to state 8
    sort                           shift and go to state 11

state 99

    (22) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE . LLLAVE sentencias RLLAVE

    LLLAVE          shift and go to state 101


state 100

    (37) repeticion -> FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias . RLLAVE

    RLLAVE          shift and go to state 102


state 101

    (22) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE . sentencias RLLAVE
    (2) sentencias -> . asignacion
    (3) sentencias -> . comparacion
    (4) sentencias -> . funcion
    (5) sentencias -> . impresion
    (6) sentencias -> . repeticion
    (7) asignacion -> . ID ASIGNACION valor PCOMA
    (8) asignacion -> . ID REF ID PCOMA
    (9) asignacion -> . ID ASIGNACION array PCOMA
    (20) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE
    (21) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (22) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (28) funcion -> . sort
    (29) impresion -> . ECHO ID PCOMA
    (30) impresion -> . ECHO CADENA PCOMA
    (37) repeticion -> . FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE
    (38) repeticion -> . WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE
    (27) sort -> . SORT LPAREN ID RPAREN PCOMA

    ID              shift and go to state 9
    IF              shift and go to state 10
    ECHO            shift and go to state 12
    FOR             shift and go to state 13
    WHILE           shift and go to state 14
    SORT            shift and go to state 15

    sentencias                     shift and go to state 103
    asignacion                     shift and go to state 4
    comparacion                    shift and go to state 5
    funcion                        shift and go to state 6
    impresion                      shift and go to state 7
    repeticion                     shift and go to state 8
    sort                           shift and go to state 11

state 102

    (37) repeticion -> FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE .

    FIN             reduce using rule 37 (repeticion -> FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 37 (repeticion -> FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE .)
    ID              reduce using rule 37 (repeticion -> FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE .)


state 103

    (22) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias . RLLAVE

    RLLAVE          shift and go to state 104


state 104

    (22) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .

    FIN             reduce using rule 22 (comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 22 (comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    ID              reduce using rule 22 (comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)

