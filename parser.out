Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    AND
    BOOLEAN_AND
    BOOLEAN_OR
    BREAK
    CASE
    CATCH
    CLASS
    COMMENT
    CONCAT_EQUAL
    CONST
    CONTINUE
    DECLARE
    DECREMENTO
    DEFAULT
    DIVIDE
    DIV_EQUAL
    DO
    DOUBLE_ARROW
    ECHO
    ELSE
    ELSEIF
    EXTENDS
    FINAL
    FOR
    FUNCTION
    GLOBAL
    INCLUDE
    INCREMENTO
    INSTANCEOF
    IS_NOT_EQUAL
    MINUS
    MOD
    OR
    PLUS
    PRINT
    PRIVATE
    PROTECTED
    PUBLIC
    TIMES
    TRY
    WHILE

Grammar

Rule 0     S' -> programa
Rule 1     programa -> INICIO sentencias FIN
Rule 2     sentencias -> asignacion
Rule 3     sentencias -> comparacion
Rule 4     asignacion -> ID ASIGNACION valor PCOMA
Rule 5     asignacion -> ID REF ID PCOMA
Rule 6     valor -> ID
Rule 7     valor -> NUMBER
Rule 8     valor -> CADENA
Rule 9     valor -> BOOLEAN
Rule 10    opcomparacion -> IGUAL
Rule 11    opcomparacion -> MAYOR
Rule 12    opcomparacion -> MENOR
Rule 13    opcomparacion -> MAYORIGUAL
Rule 14    opcomparacion -> MENORIGUAL
Rule 15    expcmp -> valor opcomparacion valor
Rule 16    comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE

Terminals, with rules where they appear

ABSTRACT             : 
AND                  : 
ASIGNACION           : 4
BOOLEAN              : 9
BOOLEAN_AND          : 
BOOLEAN_OR           : 
BREAK                : 
CADENA               : 8
CASE                 : 
CATCH                : 
CLASS                : 
COMMENT              : 
CONCAT_EQUAL         : 
CONST                : 
CONTINUE             : 
DECLARE              : 
DECREMENTO           : 
DEFAULT              : 
DIVIDE               : 
DIV_EQUAL            : 
DO                   : 
DOUBLE_ARROW         : 
ECHO                 : 
ELSE                 : 
ELSEIF               : 
EXTENDS              : 
FIN                  : 1
FINAL                : 
FOR                  : 
FUNCTION             : 
GLOBAL               : 
ID                   : 4 5 5 6
IF                   : 16
IGUAL                : 10
INCLUDE              : 
INCREMENTO           : 
INICIO               : 1
INSTANCEOF           : 
IS_NOT_EQUAL         : 
LLLAVE               : 16
LPAREN               : 16
MAYOR                : 11
MAYORIGUAL           : 13
MENOR                : 12
MENORIGUAL           : 14
MINUS                : 
MOD                  : 
NUMBER               : 7
OR                   : 
PCOMA                : 4 5
PLUS                 : 
PRINT                : 
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
REF                  : 5
RLLAVE               : 16
RPAREN               : 16
TIMES                : 
TRY                  : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

asignacion           : 2
comparacion          : 3
expcmp               : 16
opcomparacion        : 15
programa             : 0
sentencias           : 1 16
valor                : 4 15 15

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . INICIO sentencias FIN

    INICIO          shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> INICIO . sentencias FIN
    (2) sentencias -> . asignacion
    (3) sentencias -> . comparacion
    (4) asignacion -> . ID ASIGNACION valor PCOMA
    (5) asignacion -> . ID REF ID PCOMA
    (16) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE

    ID              shift and go to state 6
    IF              shift and go to state 7

    sentencias                     shift and go to state 3
    asignacion                     shift and go to state 4
    comparacion                    shift and go to state 5

state 3

    (1) programa -> INICIO sentencias . FIN

    FIN             shift and go to state 8


state 4

    (2) sentencias -> asignacion .

    FIN             reduce using rule 2 (sentencias -> asignacion .)
    RLLAVE          reduce using rule 2 (sentencias -> asignacion .)


state 5

    (3) sentencias -> comparacion .

    FIN             reduce using rule 3 (sentencias -> comparacion .)
    RLLAVE          reduce using rule 3 (sentencias -> comparacion .)


state 6

    (4) asignacion -> ID . ASIGNACION valor PCOMA
    (5) asignacion -> ID . REF ID PCOMA

    ASIGNACION      shift and go to state 9
    REF             shift and go to state 10


state 7

    (16) comparacion -> IF . LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE

    LPAREN          shift and go to state 11


state 8

    (1) programa -> INICIO sentencias FIN .

    $end            reduce using rule 1 (programa -> INICIO sentencias FIN .)


state 9

    (4) asignacion -> ID ASIGNACION . valor PCOMA
    (6) valor -> . ID
    (7) valor -> . NUMBER
    (8) valor -> . CADENA
    (9) valor -> . BOOLEAN

    ID              shift and go to state 12
    NUMBER          shift and go to state 14
    CADENA          shift and go to state 15
    BOOLEAN         shift and go to state 16

    valor                          shift and go to state 13

state 10

    (5) asignacion -> ID REF . ID PCOMA

    ID              shift and go to state 17


state 11

    (16) comparacion -> IF LPAREN . expcmp RPAREN LLLAVE sentencias RLLAVE
    (15) expcmp -> . valor opcomparacion valor
    (6) valor -> . ID
    (7) valor -> . NUMBER
    (8) valor -> . CADENA
    (9) valor -> . BOOLEAN

    ID              shift and go to state 12
    NUMBER          shift and go to state 14
    CADENA          shift and go to state 15
    BOOLEAN         shift and go to state 16

    expcmp                         shift and go to state 18
    valor                          shift and go to state 19

state 12

    (6) valor -> ID .

    PCOMA           reduce using rule 6 (valor -> ID .)
    IGUAL           reduce using rule 6 (valor -> ID .)
    MAYOR           reduce using rule 6 (valor -> ID .)
    MENOR           reduce using rule 6 (valor -> ID .)
    MAYORIGUAL      reduce using rule 6 (valor -> ID .)
    MENORIGUAL      reduce using rule 6 (valor -> ID .)
    RPAREN          reduce using rule 6 (valor -> ID .)


state 13

    (4) asignacion -> ID ASIGNACION valor . PCOMA

    PCOMA           shift and go to state 20


state 14

    (7) valor -> NUMBER .

    PCOMA           reduce using rule 7 (valor -> NUMBER .)
    IGUAL           reduce using rule 7 (valor -> NUMBER .)
    MAYOR           reduce using rule 7 (valor -> NUMBER .)
    MENOR           reduce using rule 7 (valor -> NUMBER .)
    MAYORIGUAL      reduce using rule 7 (valor -> NUMBER .)
    MENORIGUAL      reduce using rule 7 (valor -> NUMBER .)
    RPAREN          reduce using rule 7 (valor -> NUMBER .)


state 15

    (8) valor -> CADENA .

    PCOMA           reduce using rule 8 (valor -> CADENA .)
    IGUAL           reduce using rule 8 (valor -> CADENA .)
    MAYOR           reduce using rule 8 (valor -> CADENA .)
    MENOR           reduce using rule 8 (valor -> CADENA .)
    MAYORIGUAL      reduce using rule 8 (valor -> CADENA .)
    MENORIGUAL      reduce using rule 8 (valor -> CADENA .)
    RPAREN          reduce using rule 8 (valor -> CADENA .)


state 16

    (9) valor -> BOOLEAN .

    PCOMA           reduce using rule 9 (valor -> BOOLEAN .)
    IGUAL           reduce using rule 9 (valor -> BOOLEAN .)
    MAYOR           reduce using rule 9 (valor -> BOOLEAN .)
    MENOR           reduce using rule 9 (valor -> BOOLEAN .)
    MAYORIGUAL      reduce using rule 9 (valor -> BOOLEAN .)
    MENORIGUAL      reduce using rule 9 (valor -> BOOLEAN .)
    RPAREN          reduce using rule 9 (valor -> BOOLEAN .)


state 17

    (5) asignacion -> ID REF ID . PCOMA

    PCOMA           shift and go to state 21


state 18

    (16) comparacion -> IF LPAREN expcmp . RPAREN LLLAVE sentencias RLLAVE

    RPAREN          shift and go to state 22


state 19

    (15) expcmp -> valor . opcomparacion valor
    (10) opcomparacion -> . IGUAL
    (11) opcomparacion -> . MAYOR
    (12) opcomparacion -> . MENOR
    (13) opcomparacion -> . MAYORIGUAL
    (14) opcomparacion -> . MENORIGUAL

    IGUAL           shift and go to state 24
    MAYOR           shift and go to state 25
    MENOR           shift and go to state 26
    MAYORIGUAL      shift and go to state 27
    MENORIGUAL      shift and go to state 28

    opcomparacion                  shift and go to state 23

state 20

    (4) asignacion -> ID ASIGNACION valor PCOMA .

    FIN             reduce using rule 4 (asignacion -> ID ASIGNACION valor PCOMA .)
    RLLAVE          reduce using rule 4 (asignacion -> ID ASIGNACION valor PCOMA .)


state 21

    (5) asignacion -> ID REF ID PCOMA .

    FIN             reduce using rule 5 (asignacion -> ID REF ID PCOMA .)
    RLLAVE          reduce using rule 5 (asignacion -> ID REF ID PCOMA .)


state 22

    (16) comparacion -> IF LPAREN expcmp RPAREN . LLLAVE sentencias RLLAVE

    LLLAVE          shift and go to state 29


state 23

    (15) expcmp -> valor opcomparacion . valor
    (6) valor -> . ID
    (7) valor -> . NUMBER
    (8) valor -> . CADENA
    (9) valor -> . BOOLEAN

    ID              shift and go to state 12
    NUMBER          shift and go to state 14
    CADENA          shift and go to state 15
    BOOLEAN         shift and go to state 16

    valor                          shift and go to state 30

state 24

    (10) opcomparacion -> IGUAL .

    ID              reduce using rule 10 (opcomparacion -> IGUAL .)
    NUMBER          reduce using rule 10 (opcomparacion -> IGUAL .)
    CADENA          reduce using rule 10 (opcomparacion -> IGUAL .)
    BOOLEAN         reduce using rule 10 (opcomparacion -> IGUAL .)


state 25

    (11) opcomparacion -> MAYOR .

    ID              reduce using rule 11 (opcomparacion -> MAYOR .)
    NUMBER          reduce using rule 11 (opcomparacion -> MAYOR .)
    CADENA          reduce using rule 11 (opcomparacion -> MAYOR .)
    BOOLEAN         reduce using rule 11 (opcomparacion -> MAYOR .)


state 26

    (12) opcomparacion -> MENOR .

    ID              reduce using rule 12 (opcomparacion -> MENOR .)
    NUMBER          reduce using rule 12 (opcomparacion -> MENOR .)
    CADENA          reduce using rule 12 (opcomparacion -> MENOR .)
    BOOLEAN         reduce using rule 12 (opcomparacion -> MENOR .)


state 27

    (13) opcomparacion -> MAYORIGUAL .

    ID              reduce using rule 13 (opcomparacion -> MAYORIGUAL .)
    NUMBER          reduce using rule 13 (opcomparacion -> MAYORIGUAL .)
    CADENA          reduce using rule 13 (opcomparacion -> MAYORIGUAL .)
    BOOLEAN         reduce using rule 13 (opcomparacion -> MAYORIGUAL .)


state 28

    (14) opcomparacion -> MENORIGUAL .

    ID              reduce using rule 14 (opcomparacion -> MENORIGUAL .)
    NUMBER          reduce using rule 14 (opcomparacion -> MENORIGUAL .)
    CADENA          reduce using rule 14 (opcomparacion -> MENORIGUAL .)
    BOOLEAN         reduce using rule 14 (opcomparacion -> MENORIGUAL .)


state 29

    (16) comparacion -> IF LPAREN expcmp RPAREN LLLAVE . sentencias RLLAVE
    (2) sentencias -> . asignacion
    (3) sentencias -> . comparacion
    (4) asignacion -> . ID ASIGNACION valor PCOMA
    (5) asignacion -> . ID REF ID PCOMA
    (16) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE

    ID              shift and go to state 6
    IF              shift and go to state 7

    sentencias                     shift and go to state 31
    asignacion                     shift and go to state 4
    comparacion                    shift and go to state 5

state 30

    (15) expcmp -> valor opcomparacion valor .

    RPAREN          reduce using rule 15 (expcmp -> valor opcomparacion valor .)


state 31

    (16) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias . RLLAVE

    RLLAVE          shift and go to state 32


state 32

    (16) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE .

    FIN             reduce using rule 16 (comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 16 (comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE .)

