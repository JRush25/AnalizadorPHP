Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    BREAK
    CASE
    CLASS
    COMMENT
    CONCAT_EQUAL
    CONST
    CONTINUE
    DECLARE
    DEFAULT
    DIV_EQUAL
    EXTENDS
    FINAL
    GLOBAL
    INCLUDE
    INSTANCEOF
    IS_NOT_EQUAL
    MOD
    PRINT
    PRIVATE
    PROTECTED
    PUBLIC

Grammar

Rule 0     S' -> programa
Rule 1     programa -> INICIO sentencias FIN
Rule 2     sentencias -> asignacion
Rule 3     sentencias -> comparacion
Rule 4     sentencias -> funcion
Rule 5     sentencias -> impresion
Rule 6     sentencias -> repeticion
Rule 7     sentencias -> expresion
Rule 8     sentencias -> excepcion
Rule 9     asignacion -> ID ASIGNACION valor PCOMA
Rule 10    asignacion -> ID REF ID PCOMA
Rule 11    asignacion -> ID ASIGNACION estdatos PCOMA
Rule 12    asignacion -> ID ASIGNACION expresion PCOMA
Rule 13    valor -> ID
Rule 14    valor -> NUMBER
Rule 15    valor -> CADENA
Rule 16    valor -> BOOLEAN
Rule 17    opcomparacion -> IGUAL
Rule 18    opcomparacion -> MAYOR
Rule 19    opcomparacion -> MENOR
Rule 20    opcomparacion -> MAYORIGUAL
Rule 21    opcomparacion -> MENORIGUAL
Rule 22    expcmp -> valor opcomparacion valor
Rule 23    expcmp -> LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN
Rule 24    expcmp -> LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN oplog expcmp
Rule 25    expcmplog -> expcmp oplog expcmp
Rule 26    expcmplog -> expcmp oplog expcmplog
Rule 27    oplog -> BOOLEAN_OR
Rule 28    oplog -> BOOLEAN_AND
Rule 29    oplog -> AND
Rule 30    oplog -> OR
Rule 31    comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE
Rule 32    comparacion -> IF LPAREN expcmplog RPAREN LLLAVE sentencias RLLAVE
Rule 33    comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
Rule 34    comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
Rule 35    array -> ARRAY LPAREN valor DOUBLE_ARROW valor RPAREN
Rule 36    array -> ARRAY LPAREN valor RPAREN
Rule 37    sort -> SORT LPAREN ID RPAREN PCOMA
Rule 38    estdatos -> array
Rule 39    estdatos -> array_map
Rule 40    estdatos -> heap
Rule 41    expresionmat -> NUMBER operadormat NUMBER
Rule 42    operadormat -> PLUS
Rule 43    operadormat -> DIVIDE
Rule 44    operadormat -> MINUS
Rule 45    operadormat -> TIMES
Rule 46    expresion -> expresionmat
Rule 47    expresion -> expcmplog
Rule 48    funcion -> sort
Rule 49    funcion -> FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RLLAVE
Rule 50    funcion -> FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RETURN valor PCOMA RLLAVE
Rule 51    args -> ID
Rule 52    args -> ID args
Rule 53    excepcion -> TRY LLLAVE sentencias RLLAVE CATCH LPAREN EXCEPTION ID RPAREN LLLAVE ECHO CADENA COMA ID FLECHA GETMESSAGE RLLAVE
Rule 54    impresion -> ECHO ID PCOMA
Rule 55    impresion -> ECHO CADENA PCOMA
Rule 56    repeticionrep -> MAYOR
Rule 57    repeticionrep -> MENOR
Rule 58    repeticionrep -> MAYORIGUAL
Rule 59    repeticionrep -> MENORIGUAL
Rule 60    actualizar -> INCREMENTO
Rule 61    actualizar -> DECREMENTO
Rule 62    repeticion -> FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE
Rule 63    repeticion -> WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE
Rule 64    repeticion -> DO LLLAVE sentencias ID actualizar PCOMA RLLAVE WHILE LPAREN ID opcomparacion valor RPAREN PCOMA
Rule 65    array_map -> ARRAY_MAP LPAREN funcion COMA array RPAREN PCOMA
Rule 66    heap -> HEAP DOUBLE_ARROW INSERT LPAREN LCORCH NUMBER COMA NUMBER RCORCH RPAREN PCOMA
Rule 67    heap -> LPAREN ARRAY LPAREN valor DOUBLE_ARROW NUMBER RPAREN RPAREN PCOMA

Terminals, with rules where they appear

ABSTRACT             : 
AND                  : 29
ARRAY                : 35 36 67
ARRAY_MAP            : 65
ASIGNACION           : 9 11 12 62
BOOLEAN              : 16
BOOLEAN_AND          : 28
BOOLEAN_OR           : 27
BREAK                : 
CADENA               : 15 53 55
CASE                 : 
CATCH                : 53
CLASS                : 
COMA                 : 53 65 66
COMMENT              : 
CONCAT_EQUAL         : 
CONST                : 
CONTINUE             : 
DECLARE              : 
DECREMENTO           : 61
DEFAULT              : 
DIVIDE               : 43
DIV_EQUAL            : 
DO                   : 64
DOUBLE_ARROW         : 35 66 67
ECHO                 : 53 54 55
ELSE                 : 33 34
ELSEIF               : 34
EXCEPTION            : 53
EXTENDS              : 
FIN                  : 1
FINAL                : 
FLECHA               : 53
FOR                  : 62
FUNCTION             : 49 50
GETMESSAGE           : 53
GLOBAL               : 
HEAP                 : 66
ID                   : 9 10 10 11 12 13 37 49 50 51 52 53 53 54 62 62 62 63 63 64 64
IF                   : 31 32 33 34
IGUAL                : 17
INCLUDE              : 
INCREMENTO           : 60
INICIO               : 1
INSERT               : 66
INSTANCEOF           : 
IS_NOT_EQUAL         : 
LCORCH               : 66
LLLAVE               : 31 32 33 33 34 34 34 49 50 53 53 62 63 64
LPAREN               : 23 23 24 24 31 32 33 34 34 35 36 37 49 50 53 62 63 64 65 66 67 67
MAYOR                : 18 56
MAYORIGUAL           : 20 58
MENOR                : 19 57
MENORIGUAL           : 21 59
MINUS                : 44
MOD                  : 
NFUNCION             : 49 50
NUMBER               : 14 41 41 62 62 66 66 67
OR                   : 30
PCOMA                : 9 10 11 12 37 50 54 55 62 62 63 64 64 65 66 67
PLUS                 : 42
PRINT                : 
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
RCORCH               : 66
REF                  : 10
RETURN               : 50
RLLAVE               : 31 32 33 33 34 34 34 49 50 53 53 62 63 64
RPAREN               : 23 23 24 24 31 32 33 34 34 35 36 37 49 50 53 62 63 64 65 66 67 67
SORT                 : 37
TIMES                : 45
TRY                  : 53
WHILE                : 63 64
error                : 

Nonterminals, with rules where they appear

actualizar           : 62 63 64
args                 : 49 50 52
array                : 38 65
array_map            : 39
asignacion           : 2
comparacion          : 3
estdatos             : 11
excepcion            : 8
expcmp               : 24 25 25 26 31 33 34 34
expcmplog            : 26 32 47
expresion            : 7 12
expresionmat         : 46
funcion              : 4 65
heap                 : 40
impresion            : 5
opcomparacion        : 22 23 23 24 24 63 64
operadormat          : 41
oplog                : 23 24 24 25 26
programa             : 0
repeticion           : 6
repeticionrep        : 62
sentencias           : 1 31 32 33 33 34 34 34 49 50 53 62 63 64
sort                 : 48
valor                : 9 22 22 23 23 23 23 24 24 24 24 35 35 36 50 63 64 67

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . INICIO sentencias FIN

    INICIO          shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> INICIO . sentencias FIN
    (2) sentencias -> . asignacion
    (3) sentencias -> . comparacion
    (4) sentencias -> . funcion
    (5) sentencias -> . impresion
    (6) sentencias -> . repeticion
    (7) sentencias -> . expresion
    (8) sentencias -> . excepcion
    (9) asignacion -> . ID ASIGNACION valor PCOMA
    (10) asignacion -> . ID REF ID PCOMA
    (11) asignacion -> . ID ASIGNACION estdatos PCOMA
    (12) asignacion -> . ID ASIGNACION expresion PCOMA
    (31) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE
    (32) comparacion -> . IF LPAREN expcmplog RPAREN LLLAVE sentencias RLLAVE
    (33) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (34) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (48) funcion -> . sort
    (49) funcion -> . FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RLLAVE
    (50) funcion -> . FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RETURN valor PCOMA RLLAVE
    (54) impresion -> . ECHO ID PCOMA
    (55) impresion -> . ECHO CADENA PCOMA
    (62) repeticion -> . FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE
    (63) repeticion -> . WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE
    (64) repeticion -> . DO LLLAVE sentencias ID actualizar PCOMA RLLAVE WHILE LPAREN ID opcomparacion valor RPAREN PCOMA
    (46) expresion -> . expresionmat
    (47) expresion -> . expcmplog
    (53) excepcion -> . TRY LLLAVE sentencias RLLAVE CATCH LPAREN EXCEPTION ID RPAREN LLLAVE ECHO CADENA COMA ID FLECHA GETMESSAGE RLLAVE
    (37) sort -> . SORT LPAREN ID RPAREN PCOMA
    (41) expresionmat -> . NUMBER operadormat NUMBER
    (25) expcmplog -> . expcmp oplog expcmp
    (26) expcmplog -> . expcmp oplog expcmplog
    (22) expcmp -> . valor opcomparacion valor
    (23) expcmp -> . LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN
    (24) expcmp -> . LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN oplog expcmp
    (13) valor -> . ID
    (14) valor -> . NUMBER
    (15) valor -> . CADENA
    (16) valor -> . BOOLEAN

    ID              shift and go to state 11
    IF              shift and go to state 13
    FUNCTION        shift and go to state 18
    ECHO            shift and go to state 19
    FOR             shift and go to state 21
    WHILE           shift and go to state 23
    DO              shift and go to state 24
    TRY             shift and go to state 26
    SORT            shift and go to state 27
    NUMBER          shift and go to state 22
    LPAREN          shift and go to state 14
    CADENA          shift and go to state 20
    BOOLEAN         shift and go to state 28

    sentencias                     shift and go to state 3
    asignacion                     shift and go to state 4
    comparacion                    shift and go to state 5
    funcion                        shift and go to state 6
    impresion                      shift and go to state 7
    repeticion                     shift and go to state 8
    expresion                      shift and go to state 9
    excepcion                      shift and go to state 10
    valor                          shift and go to state 12
    expcmp                         shift and go to state 15
    expcmplog                      shift and go to state 16
    sort                           shift and go to state 17
    expresionmat                   shift and go to state 25

state 3

    (1) programa -> INICIO sentencias . FIN

    FIN             shift and go to state 29


state 4

    (2) sentencias -> asignacion .

    FIN             reduce using rule 2 (sentencias -> asignacion .)
    ID              reduce using rule 2 (sentencias -> asignacion .)
    RLLAVE          reduce using rule 2 (sentencias -> asignacion .)
    RETURN          reduce using rule 2 (sentencias -> asignacion .)


state 5

    (3) sentencias -> comparacion .

    FIN             reduce using rule 3 (sentencias -> comparacion .)
    ID              reduce using rule 3 (sentencias -> comparacion .)
    RLLAVE          reduce using rule 3 (sentencias -> comparacion .)
    RETURN          reduce using rule 3 (sentencias -> comparacion .)


state 6

    (4) sentencias -> funcion .

    FIN             reduce using rule 4 (sentencias -> funcion .)
    ID              reduce using rule 4 (sentencias -> funcion .)
    RLLAVE          reduce using rule 4 (sentencias -> funcion .)
    RETURN          reduce using rule 4 (sentencias -> funcion .)


state 7

    (5) sentencias -> impresion .

    FIN             reduce using rule 5 (sentencias -> impresion .)
    ID              reduce using rule 5 (sentencias -> impresion .)
    RLLAVE          reduce using rule 5 (sentencias -> impresion .)
    RETURN          reduce using rule 5 (sentencias -> impresion .)


state 8

    (6) sentencias -> repeticion .

    FIN             reduce using rule 6 (sentencias -> repeticion .)
    ID              reduce using rule 6 (sentencias -> repeticion .)
    RLLAVE          reduce using rule 6 (sentencias -> repeticion .)
    RETURN          reduce using rule 6 (sentencias -> repeticion .)


state 9

    (7) sentencias -> expresion .

    FIN             reduce using rule 7 (sentencias -> expresion .)
    ID              reduce using rule 7 (sentencias -> expresion .)
    RLLAVE          reduce using rule 7 (sentencias -> expresion .)
    RETURN          reduce using rule 7 (sentencias -> expresion .)


state 10

    (8) sentencias -> excepcion .

    FIN             reduce using rule 8 (sentencias -> excepcion .)
    ID              reduce using rule 8 (sentencias -> excepcion .)
    RLLAVE          reduce using rule 8 (sentencias -> excepcion .)
    RETURN          reduce using rule 8 (sentencias -> excepcion .)


state 11

    (9) asignacion -> ID . ASIGNACION valor PCOMA
    (10) asignacion -> ID . REF ID PCOMA
    (11) asignacion -> ID . ASIGNACION estdatos PCOMA
    (12) asignacion -> ID . ASIGNACION expresion PCOMA
    (13) valor -> ID .

    ASIGNACION      shift and go to state 30
    REF             shift and go to state 31
    IGUAL           reduce using rule 13 (valor -> ID .)
    MAYOR           reduce using rule 13 (valor -> ID .)
    MENOR           reduce using rule 13 (valor -> ID .)
    MAYORIGUAL      reduce using rule 13 (valor -> ID .)
    MENORIGUAL      reduce using rule 13 (valor -> ID .)


state 12

    (22) expcmp -> valor . opcomparacion valor
    (17) opcomparacion -> . IGUAL
    (18) opcomparacion -> . MAYOR
    (19) opcomparacion -> . MENOR
    (20) opcomparacion -> . MAYORIGUAL
    (21) opcomparacion -> . MENORIGUAL

    IGUAL           shift and go to state 33
    MAYOR           shift and go to state 34
    MENOR           shift and go to state 35
    MAYORIGUAL      shift and go to state 36
    MENORIGUAL      shift and go to state 37

    opcomparacion                  shift and go to state 32

state 13

    (31) comparacion -> IF . LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE
    (32) comparacion -> IF . LPAREN expcmplog RPAREN LLLAVE sentencias RLLAVE
    (33) comparacion -> IF . LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (34) comparacion -> IF . LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE

    LPAREN          shift and go to state 38


state 14

    (23) expcmp -> LPAREN . valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN
    (24) expcmp -> LPAREN . valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN oplog expcmp
    (13) valor -> . ID
    (14) valor -> . NUMBER
    (15) valor -> . CADENA
    (16) valor -> . BOOLEAN

    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    CADENA          shift and go to state 20
    BOOLEAN         shift and go to state 28

    valor                          shift and go to state 39

state 15

    (25) expcmplog -> expcmp . oplog expcmp
    (26) expcmplog -> expcmp . oplog expcmplog
    (27) oplog -> . BOOLEAN_OR
    (28) oplog -> . BOOLEAN_AND
    (29) oplog -> . AND
    (30) oplog -> . OR

    BOOLEAN_OR      shift and go to state 43
    BOOLEAN_AND     shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46

    oplog                          shift and go to state 42

state 16

    (47) expresion -> expcmplog .

    FIN             reduce using rule 47 (expresion -> expcmplog .)
    PCOMA           reduce using rule 47 (expresion -> expcmplog .)
    ID              reduce using rule 47 (expresion -> expcmplog .)
    RLLAVE          reduce using rule 47 (expresion -> expcmplog .)
    RETURN          reduce using rule 47 (expresion -> expcmplog .)


state 17

    (48) funcion -> sort .

    FIN             reduce using rule 48 (funcion -> sort .)
    ID              reduce using rule 48 (funcion -> sort .)
    RLLAVE          reduce using rule 48 (funcion -> sort .)
    COMA            reduce using rule 48 (funcion -> sort .)
    RETURN          reduce using rule 48 (funcion -> sort .)


state 18

    (49) funcion -> FUNCTION . NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RLLAVE
    (50) funcion -> FUNCTION . NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RETURN valor PCOMA RLLAVE

    NFUNCION        shift and go to state 47


state 19

    (54) impresion -> ECHO . ID PCOMA
    (55) impresion -> ECHO . CADENA PCOMA

    ID              shift and go to state 48
    CADENA          shift and go to state 49


state 20

    (15) valor -> CADENA .

    IGUAL           reduce using rule 15 (valor -> CADENA .)
    MAYOR           reduce using rule 15 (valor -> CADENA .)
    MENOR           reduce using rule 15 (valor -> CADENA .)
    MAYORIGUAL      reduce using rule 15 (valor -> CADENA .)
    MENORIGUAL      reduce using rule 15 (valor -> CADENA .)
    PCOMA           reduce using rule 15 (valor -> CADENA .)
    BOOLEAN_OR      reduce using rule 15 (valor -> CADENA .)
    BOOLEAN_AND     reduce using rule 15 (valor -> CADENA .)
    AND             reduce using rule 15 (valor -> CADENA .)
    OR              reduce using rule 15 (valor -> CADENA .)
    RPAREN          reduce using rule 15 (valor -> CADENA .)
    FIN             reduce using rule 15 (valor -> CADENA .)
    ID              reduce using rule 15 (valor -> CADENA .)
    RLLAVE          reduce using rule 15 (valor -> CADENA .)
    RETURN          reduce using rule 15 (valor -> CADENA .)
    DOUBLE_ARROW    reduce using rule 15 (valor -> CADENA .)


state 21

    (62) repeticion -> FOR . LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE

    LPAREN          shift and go to state 50


state 22

    (41) expresionmat -> NUMBER . operadormat NUMBER
    (14) valor -> NUMBER .
    (42) operadormat -> . PLUS
    (43) operadormat -> . DIVIDE
    (44) operadormat -> . MINUS
    (45) operadormat -> . TIMES

    IGUAL           reduce using rule 14 (valor -> NUMBER .)
    MAYOR           reduce using rule 14 (valor -> NUMBER .)
    MENOR           reduce using rule 14 (valor -> NUMBER .)
    MAYORIGUAL      reduce using rule 14 (valor -> NUMBER .)
    MENORIGUAL      reduce using rule 14 (valor -> NUMBER .)
    PLUS            shift and go to state 52
    DIVIDE          shift and go to state 53
    MINUS           shift and go to state 54
    TIMES           shift and go to state 55

    operadormat                    shift and go to state 51

state 23

    (63) repeticion -> WHILE . LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE

    LPAREN          shift and go to state 56


state 24

    (64) repeticion -> DO . LLLAVE sentencias ID actualizar PCOMA RLLAVE WHILE LPAREN ID opcomparacion valor RPAREN PCOMA

    LLLAVE          shift and go to state 57


state 25

    (46) expresion -> expresionmat .

    FIN             reduce using rule 46 (expresion -> expresionmat .)
    PCOMA           reduce using rule 46 (expresion -> expresionmat .)
    ID              reduce using rule 46 (expresion -> expresionmat .)
    RLLAVE          reduce using rule 46 (expresion -> expresionmat .)
    RETURN          reduce using rule 46 (expresion -> expresionmat .)


state 26

    (53) excepcion -> TRY . LLLAVE sentencias RLLAVE CATCH LPAREN EXCEPTION ID RPAREN LLLAVE ECHO CADENA COMA ID FLECHA GETMESSAGE RLLAVE

    LLLAVE          shift and go to state 58


state 27

    (37) sort -> SORT . LPAREN ID RPAREN PCOMA

    LPAREN          shift and go to state 59


state 28

    (16) valor -> BOOLEAN .

    IGUAL           reduce using rule 16 (valor -> BOOLEAN .)
    MAYOR           reduce using rule 16 (valor -> BOOLEAN .)
    MENOR           reduce using rule 16 (valor -> BOOLEAN .)
    MAYORIGUAL      reduce using rule 16 (valor -> BOOLEAN .)
    MENORIGUAL      reduce using rule 16 (valor -> BOOLEAN .)
    PCOMA           reduce using rule 16 (valor -> BOOLEAN .)
    BOOLEAN_OR      reduce using rule 16 (valor -> BOOLEAN .)
    BOOLEAN_AND     reduce using rule 16 (valor -> BOOLEAN .)
    AND             reduce using rule 16 (valor -> BOOLEAN .)
    OR              reduce using rule 16 (valor -> BOOLEAN .)
    RPAREN          reduce using rule 16 (valor -> BOOLEAN .)
    FIN             reduce using rule 16 (valor -> BOOLEAN .)
    ID              reduce using rule 16 (valor -> BOOLEAN .)
    RLLAVE          reduce using rule 16 (valor -> BOOLEAN .)
    RETURN          reduce using rule 16 (valor -> BOOLEAN .)
    DOUBLE_ARROW    reduce using rule 16 (valor -> BOOLEAN .)


state 29

    (1) programa -> INICIO sentencias FIN .

    $end            reduce using rule 1 (programa -> INICIO sentencias FIN .)


state 30

    (9) asignacion -> ID ASIGNACION . valor PCOMA
    (11) asignacion -> ID ASIGNACION . estdatos PCOMA
    (12) asignacion -> ID ASIGNACION . expresion PCOMA
    (13) valor -> . ID
    (14) valor -> . NUMBER
    (15) valor -> . CADENA
    (16) valor -> . BOOLEAN
    (38) estdatos -> . array
    (39) estdatos -> . array_map
    (40) estdatos -> . heap
    (46) expresion -> . expresionmat
    (47) expresion -> . expcmplog
    (35) array -> . ARRAY LPAREN valor DOUBLE_ARROW valor RPAREN
    (36) array -> . ARRAY LPAREN valor RPAREN
    (65) array_map -> . ARRAY_MAP LPAREN funcion COMA array RPAREN PCOMA
    (66) heap -> . HEAP DOUBLE_ARROW INSERT LPAREN LCORCH NUMBER COMA NUMBER RCORCH RPAREN PCOMA
    (67) heap -> . LPAREN ARRAY LPAREN valor DOUBLE_ARROW NUMBER RPAREN RPAREN PCOMA
    (41) expresionmat -> . NUMBER operadormat NUMBER
    (25) expcmplog -> . expcmp oplog expcmp
    (26) expcmplog -> . expcmp oplog expcmplog
    (22) expcmp -> . valor opcomparacion valor
    (23) expcmp -> . LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN
    (24) expcmp -> . LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN oplog expcmp

    ID              shift and go to state 40
    NUMBER          shift and go to state 63
    CADENA          shift and go to state 20
    BOOLEAN         shift and go to state 28
    ARRAY           shift and go to state 67
    ARRAY_MAP       shift and go to state 69
    HEAP            shift and go to state 70
    LPAREN          shift and go to state 68

    valor                          shift and go to state 60
    estdatos                       shift and go to state 61
    expresion                      shift and go to state 62
    array                          shift and go to state 64
    array_map                      shift and go to state 65
    heap                           shift and go to state 66
    expresionmat                   shift and go to state 25
    expcmplog                      shift and go to state 16
    expcmp                         shift and go to state 15

state 31

    (10) asignacion -> ID REF . ID PCOMA

    ID              shift and go to state 71


state 32

    (22) expcmp -> valor opcomparacion . valor
    (13) valor -> . ID
    (14) valor -> . NUMBER
    (15) valor -> . CADENA
    (16) valor -> . BOOLEAN

    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    CADENA          shift and go to state 20
    BOOLEAN         shift and go to state 28

    valor                          shift and go to state 72

state 33

    (17) opcomparacion -> IGUAL .

    ID              reduce using rule 17 (opcomparacion -> IGUAL .)
    NUMBER          reduce using rule 17 (opcomparacion -> IGUAL .)
    CADENA          reduce using rule 17 (opcomparacion -> IGUAL .)
    BOOLEAN         reduce using rule 17 (opcomparacion -> IGUAL .)


state 34

    (18) opcomparacion -> MAYOR .

    ID              reduce using rule 18 (opcomparacion -> MAYOR .)
    NUMBER          reduce using rule 18 (opcomparacion -> MAYOR .)
    CADENA          reduce using rule 18 (opcomparacion -> MAYOR .)
    BOOLEAN         reduce using rule 18 (opcomparacion -> MAYOR .)


state 35

    (19) opcomparacion -> MENOR .

    ID              reduce using rule 19 (opcomparacion -> MENOR .)
    NUMBER          reduce using rule 19 (opcomparacion -> MENOR .)
    CADENA          reduce using rule 19 (opcomparacion -> MENOR .)
    BOOLEAN         reduce using rule 19 (opcomparacion -> MENOR .)


state 36

    (20) opcomparacion -> MAYORIGUAL .

    ID              reduce using rule 20 (opcomparacion -> MAYORIGUAL .)
    NUMBER          reduce using rule 20 (opcomparacion -> MAYORIGUAL .)
    CADENA          reduce using rule 20 (opcomparacion -> MAYORIGUAL .)
    BOOLEAN         reduce using rule 20 (opcomparacion -> MAYORIGUAL .)


state 37

    (21) opcomparacion -> MENORIGUAL .

    ID              reduce using rule 21 (opcomparacion -> MENORIGUAL .)
    NUMBER          reduce using rule 21 (opcomparacion -> MENORIGUAL .)
    CADENA          reduce using rule 21 (opcomparacion -> MENORIGUAL .)
    BOOLEAN         reduce using rule 21 (opcomparacion -> MENORIGUAL .)


state 38

    (31) comparacion -> IF LPAREN . expcmp RPAREN LLLAVE sentencias RLLAVE
    (32) comparacion -> IF LPAREN . expcmplog RPAREN LLLAVE sentencias RLLAVE
    (33) comparacion -> IF LPAREN . expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (34) comparacion -> IF LPAREN . expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (22) expcmp -> . valor opcomparacion valor
    (23) expcmp -> . LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN
    (24) expcmp -> . LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN oplog expcmp
    (25) expcmplog -> . expcmp oplog expcmp
    (26) expcmplog -> . expcmp oplog expcmplog
    (13) valor -> . ID
    (14) valor -> . NUMBER
    (15) valor -> . CADENA
    (16) valor -> . BOOLEAN

    LPAREN          shift and go to state 14
    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    CADENA          shift and go to state 20
    BOOLEAN         shift and go to state 28

    expcmp                         shift and go to state 73
    expcmplog                      shift and go to state 74
    valor                          shift and go to state 12

state 39

    (23) expcmp -> LPAREN valor . opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN
    (24) expcmp -> LPAREN valor . opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN oplog expcmp
    (17) opcomparacion -> . IGUAL
    (18) opcomparacion -> . MAYOR
    (19) opcomparacion -> . MENOR
    (20) opcomparacion -> . MAYORIGUAL
    (21) opcomparacion -> . MENORIGUAL

    IGUAL           shift and go to state 33
    MAYOR           shift and go to state 34
    MENOR           shift and go to state 35
    MAYORIGUAL      shift and go to state 36
    MENORIGUAL      shift and go to state 37

    opcomparacion                  shift and go to state 75

state 40

    (13) valor -> ID .

    IGUAL           reduce using rule 13 (valor -> ID .)
    MAYOR           reduce using rule 13 (valor -> ID .)
    MENOR           reduce using rule 13 (valor -> ID .)
    MAYORIGUAL      reduce using rule 13 (valor -> ID .)
    MENORIGUAL      reduce using rule 13 (valor -> ID .)
    PCOMA           reduce using rule 13 (valor -> ID .)
    BOOLEAN_OR      reduce using rule 13 (valor -> ID .)
    BOOLEAN_AND     reduce using rule 13 (valor -> ID .)
    AND             reduce using rule 13 (valor -> ID .)
    OR              reduce using rule 13 (valor -> ID .)
    RPAREN          reduce using rule 13 (valor -> ID .)
    FIN             reduce using rule 13 (valor -> ID .)
    ID              reduce using rule 13 (valor -> ID .)
    RLLAVE          reduce using rule 13 (valor -> ID .)
    RETURN          reduce using rule 13 (valor -> ID .)
    DOUBLE_ARROW    reduce using rule 13 (valor -> ID .)


state 41

    (14) valor -> NUMBER .

    IGUAL           reduce using rule 14 (valor -> NUMBER .)
    MAYOR           reduce using rule 14 (valor -> NUMBER .)
    MENOR           reduce using rule 14 (valor -> NUMBER .)
    MAYORIGUAL      reduce using rule 14 (valor -> NUMBER .)
    MENORIGUAL      reduce using rule 14 (valor -> NUMBER .)
    BOOLEAN_OR      reduce using rule 14 (valor -> NUMBER .)
    BOOLEAN_AND     reduce using rule 14 (valor -> NUMBER .)
    AND             reduce using rule 14 (valor -> NUMBER .)
    OR              reduce using rule 14 (valor -> NUMBER .)
    RPAREN          reduce using rule 14 (valor -> NUMBER .)
    FIN             reduce using rule 14 (valor -> NUMBER .)
    PCOMA           reduce using rule 14 (valor -> NUMBER .)
    ID              reduce using rule 14 (valor -> NUMBER .)
    RLLAVE          reduce using rule 14 (valor -> NUMBER .)
    RETURN          reduce using rule 14 (valor -> NUMBER .)
    DOUBLE_ARROW    reduce using rule 14 (valor -> NUMBER .)


state 42

    (25) expcmplog -> expcmp oplog . expcmp
    (26) expcmplog -> expcmp oplog . expcmplog
    (22) expcmp -> . valor opcomparacion valor
    (23) expcmp -> . LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN
    (24) expcmp -> . LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN oplog expcmp
    (25) expcmplog -> . expcmp oplog expcmp
    (26) expcmplog -> . expcmp oplog expcmplog
    (13) valor -> . ID
    (14) valor -> . NUMBER
    (15) valor -> . CADENA
    (16) valor -> . BOOLEAN

    LPAREN          shift and go to state 14
    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    CADENA          shift and go to state 20
    BOOLEAN         shift and go to state 28

    expcmp                         shift and go to state 76
    expcmplog                      shift and go to state 77
    valor                          shift and go to state 12

state 43

    (27) oplog -> BOOLEAN_OR .

    LPAREN          reduce using rule 27 (oplog -> BOOLEAN_OR .)
    ID              reduce using rule 27 (oplog -> BOOLEAN_OR .)
    NUMBER          reduce using rule 27 (oplog -> BOOLEAN_OR .)
    CADENA          reduce using rule 27 (oplog -> BOOLEAN_OR .)
    BOOLEAN         reduce using rule 27 (oplog -> BOOLEAN_OR .)


state 44

    (28) oplog -> BOOLEAN_AND .

    LPAREN          reduce using rule 28 (oplog -> BOOLEAN_AND .)
    ID              reduce using rule 28 (oplog -> BOOLEAN_AND .)
    NUMBER          reduce using rule 28 (oplog -> BOOLEAN_AND .)
    CADENA          reduce using rule 28 (oplog -> BOOLEAN_AND .)
    BOOLEAN         reduce using rule 28 (oplog -> BOOLEAN_AND .)


state 45

    (29) oplog -> AND .

    LPAREN          reduce using rule 29 (oplog -> AND .)
    ID              reduce using rule 29 (oplog -> AND .)
    NUMBER          reduce using rule 29 (oplog -> AND .)
    CADENA          reduce using rule 29 (oplog -> AND .)
    BOOLEAN         reduce using rule 29 (oplog -> AND .)


state 46

    (30) oplog -> OR .

    LPAREN          reduce using rule 30 (oplog -> OR .)
    ID              reduce using rule 30 (oplog -> OR .)
    NUMBER          reduce using rule 30 (oplog -> OR .)
    CADENA          reduce using rule 30 (oplog -> OR .)
    BOOLEAN         reduce using rule 30 (oplog -> OR .)


state 47

    (49) funcion -> FUNCTION NFUNCION . ID LPAREN args RPAREN LLLAVE sentencias RLLAVE
    (50) funcion -> FUNCTION NFUNCION . ID LPAREN args RPAREN LLLAVE sentencias RETURN valor PCOMA RLLAVE

    ID              shift and go to state 78


state 48

    (54) impresion -> ECHO ID . PCOMA

    PCOMA           shift and go to state 79


state 49

    (55) impresion -> ECHO CADENA . PCOMA

    PCOMA           shift and go to state 80


state 50

    (62) repeticion -> FOR LPAREN . ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE

    ID              shift and go to state 81


state 51

    (41) expresionmat -> NUMBER operadormat . NUMBER

    NUMBER          shift and go to state 82


state 52

    (42) operadormat -> PLUS .

    NUMBER          reduce using rule 42 (operadormat -> PLUS .)


state 53

    (43) operadormat -> DIVIDE .

    NUMBER          reduce using rule 43 (operadormat -> DIVIDE .)


state 54

    (44) operadormat -> MINUS .

    NUMBER          reduce using rule 44 (operadormat -> MINUS .)


state 55

    (45) operadormat -> TIMES .

    NUMBER          reduce using rule 45 (operadormat -> TIMES .)


state 56

    (63) repeticion -> WHILE LPAREN . ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE

    ID              shift and go to state 83


state 57

    (64) repeticion -> DO LLLAVE . sentencias ID actualizar PCOMA RLLAVE WHILE LPAREN ID opcomparacion valor RPAREN PCOMA
    (2) sentencias -> . asignacion
    (3) sentencias -> . comparacion
    (4) sentencias -> . funcion
    (5) sentencias -> . impresion
    (6) sentencias -> . repeticion
    (7) sentencias -> . expresion
    (8) sentencias -> . excepcion
    (9) asignacion -> . ID ASIGNACION valor PCOMA
    (10) asignacion -> . ID REF ID PCOMA
    (11) asignacion -> . ID ASIGNACION estdatos PCOMA
    (12) asignacion -> . ID ASIGNACION expresion PCOMA
    (31) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE
    (32) comparacion -> . IF LPAREN expcmplog RPAREN LLLAVE sentencias RLLAVE
    (33) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (34) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (48) funcion -> . sort
    (49) funcion -> . FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RLLAVE
    (50) funcion -> . FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RETURN valor PCOMA RLLAVE
    (54) impresion -> . ECHO ID PCOMA
    (55) impresion -> . ECHO CADENA PCOMA
    (62) repeticion -> . FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE
    (63) repeticion -> . WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE
    (64) repeticion -> . DO LLLAVE sentencias ID actualizar PCOMA RLLAVE WHILE LPAREN ID opcomparacion valor RPAREN PCOMA
    (46) expresion -> . expresionmat
    (47) expresion -> . expcmplog
    (53) excepcion -> . TRY LLLAVE sentencias RLLAVE CATCH LPAREN EXCEPTION ID RPAREN LLLAVE ECHO CADENA COMA ID FLECHA GETMESSAGE RLLAVE
    (37) sort -> . SORT LPAREN ID RPAREN PCOMA
    (41) expresionmat -> . NUMBER operadormat NUMBER
    (25) expcmplog -> . expcmp oplog expcmp
    (26) expcmplog -> . expcmp oplog expcmplog
    (22) expcmp -> . valor opcomparacion valor
    (23) expcmp -> . LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN
    (24) expcmp -> . LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN oplog expcmp
    (13) valor -> . ID
    (14) valor -> . NUMBER
    (15) valor -> . CADENA
    (16) valor -> . BOOLEAN

    ID              shift and go to state 11
    IF              shift and go to state 13
    FUNCTION        shift and go to state 18
    ECHO            shift and go to state 19
    FOR             shift and go to state 21
    WHILE           shift and go to state 23
    DO              shift and go to state 24
    TRY             shift and go to state 26
    SORT            shift and go to state 27
    NUMBER          shift and go to state 22
    LPAREN          shift and go to state 14
    CADENA          shift and go to state 20
    BOOLEAN         shift and go to state 28

    sentencias                     shift and go to state 84
    valor                          shift and go to state 12
    asignacion                     shift and go to state 4
    comparacion                    shift and go to state 5
    funcion                        shift and go to state 6
    impresion                      shift and go to state 7
    repeticion                     shift and go to state 8
    expresion                      shift and go to state 9
    excepcion                      shift and go to state 10
    expcmp                         shift and go to state 15
    expcmplog                      shift and go to state 16
    sort                           shift and go to state 17
    expresionmat                   shift and go to state 25

state 58

    (53) excepcion -> TRY LLLAVE . sentencias RLLAVE CATCH LPAREN EXCEPTION ID RPAREN LLLAVE ECHO CADENA COMA ID FLECHA GETMESSAGE RLLAVE
    (2) sentencias -> . asignacion
    (3) sentencias -> . comparacion
    (4) sentencias -> . funcion
    (5) sentencias -> . impresion
    (6) sentencias -> . repeticion
    (7) sentencias -> . expresion
    (8) sentencias -> . excepcion
    (9) asignacion -> . ID ASIGNACION valor PCOMA
    (10) asignacion -> . ID REF ID PCOMA
    (11) asignacion -> . ID ASIGNACION estdatos PCOMA
    (12) asignacion -> . ID ASIGNACION expresion PCOMA
    (31) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE
    (32) comparacion -> . IF LPAREN expcmplog RPAREN LLLAVE sentencias RLLAVE
    (33) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (34) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (48) funcion -> . sort
    (49) funcion -> . FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RLLAVE
    (50) funcion -> . FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RETURN valor PCOMA RLLAVE
    (54) impresion -> . ECHO ID PCOMA
    (55) impresion -> . ECHO CADENA PCOMA
    (62) repeticion -> . FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE
    (63) repeticion -> . WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE
    (64) repeticion -> . DO LLLAVE sentencias ID actualizar PCOMA RLLAVE WHILE LPAREN ID opcomparacion valor RPAREN PCOMA
    (46) expresion -> . expresionmat
    (47) expresion -> . expcmplog
    (53) excepcion -> . TRY LLLAVE sentencias RLLAVE CATCH LPAREN EXCEPTION ID RPAREN LLLAVE ECHO CADENA COMA ID FLECHA GETMESSAGE RLLAVE
    (37) sort -> . SORT LPAREN ID RPAREN PCOMA
    (41) expresionmat -> . NUMBER operadormat NUMBER
    (25) expcmplog -> . expcmp oplog expcmp
    (26) expcmplog -> . expcmp oplog expcmplog
    (22) expcmp -> . valor opcomparacion valor
    (23) expcmp -> . LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN
    (24) expcmp -> . LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN oplog expcmp
    (13) valor -> . ID
    (14) valor -> . NUMBER
    (15) valor -> . CADENA
    (16) valor -> . BOOLEAN

    ID              shift and go to state 11
    IF              shift and go to state 13
    FUNCTION        shift and go to state 18
    ECHO            shift and go to state 19
    FOR             shift and go to state 21
    WHILE           shift and go to state 23
    DO              shift and go to state 24
    TRY             shift and go to state 26
    SORT            shift and go to state 27
    NUMBER          shift and go to state 22
    LPAREN          shift and go to state 14
    CADENA          shift and go to state 20
    BOOLEAN         shift and go to state 28

    sentencias                     shift and go to state 85
    asignacion                     shift and go to state 4
    comparacion                    shift and go to state 5
    funcion                        shift and go to state 6
    impresion                      shift and go to state 7
    repeticion                     shift and go to state 8
    expresion                      shift and go to state 9
    excepcion                      shift and go to state 10
    valor                          shift and go to state 12
    expcmp                         shift and go to state 15
    expcmplog                      shift and go to state 16
    sort                           shift and go to state 17
    expresionmat                   shift and go to state 25

state 59

    (37) sort -> SORT LPAREN . ID RPAREN PCOMA

    ID              shift and go to state 86


state 60

    (9) asignacion -> ID ASIGNACION valor . PCOMA
    (22) expcmp -> valor . opcomparacion valor
    (17) opcomparacion -> . IGUAL
    (18) opcomparacion -> . MAYOR
    (19) opcomparacion -> . MENOR
    (20) opcomparacion -> . MAYORIGUAL
    (21) opcomparacion -> . MENORIGUAL

    PCOMA           shift and go to state 87
    IGUAL           shift and go to state 33
    MAYOR           shift and go to state 34
    MENOR           shift and go to state 35
    MAYORIGUAL      shift and go to state 36
    MENORIGUAL      shift and go to state 37

    opcomparacion                  shift and go to state 32

state 61

    (11) asignacion -> ID ASIGNACION estdatos . PCOMA

    PCOMA           shift and go to state 88


state 62

    (12) asignacion -> ID ASIGNACION expresion . PCOMA

    PCOMA           shift and go to state 89


state 63

    (14) valor -> NUMBER .
    (41) expresionmat -> NUMBER . operadormat NUMBER
    (42) operadormat -> . PLUS
    (43) operadormat -> . DIVIDE
    (44) operadormat -> . MINUS
    (45) operadormat -> . TIMES

    PCOMA           reduce using rule 14 (valor -> NUMBER .)
    IGUAL           reduce using rule 14 (valor -> NUMBER .)
    MAYOR           reduce using rule 14 (valor -> NUMBER .)
    MENOR           reduce using rule 14 (valor -> NUMBER .)
    MAYORIGUAL      reduce using rule 14 (valor -> NUMBER .)
    MENORIGUAL      reduce using rule 14 (valor -> NUMBER .)
    PLUS            shift and go to state 52
    DIVIDE          shift and go to state 53
    MINUS           shift and go to state 54
    TIMES           shift and go to state 55

    operadormat                    shift and go to state 51

state 64

    (38) estdatos -> array .

    PCOMA           reduce using rule 38 (estdatos -> array .)


state 65

    (39) estdatos -> array_map .

    PCOMA           reduce using rule 39 (estdatos -> array_map .)


state 66

    (40) estdatos -> heap .

    PCOMA           reduce using rule 40 (estdatos -> heap .)


state 67

    (35) array -> ARRAY . LPAREN valor DOUBLE_ARROW valor RPAREN
    (36) array -> ARRAY . LPAREN valor RPAREN

    LPAREN          shift and go to state 90


state 68

    (67) heap -> LPAREN . ARRAY LPAREN valor DOUBLE_ARROW NUMBER RPAREN RPAREN PCOMA
    (23) expcmp -> LPAREN . valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN
    (24) expcmp -> LPAREN . valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN oplog expcmp
    (13) valor -> . ID
    (14) valor -> . NUMBER
    (15) valor -> . CADENA
    (16) valor -> . BOOLEAN

    ARRAY           shift and go to state 91
    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    CADENA          shift and go to state 20
    BOOLEAN         shift and go to state 28

    valor                          shift and go to state 39

state 69

    (65) array_map -> ARRAY_MAP . LPAREN funcion COMA array RPAREN PCOMA

    LPAREN          shift and go to state 92


state 70

    (66) heap -> HEAP . DOUBLE_ARROW INSERT LPAREN LCORCH NUMBER COMA NUMBER RCORCH RPAREN PCOMA

    DOUBLE_ARROW    shift and go to state 93


state 71

    (10) asignacion -> ID REF ID . PCOMA

    PCOMA           shift and go to state 94


state 72

    (22) expcmp -> valor opcomparacion valor .

    BOOLEAN_OR      reduce using rule 22 (expcmp -> valor opcomparacion valor .)
    BOOLEAN_AND     reduce using rule 22 (expcmp -> valor opcomparacion valor .)
    AND             reduce using rule 22 (expcmp -> valor opcomparacion valor .)
    OR              reduce using rule 22 (expcmp -> valor opcomparacion valor .)
    RPAREN          reduce using rule 22 (expcmp -> valor opcomparacion valor .)
    FIN             reduce using rule 22 (expcmp -> valor opcomparacion valor .)
    PCOMA           reduce using rule 22 (expcmp -> valor opcomparacion valor .)
    ID              reduce using rule 22 (expcmp -> valor opcomparacion valor .)
    RLLAVE          reduce using rule 22 (expcmp -> valor opcomparacion valor .)
    RETURN          reduce using rule 22 (expcmp -> valor opcomparacion valor .)


state 73

    (31) comparacion -> IF LPAREN expcmp . RPAREN LLLAVE sentencias RLLAVE
    (33) comparacion -> IF LPAREN expcmp . RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (34) comparacion -> IF LPAREN expcmp . RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (25) expcmplog -> expcmp . oplog expcmp
    (26) expcmplog -> expcmp . oplog expcmplog
    (27) oplog -> . BOOLEAN_OR
    (28) oplog -> . BOOLEAN_AND
    (29) oplog -> . AND
    (30) oplog -> . OR

    RPAREN          shift and go to state 95
    BOOLEAN_OR      shift and go to state 43
    BOOLEAN_AND     shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46

    oplog                          shift and go to state 42

state 74

    (32) comparacion -> IF LPAREN expcmplog . RPAREN LLLAVE sentencias RLLAVE

    RPAREN          shift and go to state 96


state 75

    (23) expcmp -> LPAREN valor opcomparacion . valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN
    (24) expcmp -> LPAREN valor opcomparacion . valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN oplog expcmp
    (13) valor -> . ID
    (14) valor -> . NUMBER
    (15) valor -> . CADENA
    (16) valor -> . BOOLEAN

    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    CADENA          shift and go to state 20
    BOOLEAN         shift and go to state 28

    valor                          shift and go to state 97

state 76

    (25) expcmplog -> expcmp oplog expcmp .
    (25) expcmplog -> expcmp . oplog expcmp
    (26) expcmplog -> expcmp . oplog expcmplog
    (27) oplog -> . BOOLEAN_OR
    (28) oplog -> . BOOLEAN_AND
    (29) oplog -> . AND
    (30) oplog -> . OR

    FIN             reduce using rule 25 (expcmplog -> expcmp oplog expcmp .)
    PCOMA           reduce using rule 25 (expcmplog -> expcmp oplog expcmp .)
    RPAREN          reduce using rule 25 (expcmplog -> expcmp oplog expcmp .)
    ID              reduce using rule 25 (expcmplog -> expcmp oplog expcmp .)
    RLLAVE          reduce using rule 25 (expcmplog -> expcmp oplog expcmp .)
    RETURN          reduce using rule 25 (expcmplog -> expcmp oplog expcmp .)
    BOOLEAN_OR      shift and go to state 43
    BOOLEAN_AND     shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46

    oplog                          shift and go to state 42

state 77

    (26) expcmplog -> expcmp oplog expcmplog .

    FIN             reduce using rule 26 (expcmplog -> expcmp oplog expcmplog .)
    PCOMA           reduce using rule 26 (expcmplog -> expcmp oplog expcmplog .)
    RPAREN          reduce using rule 26 (expcmplog -> expcmp oplog expcmplog .)
    ID              reduce using rule 26 (expcmplog -> expcmp oplog expcmplog .)
    RLLAVE          reduce using rule 26 (expcmplog -> expcmp oplog expcmplog .)
    RETURN          reduce using rule 26 (expcmplog -> expcmp oplog expcmplog .)


state 78

    (49) funcion -> FUNCTION NFUNCION ID . LPAREN args RPAREN LLLAVE sentencias RLLAVE
    (50) funcion -> FUNCTION NFUNCION ID . LPAREN args RPAREN LLLAVE sentencias RETURN valor PCOMA RLLAVE

    LPAREN          shift and go to state 98


state 79

    (54) impresion -> ECHO ID PCOMA .

    FIN             reduce using rule 54 (impresion -> ECHO ID PCOMA .)
    ID              reduce using rule 54 (impresion -> ECHO ID PCOMA .)
    RLLAVE          reduce using rule 54 (impresion -> ECHO ID PCOMA .)
    RETURN          reduce using rule 54 (impresion -> ECHO ID PCOMA .)


state 80

    (55) impresion -> ECHO CADENA PCOMA .

    FIN             reduce using rule 55 (impresion -> ECHO CADENA PCOMA .)
    ID              reduce using rule 55 (impresion -> ECHO CADENA PCOMA .)
    RLLAVE          reduce using rule 55 (impresion -> ECHO CADENA PCOMA .)
    RETURN          reduce using rule 55 (impresion -> ECHO CADENA PCOMA .)


state 81

    (62) repeticion -> FOR LPAREN ID . ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE

    ASIGNACION      shift and go to state 99


state 82

    (41) expresionmat -> NUMBER operadormat NUMBER .

    FIN             reduce using rule 41 (expresionmat -> NUMBER operadormat NUMBER .)
    PCOMA           reduce using rule 41 (expresionmat -> NUMBER operadormat NUMBER .)
    ID              reduce using rule 41 (expresionmat -> NUMBER operadormat NUMBER .)
    RLLAVE          reduce using rule 41 (expresionmat -> NUMBER operadormat NUMBER .)
    RETURN          reduce using rule 41 (expresionmat -> NUMBER operadormat NUMBER .)


state 83

    (63) repeticion -> WHILE LPAREN ID . opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE
    (17) opcomparacion -> . IGUAL
    (18) opcomparacion -> . MAYOR
    (19) opcomparacion -> . MENOR
    (20) opcomparacion -> . MAYORIGUAL
    (21) opcomparacion -> . MENORIGUAL

    IGUAL           shift and go to state 33
    MAYOR           shift and go to state 34
    MENOR           shift and go to state 35
    MAYORIGUAL      shift and go to state 36
    MENORIGUAL      shift and go to state 37

    opcomparacion                  shift and go to state 100

state 84

    (64) repeticion -> DO LLLAVE sentencias . ID actualizar PCOMA RLLAVE WHILE LPAREN ID opcomparacion valor RPAREN PCOMA

    ID              shift and go to state 101


state 85

    (53) excepcion -> TRY LLLAVE sentencias . RLLAVE CATCH LPAREN EXCEPTION ID RPAREN LLLAVE ECHO CADENA COMA ID FLECHA GETMESSAGE RLLAVE

    RLLAVE          shift and go to state 102


state 86

    (37) sort -> SORT LPAREN ID . RPAREN PCOMA

    RPAREN          shift and go to state 103


state 87

    (9) asignacion -> ID ASIGNACION valor PCOMA .

    FIN             reduce using rule 9 (asignacion -> ID ASIGNACION valor PCOMA .)
    ID              reduce using rule 9 (asignacion -> ID ASIGNACION valor PCOMA .)
    RLLAVE          reduce using rule 9 (asignacion -> ID ASIGNACION valor PCOMA .)
    RETURN          reduce using rule 9 (asignacion -> ID ASIGNACION valor PCOMA .)


state 88

    (11) asignacion -> ID ASIGNACION estdatos PCOMA .

    FIN             reduce using rule 11 (asignacion -> ID ASIGNACION estdatos PCOMA .)
    ID              reduce using rule 11 (asignacion -> ID ASIGNACION estdatos PCOMA .)
    RLLAVE          reduce using rule 11 (asignacion -> ID ASIGNACION estdatos PCOMA .)
    RETURN          reduce using rule 11 (asignacion -> ID ASIGNACION estdatos PCOMA .)


state 89

    (12) asignacion -> ID ASIGNACION expresion PCOMA .

    FIN             reduce using rule 12 (asignacion -> ID ASIGNACION expresion PCOMA .)
    ID              reduce using rule 12 (asignacion -> ID ASIGNACION expresion PCOMA .)
    RLLAVE          reduce using rule 12 (asignacion -> ID ASIGNACION expresion PCOMA .)
    RETURN          reduce using rule 12 (asignacion -> ID ASIGNACION expresion PCOMA .)


state 90

    (35) array -> ARRAY LPAREN . valor DOUBLE_ARROW valor RPAREN
    (36) array -> ARRAY LPAREN . valor RPAREN
    (13) valor -> . ID
    (14) valor -> . NUMBER
    (15) valor -> . CADENA
    (16) valor -> . BOOLEAN

    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    CADENA          shift and go to state 20
    BOOLEAN         shift and go to state 28

    valor                          shift and go to state 104

state 91

    (67) heap -> LPAREN ARRAY . LPAREN valor DOUBLE_ARROW NUMBER RPAREN RPAREN PCOMA

    LPAREN          shift and go to state 105


state 92

    (65) array_map -> ARRAY_MAP LPAREN . funcion COMA array RPAREN PCOMA
    (48) funcion -> . sort
    (49) funcion -> . FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RLLAVE
    (50) funcion -> . FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RETURN valor PCOMA RLLAVE
    (37) sort -> . SORT LPAREN ID RPAREN PCOMA

    FUNCTION        shift and go to state 18
    SORT            shift and go to state 27

    funcion                        shift and go to state 106
    sort                           shift and go to state 17

state 93

    (66) heap -> HEAP DOUBLE_ARROW . INSERT LPAREN LCORCH NUMBER COMA NUMBER RCORCH RPAREN PCOMA

    INSERT          shift and go to state 107


state 94

    (10) asignacion -> ID REF ID PCOMA .

    FIN             reduce using rule 10 (asignacion -> ID REF ID PCOMA .)
    ID              reduce using rule 10 (asignacion -> ID REF ID PCOMA .)
    RLLAVE          reduce using rule 10 (asignacion -> ID REF ID PCOMA .)
    RETURN          reduce using rule 10 (asignacion -> ID REF ID PCOMA .)


state 95

    (31) comparacion -> IF LPAREN expcmp RPAREN . LLLAVE sentencias RLLAVE
    (33) comparacion -> IF LPAREN expcmp RPAREN . LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (34) comparacion -> IF LPAREN expcmp RPAREN . LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE

    LLLAVE          shift and go to state 108


state 96

    (32) comparacion -> IF LPAREN expcmplog RPAREN . LLLAVE sentencias RLLAVE

    LLLAVE          shift and go to state 109


state 97

    (23) expcmp -> LPAREN valor opcomparacion valor . RPAREN oplog LPAREN valor opcomparacion valor RPAREN
    (24) expcmp -> LPAREN valor opcomparacion valor . RPAREN oplog LPAREN valor opcomparacion valor RPAREN oplog expcmp

    RPAREN          shift and go to state 110


state 98

    (49) funcion -> FUNCTION NFUNCION ID LPAREN . args RPAREN LLLAVE sentencias RLLAVE
    (50) funcion -> FUNCTION NFUNCION ID LPAREN . args RPAREN LLLAVE sentencias RETURN valor PCOMA RLLAVE
    (51) args -> . ID
    (52) args -> . ID args

    ID              shift and go to state 111

    args                           shift and go to state 112

state 99

    (62) repeticion -> FOR LPAREN ID ASIGNACION . NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE

    NUMBER          shift and go to state 113


state 100

    (63) repeticion -> WHILE LPAREN ID opcomparacion . valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE
    (13) valor -> . ID
    (14) valor -> . NUMBER
    (15) valor -> . CADENA
    (16) valor -> . BOOLEAN

    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    CADENA          shift and go to state 20
    BOOLEAN         shift and go to state 28

    valor                          shift and go to state 114

state 101

    (64) repeticion -> DO LLLAVE sentencias ID . actualizar PCOMA RLLAVE WHILE LPAREN ID opcomparacion valor RPAREN PCOMA
    (60) actualizar -> . INCREMENTO
    (61) actualizar -> . DECREMENTO

    INCREMENTO      shift and go to state 116
    DECREMENTO      shift and go to state 117

    actualizar                     shift and go to state 115

state 102

    (53) excepcion -> TRY LLLAVE sentencias RLLAVE . CATCH LPAREN EXCEPTION ID RPAREN LLLAVE ECHO CADENA COMA ID FLECHA GETMESSAGE RLLAVE

    CATCH           shift and go to state 118


state 103

    (37) sort -> SORT LPAREN ID RPAREN . PCOMA

    PCOMA           shift and go to state 119


state 104

    (35) array -> ARRAY LPAREN valor . DOUBLE_ARROW valor RPAREN
    (36) array -> ARRAY LPAREN valor . RPAREN

    DOUBLE_ARROW    shift and go to state 120
    RPAREN          shift and go to state 121


state 105

    (67) heap -> LPAREN ARRAY LPAREN . valor DOUBLE_ARROW NUMBER RPAREN RPAREN PCOMA
    (13) valor -> . ID
    (14) valor -> . NUMBER
    (15) valor -> . CADENA
    (16) valor -> . BOOLEAN

    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    CADENA          shift and go to state 20
    BOOLEAN         shift and go to state 28

    valor                          shift and go to state 122

state 106

    (65) array_map -> ARRAY_MAP LPAREN funcion . COMA array RPAREN PCOMA

    COMA            shift and go to state 123


state 107

    (66) heap -> HEAP DOUBLE_ARROW INSERT . LPAREN LCORCH NUMBER COMA NUMBER RCORCH RPAREN PCOMA

    LPAREN          shift and go to state 124


state 108

    (31) comparacion -> IF LPAREN expcmp RPAREN LLLAVE . sentencias RLLAVE
    (33) comparacion -> IF LPAREN expcmp RPAREN LLLAVE . sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (34) comparacion -> IF LPAREN expcmp RPAREN LLLAVE . sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (2) sentencias -> . asignacion
    (3) sentencias -> . comparacion
    (4) sentencias -> . funcion
    (5) sentencias -> . impresion
    (6) sentencias -> . repeticion
    (7) sentencias -> . expresion
    (8) sentencias -> . excepcion
    (9) asignacion -> . ID ASIGNACION valor PCOMA
    (10) asignacion -> . ID REF ID PCOMA
    (11) asignacion -> . ID ASIGNACION estdatos PCOMA
    (12) asignacion -> . ID ASIGNACION expresion PCOMA
    (31) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE
    (32) comparacion -> . IF LPAREN expcmplog RPAREN LLLAVE sentencias RLLAVE
    (33) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (34) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (48) funcion -> . sort
    (49) funcion -> . FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RLLAVE
    (50) funcion -> . FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RETURN valor PCOMA RLLAVE
    (54) impresion -> . ECHO ID PCOMA
    (55) impresion -> . ECHO CADENA PCOMA
    (62) repeticion -> . FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE
    (63) repeticion -> . WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE
    (64) repeticion -> . DO LLLAVE sentencias ID actualizar PCOMA RLLAVE WHILE LPAREN ID opcomparacion valor RPAREN PCOMA
    (46) expresion -> . expresionmat
    (47) expresion -> . expcmplog
    (53) excepcion -> . TRY LLLAVE sentencias RLLAVE CATCH LPAREN EXCEPTION ID RPAREN LLLAVE ECHO CADENA COMA ID FLECHA GETMESSAGE RLLAVE
    (37) sort -> . SORT LPAREN ID RPAREN PCOMA
    (41) expresionmat -> . NUMBER operadormat NUMBER
    (25) expcmplog -> . expcmp oplog expcmp
    (26) expcmplog -> . expcmp oplog expcmplog
    (22) expcmp -> . valor opcomparacion valor
    (23) expcmp -> . LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN
    (24) expcmp -> . LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN oplog expcmp
    (13) valor -> . ID
    (14) valor -> . NUMBER
    (15) valor -> . CADENA
    (16) valor -> . BOOLEAN

    ID              shift and go to state 11
    IF              shift and go to state 13
    FUNCTION        shift and go to state 18
    ECHO            shift and go to state 19
    FOR             shift and go to state 21
    WHILE           shift and go to state 23
    DO              shift and go to state 24
    TRY             shift and go to state 26
    SORT            shift and go to state 27
    NUMBER          shift and go to state 22
    LPAREN          shift and go to state 14
    CADENA          shift and go to state 20
    BOOLEAN         shift and go to state 28

    expcmp                         shift and go to state 15
    sentencias                     shift and go to state 125
    asignacion                     shift and go to state 4
    comparacion                    shift and go to state 5
    funcion                        shift and go to state 6
    impresion                      shift and go to state 7
    repeticion                     shift and go to state 8
    expresion                      shift and go to state 9
    excepcion                      shift and go to state 10
    valor                          shift and go to state 12
    expcmplog                      shift and go to state 16
    sort                           shift and go to state 17
    expresionmat                   shift and go to state 25

state 109

    (32) comparacion -> IF LPAREN expcmplog RPAREN LLLAVE . sentencias RLLAVE
    (2) sentencias -> . asignacion
    (3) sentencias -> . comparacion
    (4) sentencias -> . funcion
    (5) sentencias -> . impresion
    (6) sentencias -> . repeticion
    (7) sentencias -> . expresion
    (8) sentencias -> . excepcion
    (9) asignacion -> . ID ASIGNACION valor PCOMA
    (10) asignacion -> . ID REF ID PCOMA
    (11) asignacion -> . ID ASIGNACION estdatos PCOMA
    (12) asignacion -> . ID ASIGNACION expresion PCOMA
    (31) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE
    (32) comparacion -> . IF LPAREN expcmplog RPAREN LLLAVE sentencias RLLAVE
    (33) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (34) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (48) funcion -> . sort
    (49) funcion -> . FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RLLAVE
    (50) funcion -> . FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RETURN valor PCOMA RLLAVE
    (54) impresion -> . ECHO ID PCOMA
    (55) impresion -> . ECHO CADENA PCOMA
    (62) repeticion -> . FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE
    (63) repeticion -> . WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE
    (64) repeticion -> . DO LLLAVE sentencias ID actualizar PCOMA RLLAVE WHILE LPAREN ID opcomparacion valor RPAREN PCOMA
    (46) expresion -> . expresionmat
    (47) expresion -> . expcmplog
    (53) excepcion -> . TRY LLLAVE sentencias RLLAVE CATCH LPAREN EXCEPTION ID RPAREN LLLAVE ECHO CADENA COMA ID FLECHA GETMESSAGE RLLAVE
    (37) sort -> . SORT LPAREN ID RPAREN PCOMA
    (41) expresionmat -> . NUMBER operadormat NUMBER
    (25) expcmplog -> . expcmp oplog expcmp
    (26) expcmplog -> . expcmp oplog expcmplog
    (22) expcmp -> . valor opcomparacion valor
    (23) expcmp -> . LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN
    (24) expcmp -> . LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN oplog expcmp
    (13) valor -> . ID
    (14) valor -> . NUMBER
    (15) valor -> . CADENA
    (16) valor -> . BOOLEAN

    ID              shift and go to state 11
    IF              shift and go to state 13
    FUNCTION        shift and go to state 18
    ECHO            shift and go to state 19
    FOR             shift and go to state 21
    WHILE           shift and go to state 23
    DO              shift and go to state 24
    TRY             shift and go to state 26
    SORT            shift and go to state 27
    NUMBER          shift and go to state 22
    LPAREN          shift and go to state 14
    CADENA          shift and go to state 20
    BOOLEAN         shift and go to state 28

    expcmplog                      shift and go to state 16
    sentencias                     shift and go to state 126
    asignacion                     shift and go to state 4
    comparacion                    shift and go to state 5
    funcion                        shift and go to state 6
    impresion                      shift and go to state 7
    repeticion                     shift and go to state 8
    expresion                      shift and go to state 9
    excepcion                      shift and go to state 10
    valor                          shift and go to state 12
    expcmp                         shift and go to state 15
    sort                           shift and go to state 17
    expresionmat                   shift and go to state 25

state 110

    (23) expcmp -> LPAREN valor opcomparacion valor RPAREN . oplog LPAREN valor opcomparacion valor RPAREN
    (24) expcmp -> LPAREN valor opcomparacion valor RPAREN . oplog LPAREN valor opcomparacion valor RPAREN oplog expcmp
    (27) oplog -> . BOOLEAN_OR
    (28) oplog -> . BOOLEAN_AND
    (29) oplog -> . AND
    (30) oplog -> . OR

    BOOLEAN_OR      shift and go to state 43
    BOOLEAN_AND     shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46

    oplog                          shift and go to state 127

state 111

    (51) args -> ID .
    (52) args -> ID . args
    (51) args -> . ID
    (52) args -> . ID args

    RPAREN          reduce using rule 51 (args -> ID .)
    ID              shift and go to state 111

    args                           shift and go to state 128

state 112

    (49) funcion -> FUNCTION NFUNCION ID LPAREN args . RPAREN LLLAVE sentencias RLLAVE
    (50) funcion -> FUNCTION NFUNCION ID LPAREN args . RPAREN LLLAVE sentencias RETURN valor PCOMA RLLAVE

    RPAREN          shift and go to state 129


state 113

    (62) repeticion -> FOR LPAREN ID ASIGNACION NUMBER . PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE

    PCOMA           shift and go to state 130


state 114

    (63) repeticion -> WHILE LPAREN ID opcomparacion valor . RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE

    RPAREN          shift and go to state 131


state 115

    (64) repeticion -> DO LLLAVE sentencias ID actualizar . PCOMA RLLAVE WHILE LPAREN ID opcomparacion valor RPAREN PCOMA

    PCOMA           shift and go to state 132


state 116

    (60) actualizar -> INCREMENTO .

    PCOMA           reduce using rule 60 (actualizar -> INCREMENTO .)
    RPAREN          reduce using rule 60 (actualizar -> INCREMENTO .)


state 117

    (61) actualizar -> DECREMENTO .

    PCOMA           reduce using rule 61 (actualizar -> DECREMENTO .)
    RPAREN          reduce using rule 61 (actualizar -> DECREMENTO .)


state 118

    (53) excepcion -> TRY LLLAVE sentencias RLLAVE CATCH . LPAREN EXCEPTION ID RPAREN LLLAVE ECHO CADENA COMA ID FLECHA GETMESSAGE RLLAVE

    LPAREN          shift and go to state 133


state 119

    (37) sort -> SORT LPAREN ID RPAREN PCOMA .

    FIN             reduce using rule 37 (sort -> SORT LPAREN ID RPAREN PCOMA .)
    ID              reduce using rule 37 (sort -> SORT LPAREN ID RPAREN PCOMA .)
    RLLAVE          reduce using rule 37 (sort -> SORT LPAREN ID RPAREN PCOMA .)
    COMA            reduce using rule 37 (sort -> SORT LPAREN ID RPAREN PCOMA .)
    RETURN          reduce using rule 37 (sort -> SORT LPAREN ID RPAREN PCOMA .)


state 120

    (35) array -> ARRAY LPAREN valor DOUBLE_ARROW . valor RPAREN
    (13) valor -> . ID
    (14) valor -> . NUMBER
    (15) valor -> . CADENA
    (16) valor -> . BOOLEAN

    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    CADENA          shift and go to state 20
    BOOLEAN         shift and go to state 28

    valor                          shift and go to state 134

state 121

    (36) array -> ARRAY LPAREN valor RPAREN .

    PCOMA           reduce using rule 36 (array -> ARRAY LPAREN valor RPAREN .)
    RPAREN          reduce using rule 36 (array -> ARRAY LPAREN valor RPAREN .)


state 122

    (67) heap -> LPAREN ARRAY LPAREN valor . DOUBLE_ARROW NUMBER RPAREN RPAREN PCOMA

    DOUBLE_ARROW    shift and go to state 135


state 123

    (65) array_map -> ARRAY_MAP LPAREN funcion COMA . array RPAREN PCOMA
    (35) array -> . ARRAY LPAREN valor DOUBLE_ARROW valor RPAREN
    (36) array -> . ARRAY LPAREN valor RPAREN

    ARRAY           shift and go to state 67

    array                          shift and go to state 136

state 124

    (66) heap -> HEAP DOUBLE_ARROW INSERT LPAREN . LCORCH NUMBER COMA NUMBER RCORCH RPAREN PCOMA

    LCORCH          shift and go to state 137


state 125

    (31) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias . RLLAVE
    (33) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias . RLLAVE ELSE LLLAVE sentencias RLLAVE
    (34) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias . RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE

    RLLAVE          shift and go to state 138


state 126

    (32) comparacion -> IF LPAREN expcmplog RPAREN LLLAVE sentencias . RLLAVE

    RLLAVE          shift and go to state 139


state 127

    (23) expcmp -> LPAREN valor opcomparacion valor RPAREN oplog . LPAREN valor opcomparacion valor RPAREN
    (24) expcmp -> LPAREN valor opcomparacion valor RPAREN oplog . LPAREN valor opcomparacion valor RPAREN oplog expcmp

    LPAREN          shift and go to state 140


state 128

    (52) args -> ID args .

    RPAREN          reduce using rule 52 (args -> ID args .)


state 129

    (49) funcion -> FUNCTION NFUNCION ID LPAREN args RPAREN . LLLAVE sentencias RLLAVE
    (50) funcion -> FUNCTION NFUNCION ID LPAREN args RPAREN . LLLAVE sentencias RETURN valor PCOMA RLLAVE

    LLLAVE          shift and go to state 141


state 130

    (62) repeticion -> FOR LPAREN ID ASIGNACION NUMBER PCOMA . ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE

    ID              shift and go to state 142


state 131

    (63) repeticion -> WHILE LPAREN ID opcomparacion valor RPAREN . LLLAVE sentencias ID actualizar PCOMA RLLAVE

    LLLAVE          shift and go to state 143


state 132

    (64) repeticion -> DO LLLAVE sentencias ID actualizar PCOMA . RLLAVE WHILE LPAREN ID opcomparacion valor RPAREN PCOMA

    RLLAVE          shift and go to state 144


state 133

    (53) excepcion -> TRY LLLAVE sentencias RLLAVE CATCH LPAREN . EXCEPTION ID RPAREN LLLAVE ECHO CADENA COMA ID FLECHA GETMESSAGE RLLAVE

    EXCEPTION       shift and go to state 145


state 134

    (35) array -> ARRAY LPAREN valor DOUBLE_ARROW valor . RPAREN

    RPAREN          shift and go to state 146


state 135

    (67) heap -> LPAREN ARRAY LPAREN valor DOUBLE_ARROW . NUMBER RPAREN RPAREN PCOMA

    NUMBER          shift and go to state 147


state 136

    (65) array_map -> ARRAY_MAP LPAREN funcion COMA array . RPAREN PCOMA

    RPAREN          shift and go to state 148


state 137

    (66) heap -> HEAP DOUBLE_ARROW INSERT LPAREN LCORCH . NUMBER COMA NUMBER RCORCH RPAREN PCOMA

    NUMBER          shift and go to state 149


state 138

    (31) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE .
    (33) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE . ELSE LLLAVE sentencias RLLAVE
    (34) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE . ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE

    FIN             reduce using rule 31 (comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE .)
    ID              reduce using rule 31 (comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 31 (comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE .)
    RETURN          reduce using rule 31 (comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE .)
    ELSE            shift and go to state 150
    ELSEIF          shift and go to state 151


state 139

    (32) comparacion -> IF LPAREN expcmplog RPAREN LLLAVE sentencias RLLAVE .

    FIN             reduce using rule 32 (comparacion -> IF LPAREN expcmplog RPAREN LLLAVE sentencias RLLAVE .)
    ID              reduce using rule 32 (comparacion -> IF LPAREN expcmplog RPAREN LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 32 (comparacion -> IF LPAREN expcmplog RPAREN LLLAVE sentencias RLLAVE .)
    RETURN          reduce using rule 32 (comparacion -> IF LPAREN expcmplog RPAREN LLLAVE sentencias RLLAVE .)


state 140

    (23) expcmp -> LPAREN valor opcomparacion valor RPAREN oplog LPAREN . valor opcomparacion valor RPAREN
    (24) expcmp -> LPAREN valor opcomparacion valor RPAREN oplog LPAREN . valor opcomparacion valor RPAREN oplog expcmp
    (13) valor -> . ID
    (14) valor -> . NUMBER
    (15) valor -> . CADENA
    (16) valor -> . BOOLEAN

    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    CADENA          shift and go to state 20
    BOOLEAN         shift and go to state 28

    valor                          shift and go to state 152

state 141

    (49) funcion -> FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE . sentencias RLLAVE
    (50) funcion -> FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE . sentencias RETURN valor PCOMA RLLAVE
    (2) sentencias -> . asignacion
    (3) sentencias -> . comparacion
    (4) sentencias -> . funcion
    (5) sentencias -> . impresion
    (6) sentencias -> . repeticion
    (7) sentencias -> . expresion
    (8) sentencias -> . excepcion
    (9) asignacion -> . ID ASIGNACION valor PCOMA
    (10) asignacion -> . ID REF ID PCOMA
    (11) asignacion -> . ID ASIGNACION estdatos PCOMA
    (12) asignacion -> . ID ASIGNACION expresion PCOMA
    (31) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE
    (32) comparacion -> . IF LPAREN expcmplog RPAREN LLLAVE sentencias RLLAVE
    (33) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (34) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (48) funcion -> . sort
    (49) funcion -> . FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RLLAVE
    (50) funcion -> . FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RETURN valor PCOMA RLLAVE
    (54) impresion -> . ECHO ID PCOMA
    (55) impresion -> . ECHO CADENA PCOMA
    (62) repeticion -> . FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE
    (63) repeticion -> . WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE
    (64) repeticion -> . DO LLLAVE sentencias ID actualizar PCOMA RLLAVE WHILE LPAREN ID opcomparacion valor RPAREN PCOMA
    (46) expresion -> . expresionmat
    (47) expresion -> . expcmplog
    (53) excepcion -> . TRY LLLAVE sentencias RLLAVE CATCH LPAREN EXCEPTION ID RPAREN LLLAVE ECHO CADENA COMA ID FLECHA GETMESSAGE RLLAVE
    (37) sort -> . SORT LPAREN ID RPAREN PCOMA
    (41) expresionmat -> . NUMBER operadormat NUMBER
    (25) expcmplog -> . expcmp oplog expcmp
    (26) expcmplog -> . expcmp oplog expcmplog
    (22) expcmp -> . valor opcomparacion valor
    (23) expcmp -> . LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN
    (24) expcmp -> . LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN oplog expcmp
    (13) valor -> . ID
    (14) valor -> . NUMBER
    (15) valor -> . CADENA
    (16) valor -> . BOOLEAN

    ID              shift and go to state 11
    IF              shift and go to state 13
    FUNCTION        shift and go to state 18
    ECHO            shift and go to state 19
    FOR             shift and go to state 21
    WHILE           shift and go to state 23
    DO              shift and go to state 24
    TRY             shift and go to state 26
    SORT            shift and go to state 27
    NUMBER          shift and go to state 22
    LPAREN          shift and go to state 14
    CADENA          shift and go to state 20
    BOOLEAN         shift and go to state 28

    sentencias                     shift and go to state 153
    valor                          shift and go to state 12
    asignacion                     shift and go to state 4
    comparacion                    shift and go to state 5
    funcion                        shift and go to state 6
    impresion                      shift and go to state 7
    repeticion                     shift and go to state 8
    expresion                      shift and go to state 9
    excepcion                      shift and go to state 10
    expcmp                         shift and go to state 15
    expcmplog                      shift and go to state 16
    sort                           shift and go to state 17
    expresionmat                   shift and go to state 25

state 142

    (62) repeticion -> FOR LPAREN ID ASIGNACION NUMBER PCOMA ID . repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE
    (56) repeticionrep -> . MAYOR
    (57) repeticionrep -> . MENOR
    (58) repeticionrep -> . MAYORIGUAL
    (59) repeticionrep -> . MENORIGUAL

    MAYOR           shift and go to state 155
    MENOR           shift and go to state 156
    MAYORIGUAL      shift and go to state 157
    MENORIGUAL      shift and go to state 158

    repeticionrep                  shift and go to state 154

state 143

    (63) repeticion -> WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE . sentencias ID actualizar PCOMA RLLAVE
    (2) sentencias -> . asignacion
    (3) sentencias -> . comparacion
    (4) sentencias -> . funcion
    (5) sentencias -> . impresion
    (6) sentencias -> . repeticion
    (7) sentencias -> . expresion
    (8) sentencias -> . excepcion
    (9) asignacion -> . ID ASIGNACION valor PCOMA
    (10) asignacion -> . ID REF ID PCOMA
    (11) asignacion -> . ID ASIGNACION estdatos PCOMA
    (12) asignacion -> . ID ASIGNACION expresion PCOMA
    (31) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE
    (32) comparacion -> . IF LPAREN expcmplog RPAREN LLLAVE sentencias RLLAVE
    (33) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (34) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (48) funcion -> . sort
    (49) funcion -> . FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RLLAVE
    (50) funcion -> . FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RETURN valor PCOMA RLLAVE
    (54) impresion -> . ECHO ID PCOMA
    (55) impresion -> . ECHO CADENA PCOMA
    (62) repeticion -> . FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE
    (63) repeticion -> . WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE
    (64) repeticion -> . DO LLLAVE sentencias ID actualizar PCOMA RLLAVE WHILE LPAREN ID opcomparacion valor RPAREN PCOMA
    (46) expresion -> . expresionmat
    (47) expresion -> . expcmplog
    (53) excepcion -> . TRY LLLAVE sentencias RLLAVE CATCH LPAREN EXCEPTION ID RPAREN LLLAVE ECHO CADENA COMA ID FLECHA GETMESSAGE RLLAVE
    (37) sort -> . SORT LPAREN ID RPAREN PCOMA
    (41) expresionmat -> . NUMBER operadormat NUMBER
    (25) expcmplog -> . expcmp oplog expcmp
    (26) expcmplog -> . expcmp oplog expcmplog
    (22) expcmp -> . valor opcomparacion valor
    (23) expcmp -> . LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN
    (24) expcmp -> . LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN oplog expcmp
    (13) valor -> . ID
    (14) valor -> . NUMBER
    (15) valor -> . CADENA
    (16) valor -> . BOOLEAN

    ID              shift and go to state 11
    IF              shift and go to state 13
    FUNCTION        shift and go to state 18
    ECHO            shift and go to state 19
    FOR             shift and go to state 21
    WHILE           shift and go to state 23
    DO              shift and go to state 24
    TRY             shift and go to state 26
    SORT            shift and go to state 27
    NUMBER          shift and go to state 22
    LPAREN          shift and go to state 14
    CADENA          shift and go to state 20
    BOOLEAN         shift and go to state 28

    valor                          shift and go to state 12
    sentencias                     shift and go to state 159
    asignacion                     shift and go to state 4
    comparacion                    shift and go to state 5
    funcion                        shift and go to state 6
    impresion                      shift and go to state 7
    repeticion                     shift and go to state 8
    expresion                      shift and go to state 9
    excepcion                      shift and go to state 10
    expcmp                         shift and go to state 15
    expcmplog                      shift and go to state 16
    sort                           shift and go to state 17
    expresionmat                   shift and go to state 25

state 144

    (64) repeticion -> DO LLLAVE sentencias ID actualizar PCOMA RLLAVE . WHILE LPAREN ID opcomparacion valor RPAREN PCOMA

    WHILE           shift and go to state 160


state 145

    (53) excepcion -> TRY LLLAVE sentencias RLLAVE CATCH LPAREN EXCEPTION . ID RPAREN LLLAVE ECHO CADENA COMA ID FLECHA GETMESSAGE RLLAVE

    ID              shift and go to state 161


state 146

    (35) array -> ARRAY LPAREN valor DOUBLE_ARROW valor RPAREN .

    PCOMA           reduce using rule 35 (array -> ARRAY LPAREN valor DOUBLE_ARROW valor RPAREN .)
    RPAREN          reduce using rule 35 (array -> ARRAY LPAREN valor DOUBLE_ARROW valor RPAREN .)


state 147

    (67) heap -> LPAREN ARRAY LPAREN valor DOUBLE_ARROW NUMBER . RPAREN RPAREN PCOMA

    RPAREN          shift and go to state 162


state 148

    (65) array_map -> ARRAY_MAP LPAREN funcion COMA array RPAREN . PCOMA

    PCOMA           shift and go to state 163


state 149

    (66) heap -> HEAP DOUBLE_ARROW INSERT LPAREN LCORCH NUMBER . COMA NUMBER RCORCH RPAREN PCOMA

    COMA            shift and go to state 164


state 150

    (33) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE . LLLAVE sentencias RLLAVE

    LLLAVE          shift and go to state 165


state 151

    (34) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF . LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE

    LPAREN          shift and go to state 166


state 152

    (23) expcmp -> LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor . opcomparacion valor RPAREN
    (24) expcmp -> LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor . opcomparacion valor RPAREN oplog expcmp
    (17) opcomparacion -> . IGUAL
    (18) opcomparacion -> . MAYOR
    (19) opcomparacion -> . MENOR
    (20) opcomparacion -> . MAYORIGUAL
    (21) opcomparacion -> . MENORIGUAL

    IGUAL           shift and go to state 33
    MAYOR           shift and go to state 34
    MENOR           shift and go to state 35
    MAYORIGUAL      shift and go to state 36
    MENORIGUAL      shift and go to state 37

    opcomparacion                  shift and go to state 167

state 153

    (49) funcion -> FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias . RLLAVE
    (50) funcion -> FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias . RETURN valor PCOMA RLLAVE

    RLLAVE          shift and go to state 168
    RETURN          shift and go to state 169


state 154

    (62) repeticion -> FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep . NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE

    NUMBER          shift and go to state 170


state 155

    (56) repeticionrep -> MAYOR .

    NUMBER          reduce using rule 56 (repeticionrep -> MAYOR .)


state 156

    (57) repeticionrep -> MENOR .

    NUMBER          reduce using rule 57 (repeticionrep -> MENOR .)


state 157

    (58) repeticionrep -> MAYORIGUAL .

    NUMBER          reduce using rule 58 (repeticionrep -> MAYORIGUAL .)


state 158

    (59) repeticionrep -> MENORIGUAL .

    NUMBER          reduce using rule 59 (repeticionrep -> MENORIGUAL .)


state 159

    (63) repeticion -> WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias . ID actualizar PCOMA RLLAVE

    ID              shift and go to state 171


state 160

    (64) repeticion -> DO LLLAVE sentencias ID actualizar PCOMA RLLAVE WHILE . LPAREN ID opcomparacion valor RPAREN PCOMA

    LPAREN          shift and go to state 172


state 161

    (53) excepcion -> TRY LLLAVE sentencias RLLAVE CATCH LPAREN EXCEPTION ID . RPAREN LLLAVE ECHO CADENA COMA ID FLECHA GETMESSAGE RLLAVE

    RPAREN          shift and go to state 173


state 162

    (67) heap -> LPAREN ARRAY LPAREN valor DOUBLE_ARROW NUMBER RPAREN . RPAREN PCOMA

    RPAREN          shift and go to state 174


state 163

    (65) array_map -> ARRAY_MAP LPAREN funcion COMA array RPAREN PCOMA .

    PCOMA           reduce using rule 65 (array_map -> ARRAY_MAP LPAREN funcion COMA array RPAREN PCOMA .)


state 164

    (66) heap -> HEAP DOUBLE_ARROW INSERT LPAREN LCORCH NUMBER COMA . NUMBER RCORCH RPAREN PCOMA

    NUMBER          shift and go to state 175


state 165

    (33) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE . sentencias RLLAVE
    (2) sentencias -> . asignacion
    (3) sentencias -> . comparacion
    (4) sentencias -> . funcion
    (5) sentencias -> . impresion
    (6) sentencias -> . repeticion
    (7) sentencias -> . expresion
    (8) sentencias -> . excepcion
    (9) asignacion -> . ID ASIGNACION valor PCOMA
    (10) asignacion -> . ID REF ID PCOMA
    (11) asignacion -> . ID ASIGNACION estdatos PCOMA
    (12) asignacion -> . ID ASIGNACION expresion PCOMA
    (31) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE
    (32) comparacion -> . IF LPAREN expcmplog RPAREN LLLAVE sentencias RLLAVE
    (33) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (34) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (48) funcion -> . sort
    (49) funcion -> . FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RLLAVE
    (50) funcion -> . FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RETURN valor PCOMA RLLAVE
    (54) impresion -> . ECHO ID PCOMA
    (55) impresion -> . ECHO CADENA PCOMA
    (62) repeticion -> . FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE
    (63) repeticion -> . WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE
    (64) repeticion -> . DO LLLAVE sentencias ID actualizar PCOMA RLLAVE WHILE LPAREN ID opcomparacion valor RPAREN PCOMA
    (46) expresion -> . expresionmat
    (47) expresion -> . expcmplog
    (53) excepcion -> . TRY LLLAVE sentencias RLLAVE CATCH LPAREN EXCEPTION ID RPAREN LLLAVE ECHO CADENA COMA ID FLECHA GETMESSAGE RLLAVE
    (37) sort -> . SORT LPAREN ID RPAREN PCOMA
    (41) expresionmat -> . NUMBER operadormat NUMBER
    (25) expcmplog -> . expcmp oplog expcmp
    (26) expcmplog -> . expcmp oplog expcmplog
    (22) expcmp -> . valor opcomparacion valor
    (23) expcmp -> . LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN
    (24) expcmp -> . LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN oplog expcmp
    (13) valor -> . ID
    (14) valor -> . NUMBER
    (15) valor -> . CADENA
    (16) valor -> . BOOLEAN

    ID              shift and go to state 11
    IF              shift and go to state 13
    FUNCTION        shift and go to state 18
    ECHO            shift and go to state 19
    FOR             shift and go to state 21
    WHILE           shift and go to state 23
    DO              shift and go to state 24
    TRY             shift and go to state 26
    SORT            shift and go to state 27
    NUMBER          shift and go to state 22
    LPAREN          shift and go to state 14
    CADENA          shift and go to state 20
    BOOLEAN         shift and go to state 28

    expcmp                         shift and go to state 15
    sentencias                     shift and go to state 176
    asignacion                     shift and go to state 4
    comparacion                    shift and go to state 5
    funcion                        shift and go to state 6
    impresion                      shift and go to state 7
    repeticion                     shift and go to state 8
    expresion                      shift and go to state 9
    excepcion                      shift and go to state 10
    valor                          shift and go to state 12
    expcmplog                      shift and go to state 16
    sort                           shift and go to state 17
    expresionmat                   shift and go to state 25

state 166

    (34) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN . expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (22) expcmp -> . valor opcomparacion valor
    (23) expcmp -> . LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN
    (24) expcmp -> . LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN oplog expcmp
    (13) valor -> . ID
    (14) valor -> . NUMBER
    (15) valor -> . CADENA
    (16) valor -> . BOOLEAN

    LPAREN          shift and go to state 14
    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    CADENA          shift and go to state 20
    BOOLEAN         shift and go to state 28

    expcmp                         shift and go to state 177
    valor                          shift and go to state 12

state 167

    (23) expcmp -> LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion . valor RPAREN
    (24) expcmp -> LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion . valor RPAREN oplog expcmp
    (13) valor -> . ID
    (14) valor -> . NUMBER
    (15) valor -> . CADENA
    (16) valor -> . BOOLEAN

    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    CADENA          shift and go to state 20
    BOOLEAN         shift and go to state 28

    valor                          shift and go to state 178

state 168

    (49) funcion -> FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RLLAVE .

    FIN             reduce using rule 49 (funcion -> FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RLLAVE .)
    ID              reduce using rule 49 (funcion -> FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 49 (funcion -> FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RLLAVE .)
    COMA            reduce using rule 49 (funcion -> FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RLLAVE .)
    RETURN          reduce using rule 49 (funcion -> FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RLLAVE .)


state 169

    (50) funcion -> FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RETURN . valor PCOMA RLLAVE
    (13) valor -> . ID
    (14) valor -> . NUMBER
    (15) valor -> . CADENA
    (16) valor -> . BOOLEAN

    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    CADENA          shift and go to state 20
    BOOLEAN         shift and go to state 28

    valor                          shift and go to state 179

state 170

    (62) repeticion -> FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER . PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE

    PCOMA           shift and go to state 180


state 171

    (63) repeticion -> WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID . actualizar PCOMA RLLAVE
    (60) actualizar -> . INCREMENTO
    (61) actualizar -> . DECREMENTO

    INCREMENTO      shift and go to state 116
    DECREMENTO      shift and go to state 117

    actualizar                     shift and go to state 181

state 172

    (64) repeticion -> DO LLLAVE sentencias ID actualizar PCOMA RLLAVE WHILE LPAREN . ID opcomparacion valor RPAREN PCOMA

    ID              shift and go to state 182


state 173

    (53) excepcion -> TRY LLLAVE sentencias RLLAVE CATCH LPAREN EXCEPTION ID RPAREN . LLLAVE ECHO CADENA COMA ID FLECHA GETMESSAGE RLLAVE

    LLLAVE          shift and go to state 183


state 174

    (67) heap -> LPAREN ARRAY LPAREN valor DOUBLE_ARROW NUMBER RPAREN RPAREN . PCOMA

    PCOMA           shift and go to state 184


state 175

    (66) heap -> HEAP DOUBLE_ARROW INSERT LPAREN LCORCH NUMBER COMA NUMBER . RCORCH RPAREN PCOMA

    RCORCH          shift and go to state 185


state 176

    (33) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias . RLLAVE

    RLLAVE          shift and go to state 186


state 177

    (34) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp . RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE

    RPAREN          shift and go to state 187


state 178

    (23) expcmp -> LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor . RPAREN
    (24) expcmp -> LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor . RPAREN oplog expcmp

    RPAREN          shift and go to state 188


state 179

    (50) funcion -> FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RETURN valor . PCOMA RLLAVE

    PCOMA           shift and go to state 189


state 180

    (62) repeticion -> FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA . ID actualizar RPAREN LLLAVE sentencias RLLAVE

    ID              shift and go to state 190


state 181

    (63) repeticion -> WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar . PCOMA RLLAVE

    PCOMA           shift and go to state 191


state 182

    (64) repeticion -> DO LLLAVE sentencias ID actualizar PCOMA RLLAVE WHILE LPAREN ID . opcomparacion valor RPAREN PCOMA
    (17) opcomparacion -> . IGUAL
    (18) opcomparacion -> . MAYOR
    (19) opcomparacion -> . MENOR
    (20) opcomparacion -> . MAYORIGUAL
    (21) opcomparacion -> . MENORIGUAL

    IGUAL           shift and go to state 33
    MAYOR           shift and go to state 34
    MENOR           shift and go to state 35
    MAYORIGUAL      shift and go to state 36
    MENORIGUAL      shift and go to state 37

    opcomparacion                  shift and go to state 192

state 183

    (53) excepcion -> TRY LLLAVE sentencias RLLAVE CATCH LPAREN EXCEPTION ID RPAREN LLLAVE . ECHO CADENA COMA ID FLECHA GETMESSAGE RLLAVE

    ECHO            shift and go to state 193


state 184

    (67) heap -> LPAREN ARRAY LPAREN valor DOUBLE_ARROW NUMBER RPAREN RPAREN PCOMA .

    PCOMA           reduce using rule 67 (heap -> LPAREN ARRAY LPAREN valor DOUBLE_ARROW NUMBER RPAREN RPAREN PCOMA .)


state 185

    (66) heap -> HEAP DOUBLE_ARROW INSERT LPAREN LCORCH NUMBER COMA NUMBER RCORCH . RPAREN PCOMA

    RPAREN          shift and go to state 194


state 186

    (33) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .

    FIN             reduce using rule 33 (comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    ID              reduce using rule 33 (comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 33 (comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    RETURN          reduce using rule 33 (comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)


state 187

    (34) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN . LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE

    LLLAVE          shift and go to state 195


state 188

    (23) expcmp -> LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN .
    (24) expcmp -> LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN . oplog expcmp
    (27) oplog -> . BOOLEAN_OR
    (28) oplog -> . BOOLEAN_AND
    (29) oplog -> . AND
    (30) oplog -> . OR

  ! shift/reduce conflict for BOOLEAN_OR resolved as shift
  ! shift/reduce conflict for BOOLEAN_AND resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    RPAREN          reduce using rule 23 (expcmp -> LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN .)
    FIN             reduce using rule 23 (expcmp -> LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN .)
    PCOMA           reduce using rule 23 (expcmp -> LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN .)
    ID              reduce using rule 23 (expcmp -> LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN .)
    RLLAVE          reduce using rule 23 (expcmp -> LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN .)
    RETURN          reduce using rule 23 (expcmp -> LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN .)
    BOOLEAN_OR      shift and go to state 43
    BOOLEAN_AND     shift and go to state 44
    AND             shift and go to state 45
    OR              shift and go to state 46

  ! BOOLEAN_OR      [ reduce using rule 23 (expcmp -> LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN .) ]
  ! BOOLEAN_AND     [ reduce using rule 23 (expcmp -> LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN .) ]
  ! AND             [ reduce using rule 23 (expcmp -> LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN .) ]
  ! OR              [ reduce using rule 23 (expcmp -> LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN .) ]

    oplog                          shift and go to state 196

state 189

    (50) funcion -> FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RETURN valor PCOMA . RLLAVE

    RLLAVE          shift and go to state 197


state 190

    (62) repeticion -> FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID . actualizar RPAREN LLLAVE sentencias RLLAVE
    (60) actualizar -> . INCREMENTO
    (61) actualizar -> . DECREMENTO

    INCREMENTO      shift and go to state 116
    DECREMENTO      shift and go to state 117

    actualizar                     shift and go to state 198

state 191

    (63) repeticion -> WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA . RLLAVE

    RLLAVE          shift and go to state 199


state 192

    (64) repeticion -> DO LLLAVE sentencias ID actualizar PCOMA RLLAVE WHILE LPAREN ID opcomparacion . valor RPAREN PCOMA
    (13) valor -> . ID
    (14) valor -> . NUMBER
    (15) valor -> . CADENA
    (16) valor -> . BOOLEAN

    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    CADENA          shift and go to state 20
    BOOLEAN         shift and go to state 28

    valor                          shift and go to state 200

state 193

    (53) excepcion -> TRY LLLAVE sentencias RLLAVE CATCH LPAREN EXCEPTION ID RPAREN LLLAVE ECHO . CADENA COMA ID FLECHA GETMESSAGE RLLAVE

    CADENA          shift and go to state 201


state 194

    (66) heap -> HEAP DOUBLE_ARROW INSERT LPAREN LCORCH NUMBER COMA NUMBER RCORCH RPAREN . PCOMA

    PCOMA           shift and go to state 202


state 195

    (34) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE . sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (2) sentencias -> . asignacion
    (3) sentencias -> . comparacion
    (4) sentencias -> . funcion
    (5) sentencias -> . impresion
    (6) sentencias -> . repeticion
    (7) sentencias -> . expresion
    (8) sentencias -> . excepcion
    (9) asignacion -> . ID ASIGNACION valor PCOMA
    (10) asignacion -> . ID REF ID PCOMA
    (11) asignacion -> . ID ASIGNACION estdatos PCOMA
    (12) asignacion -> . ID ASIGNACION expresion PCOMA
    (31) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE
    (32) comparacion -> . IF LPAREN expcmplog RPAREN LLLAVE sentencias RLLAVE
    (33) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (34) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (48) funcion -> . sort
    (49) funcion -> . FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RLLAVE
    (50) funcion -> . FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RETURN valor PCOMA RLLAVE
    (54) impresion -> . ECHO ID PCOMA
    (55) impresion -> . ECHO CADENA PCOMA
    (62) repeticion -> . FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE
    (63) repeticion -> . WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE
    (64) repeticion -> . DO LLLAVE sentencias ID actualizar PCOMA RLLAVE WHILE LPAREN ID opcomparacion valor RPAREN PCOMA
    (46) expresion -> . expresionmat
    (47) expresion -> . expcmplog
    (53) excepcion -> . TRY LLLAVE sentencias RLLAVE CATCH LPAREN EXCEPTION ID RPAREN LLLAVE ECHO CADENA COMA ID FLECHA GETMESSAGE RLLAVE
    (37) sort -> . SORT LPAREN ID RPAREN PCOMA
    (41) expresionmat -> . NUMBER operadormat NUMBER
    (25) expcmplog -> . expcmp oplog expcmp
    (26) expcmplog -> . expcmp oplog expcmplog
    (22) expcmp -> . valor opcomparacion valor
    (23) expcmp -> . LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN
    (24) expcmp -> . LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN oplog expcmp
    (13) valor -> . ID
    (14) valor -> . NUMBER
    (15) valor -> . CADENA
    (16) valor -> . BOOLEAN

    ID              shift and go to state 11
    IF              shift and go to state 13
    FUNCTION        shift and go to state 18
    ECHO            shift and go to state 19
    FOR             shift and go to state 21
    WHILE           shift and go to state 23
    DO              shift and go to state 24
    TRY             shift and go to state 26
    SORT            shift and go to state 27
    NUMBER          shift and go to state 22
    LPAREN          shift and go to state 14
    CADENA          shift and go to state 20
    BOOLEAN         shift and go to state 28

    expcmp                         shift and go to state 15
    sentencias                     shift and go to state 203
    asignacion                     shift and go to state 4
    comparacion                    shift and go to state 5
    funcion                        shift and go to state 6
    impresion                      shift and go to state 7
    repeticion                     shift and go to state 8
    expresion                      shift and go to state 9
    excepcion                      shift and go to state 10
    valor                          shift and go to state 12
    expcmplog                      shift and go to state 16
    sort                           shift and go to state 17
    expresionmat                   shift and go to state 25

state 196

    (24) expcmp -> LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN oplog . expcmp
    (22) expcmp -> . valor opcomparacion valor
    (23) expcmp -> . LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN
    (24) expcmp -> . LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN oplog expcmp
    (13) valor -> . ID
    (14) valor -> . NUMBER
    (15) valor -> . CADENA
    (16) valor -> . BOOLEAN

    LPAREN          shift and go to state 14
    ID              shift and go to state 40
    NUMBER          shift and go to state 41
    CADENA          shift and go to state 20
    BOOLEAN         shift and go to state 28

    valor                          shift and go to state 12
    expcmp                         shift and go to state 204

state 197

    (50) funcion -> FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RETURN valor PCOMA RLLAVE .

    FIN             reduce using rule 50 (funcion -> FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RETURN valor PCOMA RLLAVE .)
    ID              reduce using rule 50 (funcion -> FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RETURN valor PCOMA RLLAVE .)
    RLLAVE          reduce using rule 50 (funcion -> FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RETURN valor PCOMA RLLAVE .)
    COMA            reduce using rule 50 (funcion -> FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RETURN valor PCOMA RLLAVE .)
    RETURN          reduce using rule 50 (funcion -> FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RETURN valor PCOMA RLLAVE .)


state 198

    (62) repeticion -> FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar . RPAREN LLLAVE sentencias RLLAVE

    RPAREN          shift and go to state 205


state 199

    (63) repeticion -> WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE .

    FIN             reduce using rule 63 (repeticion -> WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE .)
    ID              reduce using rule 63 (repeticion -> WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE .)
    RLLAVE          reduce using rule 63 (repeticion -> WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE .)
    RETURN          reduce using rule 63 (repeticion -> WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE .)


state 200

    (64) repeticion -> DO LLLAVE sentencias ID actualizar PCOMA RLLAVE WHILE LPAREN ID opcomparacion valor . RPAREN PCOMA

    RPAREN          shift and go to state 206


state 201

    (53) excepcion -> TRY LLLAVE sentencias RLLAVE CATCH LPAREN EXCEPTION ID RPAREN LLLAVE ECHO CADENA . COMA ID FLECHA GETMESSAGE RLLAVE

    COMA            shift and go to state 207


state 202

    (66) heap -> HEAP DOUBLE_ARROW INSERT LPAREN LCORCH NUMBER COMA NUMBER RCORCH RPAREN PCOMA .

    PCOMA           reduce using rule 66 (heap -> HEAP DOUBLE_ARROW INSERT LPAREN LCORCH NUMBER COMA NUMBER RCORCH RPAREN PCOMA .)


state 203

    (34) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias . RLLAVE ELSE LLLAVE sentencias RLLAVE

    RLLAVE          shift and go to state 208


state 204

    (24) expcmp -> LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN oplog expcmp .

    BOOLEAN_OR      reduce using rule 24 (expcmp -> LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN oplog expcmp .)
    BOOLEAN_AND     reduce using rule 24 (expcmp -> LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN oplog expcmp .)
    AND             reduce using rule 24 (expcmp -> LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN oplog expcmp .)
    OR              reduce using rule 24 (expcmp -> LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN oplog expcmp .)
    RPAREN          reduce using rule 24 (expcmp -> LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN oplog expcmp .)
    FIN             reduce using rule 24 (expcmp -> LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN oplog expcmp .)
    PCOMA           reduce using rule 24 (expcmp -> LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN oplog expcmp .)
    ID              reduce using rule 24 (expcmp -> LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN oplog expcmp .)
    RLLAVE          reduce using rule 24 (expcmp -> LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN oplog expcmp .)
    RETURN          reduce using rule 24 (expcmp -> LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN oplog expcmp .)


state 205

    (62) repeticion -> FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN . LLLAVE sentencias RLLAVE

    LLLAVE          shift and go to state 209


state 206

    (64) repeticion -> DO LLLAVE sentencias ID actualizar PCOMA RLLAVE WHILE LPAREN ID opcomparacion valor RPAREN . PCOMA

    PCOMA           shift and go to state 210


state 207

    (53) excepcion -> TRY LLLAVE sentencias RLLAVE CATCH LPAREN EXCEPTION ID RPAREN LLLAVE ECHO CADENA COMA . ID FLECHA GETMESSAGE RLLAVE

    ID              shift and go to state 211


state 208

    (34) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE . ELSE LLLAVE sentencias RLLAVE

    ELSE            shift and go to state 212


state 209

    (62) repeticion -> FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE . sentencias RLLAVE
    (2) sentencias -> . asignacion
    (3) sentencias -> . comparacion
    (4) sentencias -> . funcion
    (5) sentencias -> . impresion
    (6) sentencias -> . repeticion
    (7) sentencias -> . expresion
    (8) sentencias -> . excepcion
    (9) asignacion -> . ID ASIGNACION valor PCOMA
    (10) asignacion -> . ID REF ID PCOMA
    (11) asignacion -> . ID ASIGNACION estdatos PCOMA
    (12) asignacion -> . ID ASIGNACION expresion PCOMA
    (31) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE
    (32) comparacion -> . IF LPAREN expcmplog RPAREN LLLAVE sentencias RLLAVE
    (33) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (34) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (48) funcion -> . sort
    (49) funcion -> . FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RLLAVE
    (50) funcion -> . FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RETURN valor PCOMA RLLAVE
    (54) impresion -> . ECHO ID PCOMA
    (55) impresion -> . ECHO CADENA PCOMA
    (62) repeticion -> . FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE
    (63) repeticion -> . WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE
    (64) repeticion -> . DO LLLAVE sentencias ID actualizar PCOMA RLLAVE WHILE LPAREN ID opcomparacion valor RPAREN PCOMA
    (46) expresion -> . expresionmat
    (47) expresion -> . expcmplog
    (53) excepcion -> . TRY LLLAVE sentencias RLLAVE CATCH LPAREN EXCEPTION ID RPAREN LLLAVE ECHO CADENA COMA ID FLECHA GETMESSAGE RLLAVE
    (37) sort -> . SORT LPAREN ID RPAREN PCOMA
    (41) expresionmat -> . NUMBER operadormat NUMBER
    (25) expcmplog -> . expcmp oplog expcmp
    (26) expcmplog -> . expcmp oplog expcmplog
    (22) expcmp -> . valor opcomparacion valor
    (23) expcmp -> . LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN
    (24) expcmp -> . LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN oplog expcmp
    (13) valor -> . ID
    (14) valor -> . NUMBER
    (15) valor -> . CADENA
    (16) valor -> . BOOLEAN

    ID              shift and go to state 11
    IF              shift and go to state 13
    FUNCTION        shift and go to state 18
    ECHO            shift and go to state 19
    FOR             shift and go to state 21
    WHILE           shift and go to state 23
    DO              shift and go to state 24
    TRY             shift and go to state 26
    SORT            shift and go to state 27
    NUMBER          shift and go to state 22
    LPAREN          shift and go to state 14
    CADENA          shift and go to state 20
    BOOLEAN         shift and go to state 28

    sentencias                     shift and go to state 213
    asignacion                     shift and go to state 4
    comparacion                    shift and go to state 5
    funcion                        shift and go to state 6
    impresion                      shift and go to state 7
    repeticion                     shift and go to state 8
    expresion                      shift and go to state 9
    excepcion                      shift and go to state 10
    valor                          shift and go to state 12
    expcmp                         shift and go to state 15
    expcmplog                      shift and go to state 16
    sort                           shift and go to state 17
    expresionmat                   shift and go to state 25

state 210

    (64) repeticion -> DO LLLAVE sentencias ID actualizar PCOMA RLLAVE WHILE LPAREN ID opcomparacion valor RPAREN PCOMA .

    FIN             reduce using rule 64 (repeticion -> DO LLLAVE sentencias ID actualizar PCOMA RLLAVE WHILE LPAREN ID opcomparacion valor RPAREN PCOMA .)
    ID              reduce using rule 64 (repeticion -> DO LLLAVE sentencias ID actualizar PCOMA RLLAVE WHILE LPAREN ID opcomparacion valor RPAREN PCOMA .)
    RLLAVE          reduce using rule 64 (repeticion -> DO LLLAVE sentencias ID actualizar PCOMA RLLAVE WHILE LPAREN ID opcomparacion valor RPAREN PCOMA .)
    RETURN          reduce using rule 64 (repeticion -> DO LLLAVE sentencias ID actualizar PCOMA RLLAVE WHILE LPAREN ID opcomparacion valor RPAREN PCOMA .)


state 211

    (53) excepcion -> TRY LLLAVE sentencias RLLAVE CATCH LPAREN EXCEPTION ID RPAREN LLLAVE ECHO CADENA COMA ID . FLECHA GETMESSAGE RLLAVE

    FLECHA          shift and go to state 214


state 212

    (34) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE . LLLAVE sentencias RLLAVE

    LLLAVE          shift and go to state 215


state 213

    (62) repeticion -> FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias . RLLAVE

    RLLAVE          shift and go to state 216


state 214

    (53) excepcion -> TRY LLLAVE sentencias RLLAVE CATCH LPAREN EXCEPTION ID RPAREN LLLAVE ECHO CADENA COMA ID FLECHA . GETMESSAGE RLLAVE

    GETMESSAGE      shift and go to state 217


state 215

    (34) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE . sentencias RLLAVE
    (2) sentencias -> . asignacion
    (3) sentencias -> . comparacion
    (4) sentencias -> . funcion
    (5) sentencias -> . impresion
    (6) sentencias -> . repeticion
    (7) sentencias -> . expresion
    (8) sentencias -> . excepcion
    (9) asignacion -> . ID ASIGNACION valor PCOMA
    (10) asignacion -> . ID REF ID PCOMA
    (11) asignacion -> . ID ASIGNACION estdatos PCOMA
    (12) asignacion -> . ID ASIGNACION expresion PCOMA
    (31) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE
    (32) comparacion -> . IF LPAREN expcmplog RPAREN LLLAVE sentencias RLLAVE
    (33) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (34) comparacion -> . IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE
    (48) funcion -> . sort
    (49) funcion -> . FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RLLAVE
    (50) funcion -> . FUNCTION NFUNCION ID LPAREN args RPAREN LLLAVE sentencias RETURN valor PCOMA RLLAVE
    (54) impresion -> . ECHO ID PCOMA
    (55) impresion -> . ECHO CADENA PCOMA
    (62) repeticion -> . FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE
    (63) repeticion -> . WHILE LPAREN ID opcomparacion valor RPAREN LLLAVE sentencias ID actualizar PCOMA RLLAVE
    (64) repeticion -> . DO LLLAVE sentencias ID actualizar PCOMA RLLAVE WHILE LPAREN ID opcomparacion valor RPAREN PCOMA
    (46) expresion -> . expresionmat
    (47) expresion -> . expcmplog
    (53) excepcion -> . TRY LLLAVE sentencias RLLAVE CATCH LPAREN EXCEPTION ID RPAREN LLLAVE ECHO CADENA COMA ID FLECHA GETMESSAGE RLLAVE
    (37) sort -> . SORT LPAREN ID RPAREN PCOMA
    (41) expresionmat -> . NUMBER operadormat NUMBER
    (25) expcmplog -> . expcmp oplog expcmp
    (26) expcmplog -> . expcmp oplog expcmplog
    (22) expcmp -> . valor opcomparacion valor
    (23) expcmp -> . LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN
    (24) expcmp -> . LPAREN valor opcomparacion valor RPAREN oplog LPAREN valor opcomparacion valor RPAREN oplog expcmp
    (13) valor -> . ID
    (14) valor -> . NUMBER
    (15) valor -> . CADENA
    (16) valor -> . BOOLEAN

    ID              shift and go to state 11
    IF              shift and go to state 13
    FUNCTION        shift and go to state 18
    ECHO            shift and go to state 19
    FOR             shift and go to state 21
    WHILE           shift and go to state 23
    DO              shift and go to state 24
    TRY             shift and go to state 26
    SORT            shift and go to state 27
    NUMBER          shift and go to state 22
    LPAREN          shift and go to state 14
    CADENA          shift and go to state 20
    BOOLEAN         shift and go to state 28

    expcmp                         shift and go to state 15
    sentencias                     shift and go to state 218
    asignacion                     shift and go to state 4
    comparacion                    shift and go to state 5
    funcion                        shift and go to state 6
    impresion                      shift and go to state 7
    repeticion                     shift and go to state 8
    expresion                      shift and go to state 9
    excepcion                      shift and go to state 10
    valor                          shift and go to state 12
    expcmplog                      shift and go to state 16
    sort                           shift and go to state 17
    expresionmat                   shift and go to state 25

state 216

    (62) repeticion -> FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE .

    FIN             reduce using rule 62 (repeticion -> FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE .)
    ID              reduce using rule 62 (repeticion -> FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 62 (repeticion -> FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE .)
    RETURN          reduce using rule 62 (repeticion -> FOR LPAREN ID ASIGNACION NUMBER PCOMA ID repeticionrep NUMBER PCOMA ID actualizar RPAREN LLLAVE sentencias RLLAVE .)


state 217

    (53) excepcion -> TRY LLLAVE sentencias RLLAVE CATCH LPAREN EXCEPTION ID RPAREN LLLAVE ECHO CADENA COMA ID FLECHA GETMESSAGE . RLLAVE

    RLLAVE          shift and go to state 219


state 218

    (34) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias . RLLAVE

    RLLAVE          shift and go to state 220


state 219

    (53) excepcion -> TRY LLLAVE sentencias RLLAVE CATCH LPAREN EXCEPTION ID RPAREN LLLAVE ECHO CADENA COMA ID FLECHA GETMESSAGE RLLAVE .

    FIN             reduce using rule 53 (excepcion -> TRY LLLAVE sentencias RLLAVE CATCH LPAREN EXCEPTION ID RPAREN LLLAVE ECHO CADENA COMA ID FLECHA GETMESSAGE RLLAVE .)
    ID              reduce using rule 53 (excepcion -> TRY LLLAVE sentencias RLLAVE CATCH LPAREN EXCEPTION ID RPAREN LLLAVE ECHO CADENA COMA ID FLECHA GETMESSAGE RLLAVE .)
    RLLAVE          reduce using rule 53 (excepcion -> TRY LLLAVE sentencias RLLAVE CATCH LPAREN EXCEPTION ID RPAREN LLLAVE ECHO CADENA COMA ID FLECHA GETMESSAGE RLLAVE .)
    RETURN          reduce using rule 53 (excepcion -> TRY LLLAVE sentencias RLLAVE CATCH LPAREN EXCEPTION ID RPAREN LLLAVE ECHO CADENA COMA ID FLECHA GETMESSAGE RLLAVE .)


state 220

    (34) comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .

    FIN             reduce using rule 34 (comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    ID              reduce using rule 34 (comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    RLLAVE          reduce using rule 34 (comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)
    RETURN          reduce using rule 34 (comparacion -> IF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSEIF LPAREN expcmp RPAREN LLLAVE sentencias RLLAVE ELSE LLLAVE sentencias RLLAVE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for BOOLEAN_OR in state 188 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN_AND in state 188 resolved as shift
WARNING: shift/reduce conflict for AND in state 188 resolved as shift
WARNING: shift/reduce conflict for OR in state 188 resolved as shift
